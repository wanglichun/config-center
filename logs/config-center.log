2025-08-08 09:38:02 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/NaN
2025-08-08 09:38:03 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:38:04 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/NaN] with attributes [authenticated]
2025-08-08 09:38:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/NaN
2025-08-08 09:38:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:38:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1cfd1c259e2f4edaa7395c2412346952, requestId=req_2d4befe0, url=/config-center/api/ticket/NaN
2025-08-08 09:38:05 [http-nio-9090-exec-5] WARN  c.e.configcenter.exception.GlobalExceptionHandler - 参数类型不匹配: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "NaN"
2025-08-08 09:38:05 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:38:05 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:38:05 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:38:05 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1cfd1c259e2f4edaa7395c2412346952
2025-08-08 09:38:05 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1cfd1c259e2f4edaa7395c2412346952, duration=82ms, status=400
2025-08-08 09:38:05 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/NaN
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/NaN] with attributes [authenticated]
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/NaN
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d6d2ea326d8f4121b68fc3abb9adeb72, requestId=req_57afa21c, url=/config-center/api/ticket/NaN
2025-08-08 09:38:13 [http-nio-9090-exec-10] WARN  c.e.configcenter.exception.GlobalExceptionHandler - 参数类型不匹配: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "NaN"
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d6d2ea326d8f4121b68fc3abb9adeb72
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d6d2ea326d8f4121b68fc3abb9adeb72, duration=14ms, status=400
2025-08-08 09:38:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:38:14 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:38:14 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_787bf423ceb64bc68a31d3e18259d861, requestId=req_8dddefa3, url=/config-center/api/enum/get_all_enum
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_787bf423ceb64bc68a31d3e18259d861
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_787bf423ceb64bc68a31d3e18259d861, duration=35ms, status=200
2025-08-08 09:38:14 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2e4ca6a02e02482690b1080114eede7e, requestId=req_9424d572, url=/config-center/api/config/page
2025-08-08 09:38:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:38:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:38:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2e4ca6a02e02482690b1080114eede7e
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=238ms, rowsAffected=5
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2e4ca6a02e02482690b1080114eede7e
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=50ms, rowsAffected=5
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2e4ca6a02e02482690b1080114eede7e
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2e4ca6a02e02482690b1080114eede7e, duration=347ms, status=200
2025-08-08 09:38:15 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:40:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:40:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:40:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:45:24 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:45:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:45:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_60aec7ba33d247ec808b2be9d18fa675, requestId=req_f9ef51b3, url=/config-center/api/config/10
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bed152becc434144bc1d098162454976, requestId=req_eb14453c, url=/config-center/api/config/history
2025-08-08 09:45:25 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_60aec7ba33d247ec808b2be9d18fa675
2025-08-08 09:45:25 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=14ms, rowsAffected=1
2025-08-08 09:45:25 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:45:25 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:45:25 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 09:45:25 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_60aec7ba33d247ec808b2be9d18fa675
2025-08-08 09:45:25 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_60aec7ba33d247ec808b2be9d18fa675, duration=249ms, status=200
2025-08-08 09:45:25 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bed152becc434144bc1d098162454976
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=261ms, rowsAffected=7
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bed152becc434144bc1d098162454976
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=45ms, rowsAffected=7
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bed152becc434144bc1d098162454976
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bed152becc434144bc1d098162454976, duration=335ms, status=200
2025-08-08 09:45:25 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:45:32 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 09:45:32 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:45:32 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:45:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_afff43d7485b41eb92e2fb627d1e60a0, requestId=req_7e6f8345, url=/config-center/api/enum/get_all_enum
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_afff43d7485b41eb92e2fb627d1e60a0
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_afff43d7485b41eb92e2fb627d1e60a0, duration=6ms, status=200
2025-08-08 09:45:33 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e9d6f0c6b2334b55bd076eb672a0bab0, requestId=req_b5b8ca82, url=/config-center/api/config/page
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e9d6f0c6b2334b55bd076eb672a0bab0
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=32ms, rowsAffected=5
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e9d6f0c6b2334b55bd076eb672a0bab0
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=6ms, rowsAffected=5
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e9d6f0c6b2334b55bd076eb672a0bab0
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e9d6f0c6b2334b55bd076eb672a0bab0, duration=50ms, status=200
2025-08-08 09:45:33 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:45:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_49f20964ee804d179179b0ba3f5fa5e7, requestId=req_c62f5ebd, url=/config-center/api/ticket/page
2025-08-08 09:45:34 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_49f20964ee804d179179b0ba3f5fa5e7
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=166ms, rowsAffected=10
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_49f20964ee804d179179b0ba3f5fa5e7
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=29ms, rowsAffected=12
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_49f20964ee804d179179b0ba3f5fa5e7
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_49f20964ee804d179179b0ba3f5fa5e7, duration=401ms, status=200
2025-08-08 09:45:35 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:49:13 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:49:13 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:49:17 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:49:17 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:49:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:49:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a420e646bb6f4bebb4dfd86bba694651, requestId=req_8562d1ac, url=/config-center/api/ticket/page
2025-08-08 09:49:17 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a420e646bb6f4bebb4dfd86bba694651
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=646ms, rowsAffected=10
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a420e646bb6f4bebb4dfd86bba694651
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=172ms, rowsAffected=12
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a420e646bb6f4bebb4dfd86bba694651
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a420e646bb6f4bebb4dfd86bba694651, duration=979ms, status=200
2025-08-08 09:49:18 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:50:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:50:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:50:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 09:50:26 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:50:26 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f75c716d22d345bab73fe95b4082deea, requestId=req_3f54eb4e, url=/config-center/api/ticket/page
2025-08-08 09:50:27 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f75c716d22d345bab73fe95b4082deea
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=250ms, rowsAffected=10
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f75c716d22d345bab73fe95b4082deea
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=15ms, rowsAffected=12
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f75c716d22d345bab73fe95b4082deea
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f75c716d22d345bab73fe95b4082deea, duration=341ms, status=200
2025-08-08 09:50:27 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cef3fcd41c9a4549a089ca43f97c6298, requestId=req_2539dba6, url=/config-center/api/enum/get_all_enum
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cef3fcd41c9a4549a089ca43f97c6298
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cef3fcd41c9a4549a089ca43f97c6298, duration=24ms, status=200
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:50:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_10f3c1c158d14884888b752f42f83691, requestId=req_7d64db89, url=/config-center/api/config/page
2025-08-08 09:50:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_10f3c1c158d14884888b752f42f83691
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=325ms, rowsAffected=5
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_10f3c1c158d14884888b752f42f83691
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=42ms, rowsAffected=5
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_10f3c1c158d14884888b752f42f83691
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_10f3c1c158d14884888b752f42f83691, duration=413ms, status=200
2025-08-08 09:50:58 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad054f3a7b7047e8afac66bf47a0bb0a, requestId=req_706096df, url=/config-center/api/ticket/page
2025-08-08 09:50:58 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad054f3a7b7047e8afac66bf47a0bb0a
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=70ms, rowsAffected=10
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad054f3a7b7047e8afac66bf47a0bb0a
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=12ms, rowsAffected=12
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad054f3a7b7047e8afac66bf47a0bb0a
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad054f3a7b7047e8afac66bf47a0bb0a, duration=95ms, status=200
2025-08-08 09:50:58 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_24ef394cce3842ac96e1bd17450b45bd, requestId=req_eca2eb6a, url=/config-center/api/ticket/page
2025-08-08 09:51:41 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_24ef394cce3842ac96e1bd17450b45bd
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=35ms, rowsAffected=10
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_24ef394cce3842ac96e1bd17450b45bd
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=12
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_24ef394cce3842ac96e1bd17450b45bd
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_24ef394cce3842ac96e1bd17450b45bd, duration=119ms, status=200
2025-08-08 09:51:41 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:51:52 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a73a1f24346b4fd9a3ef81904cdd2243, requestId=req_f70902f8, url=/config-center/api/ticket/page
2025-08-08 09:51:53 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a73a1f24346b4fd9a3ef81904cdd2243
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=180ms, rowsAffected=10
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a73a1f24346b4fd9a3ef81904cdd2243
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=42ms, rowsAffected=12
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a73a1f24346b4fd9a3ef81904cdd2243
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a73a1f24346b4fd9a3ef81904cdd2243, duration=310ms, status=200
2025-08-08 09:51:53 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d61d4b3998734090bbaa47481ede2fd4, requestId=req_0b0f49b6, url=/config-center/api/ticket/page
2025-08-08 09:51:55 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d61d4b3998734090bbaa47481ede2fd4
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=38ms, rowsAffected=2
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d61d4b3998734090bbaa47481ede2fd4
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=11ms, rowsAffected=12
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d61d4b3998734090bbaa47481ede2fd4
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d61d4b3998734090bbaa47481ede2fd4, duration=67ms, status=200
2025-08-08 09:51:55 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5e72d4342dc146e881cf0b8a0fae2fc6, requestId=req_2f33094c, url=/config-center/api/ticket/page
2025-08-08 09:51:57 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=, applicator=, configId=null)
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5e72d4342dc146e881cf0b8a0fae2fc6
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=46ms, rowsAffected=10
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5e72d4342dc146e881cf0b8a0fae2fc6
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=13ms, rowsAffected=12
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5e72d4342dc146e881cf0b8a0fae2fc6
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5e72d4342dc146e881cf0b8a0fae2fc6, duration=73ms, status=200
2025-08-08 09:51:57 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:09:46 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0107 closed
2025-08-08 10:09:46 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0107
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:09:46 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:09:56 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 83982 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:09:56 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:09:56 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:09:57 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-08 10:09:58 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:09:58 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:09:58 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:09:58 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:09:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2196 ms
2025-08-08 10:09:58 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:09:59 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:10:00 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:10:00 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:10:00 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=50MB
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=100MB
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@4c9ef9c9
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:10:00 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:10:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:10:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:10:00 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:10:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:59078, server: localhost/127.0.0.1:2181
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:10:00 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:10:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0109, negotiated timeout = 40000
2025-08-08 10:10:00 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:10:00 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:10:00 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:10:00 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:10:01 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:10:01 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2b6ff016, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5aefdb9e, org.springframework.security.web.context.SecurityContextPersistenceFilter@170f0fd6, org.springframework.security.web.header.HeaderWriterFilter@5d8112e6, org.springframework.web.filter.CorsFilter@7a491a60, org.springframework.security.web.authentication.logout.LogoutFilter@543196f9, com.example.configcenter.security.JwtAuthenticationFilter@31b650e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@695c8b32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@577f81a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@80b6098, org.springframework.security.web.session.SessionManagementFilter@6c167296, org.springframework.security.web.access.ExceptionTranslationFilter@16a15261, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e564c78]
2025-08-08 10:10:01 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:10:02 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:10:02 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:10:02 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:10:02 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:10:02 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619002810
2025-08-08 10:10:03 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:10:03 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:10:03 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:10:03 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:10:03 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:10:03 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 7.553 seconds (JVM running for 10.381)
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:10:11 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_454c8e93dd194be7b71b2360a3409f59, requestId=req_08f67c62, url=/config-center/api/config/page
2025-08-08 10:10:11 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7b009756c8b74149b118ff8bf05279aa, requestId=req_d3d5b79c, url=/config-center/api/enum/get_all_enum
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:10:11 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619011993
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:10:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 10:10:12 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7b009756c8b74149b118ff8bf05279aa
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_454c8e93dd194be7b71b2360a3409f59
2025-08-08 10:10:12 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7b009756c8b74149b118ff8bf05279aa, duration=136ms, status=200
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=315ms, rowsAffected=5
2025-08-08 10:10:12 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_454c8e93dd194be7b71b2360a3409f59
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=25ms, rowsAffected=5
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_454c8e93dd194be7b71b2360a3409f59
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_454c8e93dd194be7b71b2360a3409f59, duration=605ms, status=200
2025-08-08 10:10:12 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3f73ea658e3b4d2faeb1b69660165a5d, requestId=req_e7afed51, url=/config-center/api/ticket/page
2025-08-08 10:10:19 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=null, applicator=, configId=null)
2025-08-08 10:10:19 [http-nio-9090-exec-3] ERROR c.e.configcenter.service.impl.TicketServiceImpl - 查询工单列表失败
java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:209)
	at java.base/java.util.ImmutableCollections$List12.<init>(ImmutableCollections.java:556)
	at java.base/java.util.List.of(List.java:812)
	at com.example.configcenter.service.impl.TicketServiceImpl.getTicketPage(TicketServiceImpl.java:49)
	at com.example.configcenter.service.impl.TicketServiceImpl$$FastClassBySpringCGLIB$$3bf036fa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.service.impl.TicketServiceImpl$$EnhancerBySpringCGLIB$$5e992293.getTicketPage(<generated>)
	at com.example.configcenter.controller.TicketController.getTicketPage(TicketController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-08 10:10:19 [http-nio-9090-exec-3] ERROR c.example.configcenter.controller.TicketController - 查询工单列表失败
java.lang.RuntimeException: 查询工单列表失败：null
	at com.example.configcenter.service.impl.TicketServiceImpl.getTicketPage(TicketServiceImpl.java:58)
	at com.example.configcenter.service.impl.TicketServiceImpl$$FastClassBySpringCGLIB$$3bf036fa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.service.impl.TicketServiceImpl$$EnhancerBySpringCGLIB$$5e992293.getTicketPage(<generated>)
	at com.example.configcenter.controller.TicketController.getTicketPage(TicketController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3f73ea658e3b4d2faeb1b69660165a5d
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3f73ea658e3b4d2faeb1b69660165a5d, duration=37ms, status=200
2025-08-08 10:10:19 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:12:39 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:12:39 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0109
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0109 closed
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:12:39 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:13:45 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 84484 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:13:45 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:13:45 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:13:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:13:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:13:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:13:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-08-08 10:13:51 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:13:51 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:13:51 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:13:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:13:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5930 ms
2025-08-08 10:13:52 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:13:53 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:13:54 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:13:54 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:13:54 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=36MB
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=108MB
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@663622b1
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:13:54 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:13:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:13:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:13:54 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:13:54 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:13:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:13:55 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:13:55 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:13:55 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:13:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:13:55 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@60739eca, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9ba167e, org.springframework.security.web.context.SecurityContextPersistenceFilter@58c80957, org.springframework.security.web.header.HeaderWriterFilter@6fa2d0b2, org.springframework.web.filter.CorsFilter@17873842, org.springframework.security.web.authentication.logout.LogoutFilter@1dbfbd94, com.example.configcenter.security.JwtAuthenticationFilter@75959b0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78c5ef58, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e581302, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@147aceec, org.springframework.security.web.session.SessionManagementFilter@5b8b9b2d, org.springframework.security.web.access.ExceptionTranslationFilter@351fadfa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f98fe6f]
2025-08-08 10:13:56 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:13:56 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:13:56 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:13:58 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:13:58 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:13:58 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:59375, server: localhost/127.0.0.1:2181
2025-08-08 10:13:58 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010a, negotiated timeout = 40000
2025-08-08 10:13:58 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:13:58 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:13:58 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:13:58 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:13:58 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:13:59 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:13:59 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:13:59 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:13:59 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:13:59 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619239548
2025-08-08 10:13:59 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:13:59 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:13:59 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:13:59 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:13:59 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:13:59 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 15.536 seconds (JVM running for 16.904)
2025-08-08 10:14:00 [RMI TCP Connection(6)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:14:00 [RMI TCP Connection(6)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:14:00 [RMI TCP Connection(6)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-08 10:14:00 [RMI TCP Connection(5)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9882d9dfb1a5475fb2d34dd6c1dcb124, requestId=req_31d786c8, url=/config-center/api/ticket/page
2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:14:08 [http-nio-9090-exec-1] ERROR c.e.configcenter.service.impl.TicketServiceImpl - 查询工单列表失败
java.lang.NullPointerException: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.base/java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006)
	at com.example.configcenter.log.LogSenderService.sendMysqlLog(LogSenderService.java:116)
	at com.example.configcenter.log.LogSenderService$$FastClassBySpringCGLIB$$28549b2c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.log.LogSenderService$$EnhancerBySpringCGLIB$$3ada17e9.sendMysqlLog(<generated>)
	at com.example.configcenter.interceptor.MysqlInterceptor.traceMysqlOperation(MysqlInterceptor.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy2/jdk.proxy2.$Proxy132.findByPage(Unknown Source)
	at com.example.configcenter.service.impl.TicketServiceImpl.getTicketPage(TicketServiceImpl.java:49)
	at com.example.configcenter.service.impl.TicketServiceImpl$$FastClassBySpringCGLIB$$3bf036fa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.service.impl.TicketServiceImpl$$EnhancerBySpringCGLIB$$8a2489d5.getTicketPage(<generated>)
	at com.example.configcenter.controller.TicketController.getTicketPage(TicketController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-08 10:14:08 [http-nio-9090-exec-1] ERROR c.example.configcenter.controller.TicketController - 查询工单列表失败
java.lang.RuntimeException: 查询工单列表失败：null
	at com.example.configcenter.service.impl.TicketServiceImpl.getTicketPage(TicketServiceImpl.java:58)
	at com.example.configcenter.service.impl.TicketServiceImpl$$FastClassBySpringCGLIB$$3bf036fa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.service.impl.TicketServiceImpl$$EnhancerBySpringCGLIB$$8a2489d5.getTicketPage(<generated>)
	at com.example.configcenter.controller.TicketController.getTicketPage(TicketController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:14:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619248574
2025-08-08 10:14:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:14:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:14:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:14:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9882d9dfb1a5475fb2d34dd6c1dcb124
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9882d9dfb1a5475fb2d34dd6c1dcb124, duration=102ms, status=200
2025-08-08 10:14:08 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:15:02 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010a closed
2025-08-08 10:15:02 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010a
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:15:02 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:15:05 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 84651 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:15:05 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:15:05 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:15:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 10:15:07 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:15:07 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:15:07 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:15:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:15:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2050 ms
2025-08-08 10:15:07 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:15:08 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:15:08 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:15:09 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:15:09 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=37MB
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=114MB
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7509226c
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:15:09 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:15:09 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:15:09 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:15:09 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:15:09 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:15:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:15:09 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:15:09 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@278cbf5a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c41931a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f03fdc0, org.springframework.security.web.header.HeaderWriterFilter@7a7bb083, org.springframework.web.filter.CorsFilter@62cb977a, org.springframework.security.web.authentication.logout.LogoutFilter@6ee07d7f, com.example.configcenter.security.JwtAuthenticationFilter@7538cfe6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@431923ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12b66c89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7db70494, org.springframework.security.web.session.SessionManagementFilter@3891b430, org.springframework.security.web.access.ExceptionTranslationFilter@2bfa5678, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e5e7753]
2025-08-08 10:15:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:15:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:15:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:59452, server: localhost/127.0.0.1:2181
2025-08-08 10:15:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010b, negotiated timeout = 40000
2025-08-08 10:15:10 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:15:10 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:15:10 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:15:10 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:15:10 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:15:11 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:15:11 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:15:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:15:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:15:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619311427
2025-08-08 10:15:11 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:15:11 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:15:11 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:15:11 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:15:11 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:15:11 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 6.694 seconds (JVM running for 7.362)
2025-08-08 10:15:12 [RMI TCP Connection(3)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:15:12 [RMI TCP Connection(3)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:15:12 [RMI TCP Connection(3)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 10:15:12 [RMI TCP Connection(2)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9170425113ff479db07b9efa9712b818, requestId=req_9e7a53e5, url=/config-center/api/ticket/page
2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:15:28 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754619328837
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9170425113ff479db07b9efa9712b818
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=41ms, rowsAffected=10
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9170425113ff479db07b9efa9712b818
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=5ms, rowsAffected=12
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:15:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9170425113ff479db07b9efa9712b818
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9170425113ff479db07b9efa9712b818, duration=453ms, status=200
2025-08-08 10:15:28 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_acd230a8367c44429edd6d1ba65645ff, requestId=req_3c19b473, url=/config-center/api/ticket/page
2025-08-08 10:17:30 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_acd230a8367c44429edd6d1ba65645ff
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=14ms, rowsAffected=10
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_acd230a8367c44429edd6d1ba65645ff
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=1ms, rowsAffected=12
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_acd230a8367c44429edd6d1ba65645ff
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_acd230a8367c44429edd6d1ba65645ff, duration=47ms, status=200
2025-08-08 10:17:30 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_20f0218b4ce34e49a8074cc6c9d204de, requestId=req_5a95770b, url=/config-center/api/ticket/page
2025-08-08 10:17:31 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_20f0218b4ce34e49a8074cc6c9d204de
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=10ms, rowsAffected=10
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_20f0218b4ce34e49a8074cc6c9d204de
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=26ms, rowsAffected=12
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_20f0218b4ce34e49a8074cc6c9d204de
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_20f0218b4ce34e49a8074cc6c9d204de, duration=44ms, status=200
2025-08-08 10:17:31 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0972fe949a354ff1a7166b7f9030cda0, requestId=req_399cf134, url=/config-center/api/ticket/page
2025-08-08 10:18:08 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0972fe949a354ff1a7166b7f9030cda0
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=57ms, rowsAffected=10
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0972fe949a354ff1a7166b7f9030cda0
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=16ms, rowsAffected=12
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0972fe949a354ff1a7166b7f9030cda0
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0972fe949a354ff1a7166b7f9030cda0, duration=85ms, status=200
2025-08-08 10:18:08 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_081b6a512aa442dbbec16d8d48247322, requestId=req_a781acf3, url=/config-center/api/ticket/page
2025-08-08 10:18:59 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_081b6a512aa442dbbec16d8d48247322
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=9ms, rowsAffected=10
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_081b6a512aa442dbbec16d8d48247322
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=17ms, rowsAffected=12
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_081b6a512aa442dbbec16d8d48247322
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_081b6a512aa442dbbec16d8d48247322, duration=36ms, status=200
2025-08-08 10:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:20:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:20:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:20:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:21:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5cd6cf5abfa0460aa89e40a4c1a7ec9a, requestId=req_f4b18648, url=/config-center/api/ticket/page
2025-08-08 10:21:59 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5cd6cf5abfa0460aa89e40a4c1a7ec9a
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=41ms, rowsAffected=10
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5cd6cf5abfa0460aa89e40a4c1a7ec9a
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=11ms, rowsAffected=12
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5cd6cf5abfa0460aa89e40a4c1a7ec9a
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5cd6cf5abfa0460aa89e40a4c1a7ec9a, duration=96ms, status=200
2025-08-08 10:21:59 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:24:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 10:29:14 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:29:14 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_029397c8bc1b4edf833d49ea969f2cb8, requestId=req_57d46719, url=/config-center/api/ticket/page
2025-08-08 10:29:17 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_029397c8bc1b4edf833d49ea969f2cb8
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=24ms, rowsAffected=10
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_029397c8bc1b4edf833d49ea969f2cb8
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=37ms, rowsAffected=12
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_029397c8bc1b4edf833d49ea969f2cb8
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_029397c8bc1b4edf833d49ea969f2cb8, duration=136ms, status=200
2025-08-08 10:29:17 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:19 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5e0aac65802b4f2bb6734c5660d47fd2, requestId=req_90f1aa98, url=/config-center/api/enum/get_all_enum
2025-08-08 10:29:20 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5e0aac65802b4f2bb6734c5660d47fd2
2025-08-08 10:29:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5e0aac65802b4f2bb6734c5660d47fd2, duration=97ms, status=200
2025-08-08 10:29:20 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bd01206bd842427c91ef72064c57e1ac, requestId=req_0133a138, url=/config-center/api/config/page
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bd01206bd842427c91ef72064c57e1ac
2025-08-08 10:29:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=333ms, rowsAffected=5
2025-08-08 10:29:21 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bd01206bd842427c91ef72064c57e1ac
2025-08-08 10:29:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=148ms, rowsAffected=5
2025-08-08 10:29:21 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bd01206bd842427c91ef72064c57e1ac
2025-08-08 10:29:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bd01206bd842427c91ef72064c57e1ac, duration=771ms, status=200
2025-08-08 10:29:21 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:25 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_103099afcee64102b7f6c91a91d13f12, requestId=req_079d8141, url=/config-center/api/config/10
2025-08-08 10:29:26 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_103099afcee64102b7f6c91a91d13f12
2025-08-08 10:29:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_103099afcee64102b7f6c91a91d13f12, duration=453ms, status=200
2025-08-08 10:29:26 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a307c6d8ba7d4a8fb93285f459a3aa36, requestId=req_b6dce2ea, url=/config-center/api/config/10
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a307c6d8ba7d4a8fb93285f459a3aa36
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=8ms, rowsAffected=1
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a307c6d8ba7d4a8fb93285f459a3aa36
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=108ms, rowsAffected=1
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a307c6d8ba7d4a8fb93285f459a3aa36
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a307c6d8ba7d4a8fb93285f459a3aa36, duration=242ms, status=200
2025-08-08 10:29:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_823bb379caf248e88499cbb8cd679732, requestId=req_f155eee8, url=/config-center/api/config/page
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_823bb379caf248e88499cbb8cd679732
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=10ms, rowsAffected=5
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_823bb379caf248e88499cbb8cd679732
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=28ms, rowsAffected=5
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_823bb379caf248e88499cbb8cd679732
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_823bb379caf248e88499cbb8cd679732, duration=46ms, status=200
2025-08-08 10:29:26 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e6c1bd8118e442e0841cd9c69a42bd0b, requestId=req_8c18ea2a, url=/config-center/api/config/page
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e6c1bd8118e442e0841cd9c69a42bd0b
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=30ms, rowsAffected=5
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e6c1bd8118e442e0841cd9c69a42bd0b
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=2ms, rowsAffected=5
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e6c1bd8118e442e0841cd9c69a42bd0b
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e6c1bd8118e442e0841cd9c69a42bd0b, duration=42ms, status=200
2025-08-08 10:29:45 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /actuator/health] with attributes [permitAll]
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-08 10:29:52 [http-nio-9090-exec-4] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:104)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:46)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:90)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:357)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:464)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 10:29:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6cd64322cfcf4a7bba3b6e01e89da021, requestId=req_b5cc7c64, url=/config-center/api/config/page
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_191886fbe7224be8aeb4773acd225e63, requestId=req_1f33cde0, url=/config-center/api/enum/get_all_enum
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_191886fbe7224be8aeb4773acd225e63
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_191886fbe7224be8aeb4773acd225e63, duration=21ms, status=200
2025-08-08 10:30:55 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6cd64322cfcf4a7bba3b6e01e89da021
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=144ms, rowsAffected=5
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6cd64322cfcf4a7bba3b6e01e89da021
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=8ms, rowsAffected=5
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6cd64322cfcf4a7bba3b6e01e89da021
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6cd64322cfcf4a7bba3b6e01e89da021, duration=189ms, status=200
2025-08-08 10:30:55 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e9dd822827054711b56232148c99939c, requestId=req_463f60fb, url=/config-center/api/enum/get_all_enum
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8d65204a259f4a62976e2dc9ba8c2523, requestId=req_c8710326, url=/config-center/api/config/page
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e9dd822827054711b56232148c99939c
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e9dd822827054711b56232148c99939c, duration=24ms, status=200
2025-08-08 10:31:47 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8d65204a259f4a62976e2dc9ba8c2523
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=198ms, rowsAffected=5
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8d65204a259f4a62976e2dc9ba8c2523
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=36ms, rowsAffected=5
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8d65204a259f4a62976e2dc9ba8c2523
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8d65204a259f4a62976e2dc9ba8c2523, duration=251ms, status=200
2025-08-08 10:31:47 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_197d34031fde412bb9e151d35209884b, requestId=req_11304c82, url=/config-center/api/enum/get_all_enum
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9e1aa201c14c447eb304595f8e83220a, requestId=req_96001c87, url=/config-center/api/config/page
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_197d34031fde412bb9e151d35209884b
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_197d34031fde412bb9e151d35209884b, duration=35ms, status=200
2025-08-08 10:33:09 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9e1aa201c14c447eb304595f8e83220a
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=86ms, rowsAffected=5
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9e1aa201c14c447eb304595f8e83220a
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=5
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9e1aa201c14c447eb304595f8e83220a
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9e1aa201c14c447eb304595f8e83220a, duration=121ms, status=200
2025-08-08 10:33:09 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:32 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:33:32 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:32 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_763012b80eb04530b11604a8b77216d0, requestId=req_46dc6c7c, url=/config-center/api/enum/get_all_enum
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_350700ab6a164c35908687f096af0724, requestId=req_d388a605, url=/config-center/api/config/page
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_763012b80eb04530b11604a8b77216d0
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_763012b80eb04530b11604a8b77216d0, duration=27ms, status=200
2025-08-08 10:33:33 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_350700ab6a164c35908687f096af0724
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=31ms, rowsAffected=5
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_350700ab6a164c35908687f096af0724
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=71ms, rowsAffected=5
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_350700ab6a164c35908687f096af0724
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_350700ab6a164c35908687f096af0724, duration=138ms, status=200
2025-08-08 10:33:33 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:52 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:33:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:52 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_87266d1bbbbd47ec90601a2f512eb348, requestId=req_a93e748e, url=/config-center/api/enum/get_all_enum
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7462f24169834598a344d0194d91ca51, requestId=req_022312be, url=/config-center/api/config/page
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_87266d1bbbbd47ec90601a2f512eb348
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_87266d1bbbbd47ec90601a2f512eb348, duration=17ms, status=200
2025-08-08 10:33:53 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7462f24169834598a344d0194d91ca51
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=48ms, rowsAffected=5
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7462f24169834598a344d0194d91ca51
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=61ms, rowsAffected=5
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7462f24169834598a344d0194d91ca51
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7462f24169834598a344d0194d91ca51, duration=135ms, status=200
2025-08-08 10:33:53 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_031539559cb34c02b588c2ff85ed649e, requestId=req_7287a092, url=/config-center/api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_031539559cb34c02b588c2ff85ed649e
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_031539559cb34c02b588c2ff85ed649e
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_031539559cb34c02b588c2ff85ed649e, duration=225ms, status=200
2025-08-08 10:33:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9b3246a3f7d64c958260e1333f632681, requestId=req_7c24d953, url=/config-center/api/config/10
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b3246a3f7d64c958260e1333f632681
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b3246a3f7d64c958260e1333f632681
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=45ms, rowsAffected=1
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9b3246a3f7d64c958260e1333f632681
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9b3246a3f7d64c958260e1333f632681, duration=114ms, status=200
2025-08-08 10:33:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b1724574a05f40558164aff237ae838c, requestId=req_bd242bc2, url=/config-center/api/config/page
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b1724574a05f40558164aff237ae838c
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=32ms, rowsAffected=5
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b1724574a05f40558164aff237ae838c
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=4ms, rowsAffected=5
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b1724574a05f40558164aff237ae838c
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b1724574a05f40558164aff237ae838c, duration=63ms, status=200
2025-08-08 10:33:58 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:37:12 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_eb43a19d246b46eb83a20f996dab0a57, requestId=req_843b3e67, url=/config-center/api/config/page
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9c7a430d73b140ccbf14ed8b7a2b80ce, requestId=req_ada0b1d1, url=/config-center/api/enum/get_all_enum
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9c7a430d73b140ccbf14ed8b7a2b80ce
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9c7a430d73b140ccbf14ed8b7a2b80ce, duration=30ms, status=200
2025-08-08 10:37:12 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_eb43a19d246b46eb83a20f996dab0a57
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=348ms, rowsAffected=5
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_eb43a19d246b46eb83a20f996dab0a57
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=48ms, rowsAffected=5
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_eb43a19d246b46eb83a20f996dab0a57
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_eb43a19d246b46eb83a20f996dab0a57, duration=435ms, status=200
2025-08-08 10:37:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ef5707ebdccf4f9bb04277e045a9e9da, requestId=req_8609289a, url=/config-center/api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ef5707ebdccf4f9bb04277e045a9e9da
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=31ms, rowsAffected=1
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ef5707ebdccf4f9bb04277e045a9e9da
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ef5707ebdccf4f9bb04277e045a9e9da, duration=82ms, status=200
2025-08-08 10:37:35 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7d2dc609c08d45bd804fb346e1164cd5, requestId=req_95397b61, url=/config-center/api/config/10
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7d2dc609c08d45bd804fb346e1164cd5
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=5ms, rowsAffected=1
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7d2dc609c08d45bd804fb346e1164cd5
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=42ms, rowsAffected=1
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7d2dc609c08d45bd804fb346e1164cd5
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7d2dc609c08d45bd804fb346e1164cd5, duration=104ms, status=200
2025-08-08 10:37:35 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_59352faf3d7c4c22a3730836ee45cfd2, requestId=req_da3939e7, url=/config-center/api/config/page
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_59352faf3d7c4c22a3730836ee45cfd2
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=13ms, rowsAffected=5
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_59352faf3d7c4c22a3730836ee45cfd2
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=23ms, rowsAffected=5
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_59352faf3d7c4c22a3730836ee45cfd2
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_59352faf3d7c4c22a3730836ee45cfd2, duration=44ms, status=200
2025-08-08 10:37:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_128d8df38d8f4d70a449b03c679499a2, requestId=req_07e28cac, url=/config-center/api/enum/get_all_enum
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a20f38faebef43519acfab825c0cfdd1, requestId=req_23a121fe, url=/config-center/api/config/page
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_128d8df38d8f4d70a449b03c679499a2
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_128d8df38d8f4d70a449b03c679499a2, duration=15ms, status=200
2025-08-08 10:39:37 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a20f38faebef43519acfab825c0cfdd1
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=58ms, rowsAffected=5
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a20f38faebef43519acfab825c0cfdd1
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=3ms, rowsAffected=5
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a20f38faebef43519acfab825c0cfdd1
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a20f38faebef43519acfab825c0cfdd1, duration=81ms, status=200
2025-08-08 10:39:37 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_005a89ac2f864c52bde3da1148fede3e, requestId=req_42b64cdb, url=/config-center/api/config/page
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_005a89ac2f864c52bde3da1148fede3e
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=40ms, rowsAffected=5
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_12d3ee2d9c374883bba901c2d3ebbd13, requestId=req_77837cab, url=/config-center/api/enum/get_all_enum
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_12d3ee2d9c374883bba901c2d3ebbd13
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_12d3ee2d9c374883bba901c2d3ebbd13, duration=5ms, status=200
2025-08-08 10:39:56 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_005a89ac2f864c52bde3da1148fede3e
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=5
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_005a89ac2f864c52bde3da1148fede3e
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_005a89ac2f864c52bde3da1148fede3e, duration=69ms, status=200
2025-08-08 10:39:56 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4047b3c873f645ac95bfbf84d6a1d6ca, requestId=req_acede4be, url=/config-center/api/config/10
2025-08-08 10:40:18 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4047b3c873f645ac95bfbf84d6a1d6ca
2025-08-08 10:40:18 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=48ms, rowsAffected=1
2025-08-08 10:40:18 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4047b3c873f645ac95bfbf84d6a1d6ca
2025-08-08 10:40:18 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4047b3c873f645ac95bfbf84d6a1d6ca, duration=109ms, status=200
2025-08-08 10:40:18 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_07ad1241fce4486aa6538a2d74ae4fc8, requestId=req_43231a11, url=/config-center/api/config/10
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_07ad1241fce4486aa6538a2d74ae4fc8
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_07ad1241fce4486aa6538a2d74ae4fc8
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=44ms, rowsAffected=1
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_07ad1241fce4486aa6538a2d74ae4fc8
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_07ad1241fce4486aa6538a2d74ae4fc8, duration=114ms, status=200
2025-08-08 10:40:18 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/56
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/56] with attributes [authenticated]
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/56
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4e338c808ad9418d9aad7137a4760320, requestId=req_2b958604, url=/config-center/api/ticket/56
2025-08-08 10:40:19 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：56
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4e338c808ad9418d9aad7137a4760320
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=57ms, rowsAffected=1
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4e338c808ad9418d9aad7137a4760320
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4e338c808ad9418d9aad7137a4760320, duration=103ms, status=200
2025-08-08 10:40:19 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4ea951cc716a479fb0dd08e53247375f, requestId=req_480919d9, url=/config-center/api/enum/get_all_enum
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3199b8471d594a808c19c1a924afae84, requestId=req_23caf378, url=/config-center/api/config/page
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4ea951cc716a479fb0dd08e53247375f
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4ea951cc716a479fb0dd08e53247375f, duration=3ms, status=200
2025-08-08 10:40:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3199b8471d594a808c19c1a924afae84
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=37ms, rowsAffected=5
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3199b8471d594a808c19c1a924afae84
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=5ms, rowsAffected=5
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3199b8471d594a808c19c1a924afae84
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3199b8471d594a808c19c1a924afae84, duration=51ms, status=200
2025-08-08 10:40:24 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e432316937ab45d5b42159a49fc25025, requestId=req_f0668ffe, url=/config-center/api/config
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e432316937ab45d5b42159a49fc25025
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=insert, duration=33ms, rowsAffected=1
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e432316937ab45d5b42159a49fc25025
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e432316937ab45d5b42159a49fc25025, duration=163ms, status=200
2025-08-08 10:40:31 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:31 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:31 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1849083de2084b3bacbe02f8ce60c769, requestId=req_79c6797b, url=/config-center/api/config/page
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1849083de2084b3bacbe02f8ce60c769
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=150ms, rowsAffected=6
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1849083de2084b3bacbe02f8ce60c769
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=23ms, rowsAffected=6
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1849083de2084b3bacbe02f8ce60c769
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1849083de2084b3bacbe02f8ce60c769, duration=179ms, status=200
2025-08-08 10:40:32 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing DELETE /api/config/17
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [DELETE /api/config/17] with attributes [authenticated]
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured DELETE /api/config/17
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c94c7682713b48e4917f3bf5c469c350, requestId=req_5dcdbcf4, url=/config-center/api/config/17
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c94c7682713b48e4917f3bf5c469c350
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=4ms, rowsAffected=1
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c94c7682713b48e4917f3bf5c469c350
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=deleteById, duration=140ms, rowsAffected=1
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c94c7682713b48e4917f3bf5c469c350
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c94c7682713b48e4917f3bf5c469c350, duration=179ms, status=200
2025-08-08 10:40:35 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:40:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5996c9ce9c8a4b2ba2d6dba7d1c201c3, requestId=req_45b52181, url=/config-center/api/config/page
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5996c9ce9c8a4b2ba2d6dba7d1c201c3
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=25ms, rowsAffected=5
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5996c9ce9c8a4b2ba2d6dba7d1c201c3
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=4ms, rowsAffected=5
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5996c9ce9c8a4b2ba2d6dba7d1c201c3
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5996c9ce9c8a4b2ba2d6dba7d1c201c3, duration=50ms, status=200
2025-08-08 10:40:36 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:44:01 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:44:01 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010b
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010b closed
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:44:01 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:44:08 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 88540 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:44:08 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:44:08 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:09 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:44:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-08 10:44:10 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:44:10 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:44:10 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:44:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:44:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1972 ms
2025-08-08 10:44:11 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:44:11 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:44:12 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:44:12 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:44:12 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=35MB
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=108MB
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7509226c
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:44:12 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:44:12 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:44:12 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:44:12 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:44:12 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:65147, server: localhost/127.0.0.1:2181
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010c, negotiated timeout = 40000
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:44:12 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:12 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:44:12 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:44:12 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:44:12 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:44:13 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:44:13 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@278cbf5a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c41931a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f03fdc0, org.springframework.security.web.header.HeaderWriterFilter@7a7bb083, org.springframework.web.filter.CorsFilter@62cb977a, org.springframework.security.web.authentication.logout.LogoutFilter@6ee07d7f, com.example.configcenter.security.JwtAuthenticationFilter@7538cfe6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@431923ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12b66c89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7db70494, org.springframework.security.web.session.SessionManagementFilter@3891b430, org.springframework.security.web.access.ExceptionTranslationFilter@2bfa5678, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e5e7753]
2025-08-08 10:44:13 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:44:14 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:44:14 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:44:14 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:44:14 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:44:14 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754621054506
2025-08-08 10:44:15 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:44:15 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:44:15 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:44:15 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:44:15 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:44:15 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 6.603 seconds (JVM running for 7.259)
2025-08-08 10:44:15 [RMI TCP Connection(2)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:44:15 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:44:15 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-08 10:44:15 [RMI TCP Connection(3)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 10:44:24 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:44:24 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010c closed
2025-08-08 10:44:24 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:44:24 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010c
2025-08-08 10:44:24 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:44:24 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:44:29 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 88583 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:44:29 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:44:29 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:44:30 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 10:44:31 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:44:31 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:44:31 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:44:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:44:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2276 ms
2025-08-08 10:44:31 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:44:32 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:44:32 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:44:33 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:44:33 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=61MB
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=106MB
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@53df7e67
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:44:33 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:44:33 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:44:33 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:44:33 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:44:33 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:65179, server: localhost/127.0.0.1:2181
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:44:33 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010d, negotiated timeout = 40000
2025-08-08 10:44:33 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:44:33 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:44:33 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:44:33 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:44:33 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:44:33 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1443539, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b160208, org.springframework.security.web.context.SecurityContextPersistenceFilter@67d55a46, org.springframework.security.web.header.HeaderWriterFilter@431923ed, org.springframework.web.filter.CorsFilter@237bdbcb, org.springframework.security.web.authentication.logout.LogoutFilter@13552290, com.example.configcenter.security.JwtAuthenticationFilter@4cadd4d4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d982fbe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@337e573b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16a15261, org.springframework.security.web.session.SessionManagementFilter@70ccb3bf, org.springframework.security.web.access.ExceptionTranslationFilter@6530a1de, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ca0b05e]
2025-08-08 10:44:33 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:44:35 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:44:36 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:44:36 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:44:36 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:44:36 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754621076102
2025-08-08 10:44:36 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:44:36 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:44:36 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:44:36 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:44:36 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:44:36 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 8.034 seconds (JVM running for 8.661)
2025-08-08 10:44:36 [RMI TCP Connection(2)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:44:36 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:44:36 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 10:44:36 [RMI TCP Connection(3)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:44:59 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_493efdde91b64ec1b57bfad185b45dda, requestId=req_a02edb43, url=/config-center/api/config/page
2025-08-08 10:45:00 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 10:45:00 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 10:45:00 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:45:00 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:45:00 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754621100410
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_493efdde91b64ec1b57bfad185b45dda
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=53ms, rowsAffected=5
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_493efdde91b64ec1b57bfad185b45dda
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=4ms, rowsAffected=5
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:45:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_493efdde91b64ec1b57bfad185b45dda
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_493efdde91b64ec1b57bfad185b45dda, duration=587ms, status=200
2025-08-08 10:45:00 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dab81f14c6bd4fef9eac02fa315d4e3c, requestId=req_8bda23b9, url=/config-center/api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dab81f14c6bd4fef9eac02fa315d4e3c
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dab81f14c6bd4fef9eac02fa315d4e3c
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dab81f14c6bd4fef9eac02fa315d4e3c, duration=71ms, status=200
2025-08-08 10:45:06 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0b050c92b5f9465ab972795588cdb72c, requestId=req_1e02a15f, url=/config-center/api/config/16
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0b050c92b5f9465ab972795588cdb72c
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0b050c92b5f9465ab972795588cdb72c
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=96ms, rowsAffected=1
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0b050c92b5f9465ab972795588cdb72c
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0b050c92b5f9465ab972795588cdb72c, duration=217ms, status=200
2025-08-08 10:45:06 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_facd14997b9e4a9fbcbb406b3f675d37, requestId=req_4909763f, url=/config-center/api/config/16
2025-08-08 10:45:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_facd14997b9e4a9fbcbb406b3f675d37
2025-08-08 10:45:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=20ms, rowsAffected=1
2025-08-08 10:45:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_facd14997b9e4a9fbcbb406b3f675d37
2025-08-08 10:45:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_facd14997b9e4a9fbcbb406b3f675d37, duration=31ms, status=200
2025-08-08 10:45:18 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_59a45dbb1ac24a8bbb1802e1c3d8fa56, requestId=req_5c274faa, url=/config-center/api/config/16
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_59a45dbb1ac24a8bbb1802e1c3d8fa56
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=23ms, rowsAffected=1
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_59a45dbb1ac24a8bbb1802e1c3d8fa56
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=8ms, rowsAffected=1
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_59a45dbb1ac24a8bbb1802e1c3d8fa56
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_59a45dbb1ac24a8bbb1802e1c3d8fa56, duration=54ms, status=200
2025-08-08 10:45:18 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9f8f50824c9c4c54a1b7a5a782126ab0, requestId=req_472c1bec, url=/config-center/api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9f8f50824c9c4c54a1b7a5a782126ab0
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9f8f50824c9c4c54a1b7a5a782126ab0
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9f8f50824c9c4c54a1b7a5a782126ab0, duration=21ms, status=200
2025-08-08 10:45:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a6f4edba38fd42f1ad85050cd44be39d, requestId=req_2aa4957d, url=/config-center/api/config/16
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a6f4edba38fd42f1ad85050cd44be39d
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=1ms, rowsAffected=1
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a6f4edba38fd42f1ad85050cd44be39d
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=1ms, rowsAffected=1
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a6f4edba38fd42f1ad85050cd44be39d
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a6f4edba38fd42f1ad85050cd44be39d, duration=22ms, status=200
2025-08-08 10:45:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:46:05 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010d closed
2025-08-08 10:46:05 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010d
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 10:46:05 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 10:46:12 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 88797 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 10:46:12 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 10:46:12 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 10:46:13 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-08 10:46:14 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 10:46:14 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 10:46:14 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 10:46:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 10:46:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2123 ms
2025-08-08 10:46:14 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 10:46:15 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 10:46:16 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 10:46:16 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 10:46:16 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=48MB
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=100MB
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@6109d880
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 10:46:16 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 10:46:16 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:46:16 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:46:16 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 10:46:16 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 10:46:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 10:46:17 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 10:46:17 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2e564c78, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470866d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@7359f3ac, org.springframework.security.web.header.HeaderWriterFilter@673a5aa7, org.springframework.web.filter.CorsFilter@11267e87, org.springframework.security.web.authentication.logout.LogoutFilter@2dc77962, com.example.configcenter.security.JwtAuthenticationFilter@67a38, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d9cba2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48d24d63, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@118c1faa, org.springframework.security.web.session.SessionManagementFilter@522f74a1, org.springframework.security.web.access.ExceptionTranslationFilter@56f19f36, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7077ae9c]
2025-08-08 10:46:17 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:46:17 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:46:17 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:46:18 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:46:18 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:46:18 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:46:19 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 10:46:19 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:46:19 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 10:46:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 10:46:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 10:46:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:49267, server: localhost/127.0.0.1:2181
2025-08-08 10:46:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010e, negotiated timeout = 40000
2025-08-08 10:46:20 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 10:46:20 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 10:46:20 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:46:20 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 10:46:20 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 10:46:22 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 10:46:22 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 10:46:22 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:46:22 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:46:22 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754621182194
2025-08-08 10:46:22 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 10:46:22 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 10:46:22 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 10:46:22 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 10:46:22 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 10:46:22 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 10.484 seconds (JVM running for 13.948)
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3b83c28ee8f8454daa8cce4569c16487, requestId=req_263560c3, url=/config-center/api/config/16
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 10:46:27 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754621187871
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3b83c28ee8f8454daa8cce4569c16487
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=20ms, rowsAffected=1
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:46:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3b83c28ee8f8454daa8cce4569c16487
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3b83c28ee8f8454daa8cce4569c16487, duration=663ms, status=200
2025-08-08 10:46:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8e17ac09b348455c90c3d377c57435ab, requestId=req_786ce0c1, url=/config-center/api/config/16
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8e17ac09b348455c90c3d377c57435ab
2025-08-08 10:46:28 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 10:46:32 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8e17ac09b348455c90c3d377c57435ab
2025-08-08 10:46:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=41ms, rowsAffected=1
2025-08-08 10:46:41 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8e17ac09b348455c90c3d377c57435ab
2025-08-08 10:46:41 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8e17ac09b348455c90c3d377c57435ab, duration=13213ms, status=200
2025-08-08 10:46:41 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 10:51:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:51:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:51:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 10:55:28 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 11:02:33 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010e closed
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 11:02:33 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010e
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 11:02:33 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 11:02:44 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 90793 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 11:02:44 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 11:02:44 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 11:02:48 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-08-08 11:02:51 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 11:02:51 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 11:02:51 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 11:02:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 11:02:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7185 ms
2025-08-08 11:02:51 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 11:02:52 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 11:02:53 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 11:02:53 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 11:02:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=78MB
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=128MB
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@2b15ba1a
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 11:02:53 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 11:02:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 11:02:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 11:02:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:54543, server: localhost/127.0.0.1:2181
2025-08-08 11:02:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.entity.ConfigItem)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd010f, negotiated timeout = 40000
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 11:02:54 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:02:54 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 11:02:54 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 11:02:55 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 11:02:55 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118c1faa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@da5b46f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c167296, org.springframework.security.web.header.HeaderWriterFilter@237bdbcb, org.springframework.web.filter.CorsFilter@99f75e4, org.springframework.security.web.authentication.logout.LogoutFilter@6dde913e, com.example.configcenter.security.JwtAuthenticationFilter@1818390b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a464be7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6eb332d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b6ff016, org.springframework.security.web.session.SessionManagementFilter@7359f3ac, org.springframework.security.web.access.ExceptionTranslationFilter@1443539, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f30d0eb]
2025-08-08 11:02:55 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 11:02:56 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 11:02:56 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 11:02:56 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 11:02:56 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 11:02:56 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754622176888
2025-08-08 11:02:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 11:02:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 11:02:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 11:02:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 11:02:57 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 11:02:57 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 14.659 seconds (JVM running for 18.895)
2025-08-08 11:03:13 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 11:03:13 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 11:03:13 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d3c12f6e0e394ca1bace2cb1e7361046, requestId=req_4fd3b015, url=/config-center/api/config/16
2025-08-08 11:03:14 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 11:03:14 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 11:03:14 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 11:03:14 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 11:03:14 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754622194282
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 11:03:14 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d3c12f6e0e394ca1bace2cb1e7361046
2025-08-08 11:03:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=18ms, rowsAffected=1
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:03:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:03:14 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d3c12f6e0e394ca1bace2cb1e7361046
2025-08-08 11:03:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d3c12f6e0e394ca1bace2cb1e7361046, duration=707ms, status=200
2025-08-08 11:03:14 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b470e61ef18f4ddc92e06027cd656224, requestId=req_5c4ff629, url=/config-center/api/config/16
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b470e61ef18f4ddc92e06027cd656224
2025-08-08 11:03:14 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 11:03:20 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b470e61ef18f4ddc92e06027cd656224
2025-08-08 11:03:20 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=85ms, rowsAffected=1
2025-08-08 11:03:25 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b470e61ef18f4ddc92e06027cd656224
2025-08-08 11:03:25 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b470e61ef18f4ddc92e06027cd656224, duration=10912ms, status=200
2025-08-08 11:03:25 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=16&pageNum=1&pageSize=10
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_79ae868a9b3c4fb4a892903aacebe693, requestId=req_88455b77, url=/config-center/api/config/16
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=16&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=16&pageNum=1&pageSize=10
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_369e94c742264f8c8aa12766ee21e25d, requestId=req_7a144726, url=/config-center/api/config/history
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_79ae868a9b3c4fb4a892903aacebe693
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=31ms, rowsAffected=1
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_79ae868a9b3c4fb4a892903aacebe693
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_79ae868a9b3c4fb4a892903aacebe693, duration=52ms, status=200
2025-08-08 11:03:30 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_369e94c742264f8c8aa12766ee21e25d
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=69ms, rowsAffected=0
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_369e94c742264f8c8aa12766ee21e25d
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=22ms, rowsAffected=0
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_369e94c742264f8c8aa12766ee21e25d
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_369e94c742264f8c8aa12766ee21e25d, duration=132ms, status=200
2025-08-08 11:03:30 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bc640b4e27af4d4c8868b60b4d2ac932, requestId=req_d5e703d7, url=/config-center/api/config/page
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_75429395d7dd4417b464cbbaec35416e, requestId=req_39a1f9b3, url=/config-center/api/enum/get_all_enum
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_75429395d7dd4417b464cbbaec35416e
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_75429395d7dd4417b464cbbaec35416e, duration=25ms, status=200
2025-08-08 11:03:32 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc640b4e27af4d4c8868b60b4d2ac932
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=15ms, rowsAffected=5
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc640b4e27af4d4c8868b60b4d2ac932
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=20ms, rowsAffected=5
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bc640b4e27af4d4c8868b60b4d2ac932
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bc640b4e27af4d4c8868b60b4d2ac932, duration=136ms, status=200
2025-08-08 11:03:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aade182b53e84ddbb1474e25939f88f9, requestId=req_69c5617f, url=/config-center/api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aade182b53e84ddbb1474e25939f88f9
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aade182b53e84ddbb1474e25939f88f9, duration=16ms, status=200
2025-08-08 11:03:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f387ef87ba94404993c24f18823c7901, requestId=req_d2435626, url=/config-center/api/config/16
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f387ef87ba94404993c24f18823c7901
2025-08-08 11:03:50 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 11:03:52 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f387ef87ba94404993c24f18823c7901
2025-08-08 11:03:52 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=20ms, rowsAffected=1
2025-08-08 11:03:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f387ef87ba94404993c24f18823c7901
2025-08-08 11:03:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f387ef87ba94404993c24f18823c7901, duration=3489ms, status=200
2025-08-08 11:03:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1293ca4d6d7d4bb89c1a1eb48435551b, requestId=req_34b56da0, url=/config-center/api/enum/get_all_enum
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3ca6ee9c1b594fdb9a663df2cc610d9e, requestId=req_b86ff572, url=/config-center/api/config/page
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1293ca4d6d7d4bb89c1a1eb48435551b
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1293ca4d6d7d4bb89c1a1eb48435551b, duration=12ms, status=200
2025-08-08 11:04:32 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3ca6ee9c1b594fdb9a663df2cc610d9e
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=114ms, rowsAffected=5
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3ca6ee9c1b594fdb9a663df2cc610d9e
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=8ms, rowsAffected=5
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3ca6ee9c1b594fdb9a663df2cc610d9e
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3ca6ee9c1b594fdb9a663df2cc610d9e, duration=180ms, status=200
2025-08-08 11:04:32 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_369ae7b07fe44b11bcb2b192a2da4a97, requestId=req_6be5d662, url=/config-center/api/config/16
2025-08-08 11:04:49 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_369ae7b07fe44b11bcb2b192a2da4a97
2025-08-08 11:04:49 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=96ms, rowsAffected=1
2025-08-08 11:04:49 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_369ae7b07fe44b11bcb2b192a2da4a97
2025-08-08 11:04:49 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_369ae7b07fe44b11bcb2b192a2da4a97, duration=590ms, status=200
2025-08-08 11:04:49 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_904bbfb438cb4722b5614e429256637a, requestId=req_9975934f, url=/config-center/api/config/16
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_904bbfb438cb4722b5614e429256637a
2025-08-08 11:04:49 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=26ms, rowsAffected=1
2025-08-08 11:04:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:04:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:56 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_904bbfb438cb4722b5614e429256637a
2025-08-08 11:04:56 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=40ms, rowsAffected=1
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ce1f798811ed491da74257df8465ca15, requestId=req_fcef2860, url=/config-center/api/config/16
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ce1f798811ed491da74257df8465ca15
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ce1f798811ed491da74257df8465ca15, duration=48ms, status=200
2025-08-08 11:04:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0ce0c56382f44d62a49281198299dbc4, requestId=req_b432f6ac, url=/config-center/api/config/16
2025-08-08 11:04:57 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_904bbfb438cb4722b5614e429256637a
2025-08-08 11:04:57 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_904bbfb438cb4722b5614e429256637a, duration=8378ms, status=200
2025-08-08 11:04:57 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0ce0c56382f44d62a49281198299dbc4
2025-08-08 11:04:57 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=92ms, rowsAffected=1
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:11 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0ce0c56382f44d62a49281198299dbc4
2025-08-08 11:05:11 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=11ms, rowsAffected=1
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_df0f6f6fb4cc4d91ada901a07941f03b, requestId=req_bb8ca0bb, url=/config-center/api/config/page
2025-08-08 11:05:11 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0ce0c56382f44d62a49281198299dbc4
2025-08-08 11:05:11 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0ce0c56382f44d62a49281198299dbc4, duration=13774ms, status=200
2025-08-08 11:05:11 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_df0f6f6fb4cc4d91ada901a07941f03b
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=36ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_df0f6f6fb4cc4d91ada901a07941f03b
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=20ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_df0f6f6fb4cc4d91ada901a07941f03b
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_df0f6f6fb4cc4d91ada901a07941f03b, duration=69ms, status=200
2025-08-08 11:05:11 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bff74b91f4334794b4c7b912ecfda976, requestId=req_8486583c, url=/config-center/api/config/page
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bff74b91f4334794b4c7b912ecfda976
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=71ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bff74b91f4334794b4c7b912ecfda976
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=6ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bff74b91f4334794b4c7b912ecfda976
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bff74b91f4334794b4c7b912ecfda976, duration=96ms, status=200
2025-08-08 11:05:11 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_093da021be304911891e2bf215d03ea2, requestId=req_bc286b69, url=/config-center/api/config/page
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_093da021be304911891e2bf215d03ea2
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=36ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_093da021be304911891e2bf215d03ea2
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=5ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_093da021be304911891e2bf215d03ea2
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_093da021be304911891e2bf215d03ea2, duration=45ms, status=200
2025-08-08 11:05:11 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d6dc80190bac4b8ebf8a645c82e8c912, requestId=req_1c2c8756, url=/config-center/api/config/page
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d6dc80190bac4b8ebf8a645c82e8c912
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=5ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d6dc80190bac4b8ebf8a645c82e8c912
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=2ms, rowsAffected=5
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d6dc80190bac4b8ebf8a645c82e8c912
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d6dc80190bac4b8ebf8a645c82e8c912, duration=12ms, status=200
2025-08-08 11:05:11 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dbc91273385245dfa3dc37a0452c6ded, requestId=req_cb7661c1, url=/config-center/api/config/page
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dbc91273385245dfa3dc37a0452c6ded
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=4ms, rowsAffected=5
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dbc91273385245dfa3dc37a0452c6ded
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=4ms, rowsAffected=5
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dbc91273385245dfa3dc37a0452c6ded
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dbc91273385245dfa3dc37a0452c6ded, duration=17ms, status=200
2025-08-08 11:05:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_db45501899834351adc1693a07d6192f, requestId=req_2b799661, url=/config-center/api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_db45501899834351adc1693a07d6192f
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=6ms, rowsAffected=1
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_db45501899834351adc1693a07d6192f
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_db45501899834351adc1693a07d6192f, duration=23ms, status=200
2025-08-08 11:05:20 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/16] with attributes [authenticated]
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1469bd233cf648e29cf405330a0d305c, requestId=req_a87deafc, url=/config-center/api/config/16
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1469bd233cf648e29cf405330a0d305c
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=7ms, rowsAffected=1
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1469bd233cf648e29cf405330a0d305c
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=8ms, rowsAffected=1
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1469bd233cf648e29cf405330a0d305c
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1469bd233cf648e29cf405330a0d305c, duration=33ms, status=200
2025-08-08 11:05:20 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_39f035409cb64e5ab98a0aed2c89985f, requestId=req_582460e9, url=/config-center/api/config/page
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_39f035409cb64e5ab98a0aed2c89985f
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=4ms, rowsAffected=5
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_39f035409cb64e5ab98a0aed2c89985f
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=19ms, rowsAffected=5
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_39f035409cb64e5ab98a0aed2c89985f
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_39f035409cb64e5ab98a0aed2c89985f, duration=28ms, status=200
2025-08-08 11:05:20 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c41458c0d1dd420f80be327ac047d993, requestId=req_9e6ab9c0, url=/config-center/api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c41458c0d1dd420f80be327ac047d993
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=1ms, rowsAffected=1
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c41458c0d1dd420f80be327ac047d993
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c41458c0d1dd420f80be327ac047d993, duration=13ms, status=200
2025-08-08 11:05:27 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_99a44232a4294679b3d2d0d50cfd9cb7, requestId=req_92f09194, url=/config-center/api/config/10
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.entity.ConfigItem,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_99a44232a4294679b3d2d0d50cfd9cb7
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_99a44232a4294679b3d2d0d50cfd9cb7
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=52ms, rowsAffected=1
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_99a44232a4294679b3d2d0d50cfd9cb7
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_99a44232a4294679b3d2d0d50cfd9cb7, duration=267ms, status=200
2025-08-08 11:05:27 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/57
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/57] with attributes [authenticated]
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/57
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_91a5e314f9df4eea8f350562732473e8, requestId=req_d4287351, url=/config-center/api/ticket/57
2025-08-08 11:05:27 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：57
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_91a5e314f9df4eea8f350562732473e8
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=11ms, rowsAffected=1
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_91a5e314f9df4eea8f350562732473e8
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_91a5e314f9df4eea8f350562732473e8, duration=48ms, status=200
2025-08-08 11:05:27 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4b0d34c5385b47ba89a892ae6c40077e, requestId=req_73c0712e, url=/config-center/api/enum/get_all_enum
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_72ed975b7d02439ebdda888b900de745, requestId=req_5d09edd0, url=/config-center/api/config/page
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4b0d34c5385b47ba89a892ae6c40077e
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4b0d34c5385b47ba89a892ae6c40077e, duration=1ms, status=200
2025-08-08 11:05:29 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_72ed975b7d02439ebdda888b900de745
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=6ms, rowsAffected=5
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_72ed975b7d02439ebdda888b900de745
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=2ms, rowsAffected=5
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_72ed975b7d02439ebdda888b900de745
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_72ed975b7d02439ebdda888b900de745, duration=11ms, status=200
2025-08-08 11:05:29 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:08:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:08:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:08:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:12:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 11:35:39 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 11:35:39 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd010f
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd010f closed
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 11:35:39 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 11:35:40 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 11:35:52 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 95574 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 11:35:52 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 11:35:52 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 11:35:54 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:35:54 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 11:35:54 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 11:35:54 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:35:54 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 11:35:55 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 11:35:55 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 11:35:55 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 11:35:55 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-08-08 11:35:58 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 11:35:58 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 11:35:58 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 11:35:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 11:35:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6301 ms
2025-08-08 11:35:59 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 11:36:03 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 11:36:06 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 11:36:06 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 11:36:06 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=46MB
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=96MB
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@b68932b
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 11:36:06 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 11:36:06 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 11:36:06 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 11:36:06 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 11:36:06 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 11:36:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:36:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 11:36:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 11:36:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:57725, server: localhost/127.0.0.1:2181
2025-08-08 11:36:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0110, negotiated timeout = 40000
2025-08-08 11:36:07 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 11:36:07 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 11:36:07 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 11:36:07 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 11:36:07 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 11:36:07 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@712213ed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58189132, org.springframework.security.web.context.SecurityContextPersistenceFilter@11678469, org.springframework.security.web.header.HeaderWriterFilter@9ba167e, org.springframework.web.filter.CorsFilter@2305aad0, org.springframework.security.web.authentication.logout.LogoutFilter@544733a4, com.example.configcenter.security.JwtAuthenticationFilter@6cb194f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36c1b6ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62cb977a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c15a6aa, org.springframework.security.web.session.SessionManagementFilter@2571bdf4, org.springframework.security.web.access.ExceptionTranslationFilter@66acaa54, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49482761]
2025-08-08 11:36:07 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 11:36:09 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 11:36:09 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 11:36:09 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 11:36:09 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 11:36:09 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754624169771
2025-08-08 11:36:10 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 11:36:10 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 11:36:10 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 11:36:10 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 11:36:10 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 11:36:10 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 18.256 seconds (JVM running for 20.318)
2025-08-08 11:36:10 [RMI TCP Connection(7)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 11:36:10 [RMI TCP Connection(7)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 11:36:10 [RMI TCP Connection(7)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-08 11:36:10 [RMI TCP Connection(6)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bc0de83c606848c390a558831051b33b, requestId=req_7b9e1b4e, url=/config-center/api/config/page
2025-08-08 11:36:56 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 11:36:56 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 11:36:56 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 11:36:56 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 11:36:56 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754624216900
2025-08-08 11:36:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:36:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:36:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:36:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc0de83c606848c390a558831051b33b
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=49ms, rowsAffected=5
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc0de83c606848c390a558831051b33b
2025-08-08 11:36:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=15ms, rowsAffected=5
2025-08-08 11:36:57 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:36:57 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:36:57 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 11:36:57 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bc0de83c606848c390a558831051b33b
2025-08-08 11:36:57 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bc0de83c606848c390a558831051b33b, duration=483ms, status=200
2025-08-08 11:36:57 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/16
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=16&pageNum=1&pageSize=10
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/16] with attributes [authenticated]
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/16
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f9b811b3e9c1424a846655101e0ee6da, requestId=req_509cb6fb, url=/config-center/api/config/16
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=16&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=16&pageNum=1&pageSize=10
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9b55284d41014b28b7eaf37a19868a20, requestId=req_796d6c0d, url=/config-center/api/config/history
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f9b811b3e9c1424a846655101e0ee6da
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=18ms, rowsAffected=1
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b55284d41014b28b7eaf37a19868a20
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=83ms, rowsAffected=0
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b55284d41014b28b7eaf37a19868a20
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=0
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9b55284d41014b28b7eaf37a19868a20
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9b55284d41014b28b7eaf37a19868a20, duration=107ms, status=200
2025-08-08 11:36:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f9b811b3e9c1424a846655101e0ee6da
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f9b811b3e9c1424a846655101e0ee6da, duration=125ms, status=200
2025-08-08 11:36:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3326044e516f466dab3c49916229e466, requestId=req_c41b033f, url=/config-center/api/ticket/page
2025-08-08 11:37:01 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3326044e516f466dab3c49916229e466
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=56ms, rowsAffected=10
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3326044e516f466dab3c49916229e466
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=19ms, rowsAffected=17
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3326044e516f466dab3c49916229e466
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3326044e516f466dab3c49916229e466, duration=106ms, status=200
2025-08-08 11:37:01 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3fe8db574c2442b5a9b42312d7069498, requestId=req_b4fad1cc, url=/config-center/api/ticket/41
2025-08-08 11:37:04 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3fe8db574c2442b5a9b42312d7069498
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3fe8db574c2442b5a9b42312d7069498
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3fe8db574c2442b5a9b42312d7069498, duration=5ms, status=200
2025-08-08 11:37:04 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_15fc749bce5248dd8d4823f92100fb7f, requestId=req_2006fb52, url=/config-center/api/ticket/41
2025-08-08 11:39:20 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_15fc749bce5248dd8d4823f92100fb7f
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_15fc749bce5248dd8d4823f92100fb7f
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_15fc749bce5248dd8d4823f92100fb7f, duration=42ms, status=200
2025-08-08 11:39:20 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:40:19 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:40:19 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5210618faf0141e196a359c05c1e0926, requestId=req_0f2f7dad, url=/config-center/api/ticket/41
2025-08-08 11:40:20 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5210618faf0141e196a359c05c1e0926
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=42ms, rowsAffected=1
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5210618faf0141e196a359c05c1e0926
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5210618faf0141e196a359c05c1e0926, duration=133ms, status=200
2025-08-08 11:40:20 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cc7a39fe27a848208402cb9383f1fb2a, requestId=req_df249abd, url=/config-center/api/ticket/41
2025-08-08 11:40:39 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cc7a39fe27a848208402cb9383f1fb2a
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=20ms, rowsAffected=1
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cc7a39fe27a848208402cb9383f1fb2a
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cc7a39fe27a848208402cb9383f1fb2a, duration=26ms, status=200
2025-08-08 11:40:39 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b854c05143b642c8a0cb3e8e3acc3b4b, requestId=req_a7279531, url=/config-center/api/ticket/page
2025-08-08 11:40:57 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b854c05143b642c8a0cb3e8e3acc3b4b
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=54ms, rowsAffected=10
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b854c05143b642c8a0cb3e8e3acc3b4b
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=26ms, rowsAffected=17
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b854c05143b642c8a0cb3e8e3acc3b4b
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b854c05143b642c8a0cb3e8e3acc3b4b, duration=174ms, status=200
2025-08-08 11:40:57 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=2&pageSize=10&title=&phase=&applicator=
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aa1dbe68589a4716b334c3ee70962e51, requestId=req_1de649fb, url=/config-center/api/ticket/page
2025-08-08 11:41:01 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aa1dbe68589a4716b334c3ee70962e51
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=153ms, rowsAffected=7
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aa1dbe68589a4716b334c3ee70962e51
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=17
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aa1dbe68589a4716b334c3ee70962e51
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aa1dbe68589a4716b334c3ee70962e51, duration=178ms, status=200
2025-08-08 11:41:01 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d27bae264ebf4dda97d3f9271521959c, requestId=req_829ebe38, url=/config-center/api/ticket/page
2025-08-08 11:41:05 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d27bae264ebf4dda97d3f9271521959c
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=15ms, rowsAffected=10
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d27bae264ebf4dda97d3f9271521959c
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=17
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d27bae264ebf4dda97d3f9271521959c
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d27bae264ebf4dda97d3f9271521959c, duration=36ms, status=200
2025-08-08 11:41:05 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/43
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/43] with attributes [authenticated]
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/43
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0ff7558b3f4b41c7b19e138b41424b11, requestId=req_23f6838c, url=/config-center/api/ticket/43
2025-08-08 11:41:56 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：43
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0ff7558b3f4b41c7b19e138b41424b11
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=61ms, rowsAffected=1
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0ff7558b3f4b41c7b19e138b41424b11
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0ff7558b3f4b41c7b19e138b41424b11, duration=73ms, status=200
2025-08-08 11:41:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:41:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:41:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:41:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/43
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/43] with attributes [authenticated]
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/43
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d27364ce363742b991023a746dad8bb9, requestId=req_2f7e84b2, url=/config-center/api/ticket/43
2025-08-08 11:42:01 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：43
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d27364ce363742b991023a746dad8bb9
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=57ms, rowsAffected=1
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d27364ce363742b991023a746dad8bb9
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d27364ce363742b991023a746dad8bb9, duration=62ms, status=200
2025-08-08 11:42:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/43
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/43] with attributes [authenticated]
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/43
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5b3d077032254ccbac218343fae975c4, requestId=req_b06fc972, url=/config-center/api/ticket/43
2025-08-08 11:42:33 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：43
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5b3d077032254ccbac218343fae975c4
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=37ms, rowsAffected=1
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5b3d077032254ccbac218343fae975c4
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5b3d077032254ccbac218343fae975c4, duration=39ms, status=200
2025-08-08 11:42:33 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/43
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/43] with attributes [authenticated]
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/43
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_acc61aa0b3e444129d149fde56a9d177, requestId=req_a6de7103, url=/config-center/api/ticket/43
2025-08-08 11:43:19 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：43
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_acc61aa0b3e444129d149fde56a9d177
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=18ms, rowsAffected=1
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_acc61aa0b3e444129d149fde56a9d177
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_acc61aa0b3e444129d149fde56a9d177, duration=37ms, status=200
2025-08-08 11:43:19 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:43:27 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:43:27 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_912216bcb9f54dfcbcf6185f2abfa9a1, requestId=req_9ca25c05, url=/config-center/api/config/page
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_912216bcb9f54dfcbcf6185f2abfa9a1
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=38ms, rowsAffected=5
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_912216bcb9f54dfcbcf6185f2abfa9a1
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=22ms, rowsAffected=5
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_912216bcb9f54dfcbcf6185f2abfa9a1
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_912216bcb9f54dfcbcf6185f2abfa9a1, duration=102ms, status=200
2025-08-08 11:43:28 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_725065fac62042aba39342d8de1bb1ae, requestId=req_ef7cf01d, url=/config-center/api/enum/get_all_enum
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_725065fac62042aba39342d8de1bb1ae
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_725065fac62042aba39342d8de1bb1ae, duration=90ms, status=200
2025-08-08 11:43:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:43:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bbefe1f6b46e4176898a90ef5bef96e7, requestId=req_cce56a1b, url=/config-center/api/ticket/page
2025-08-08 11:43:32 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bbefe1f6b46e4176898a90ef5bef96e7
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=49ms, rowsAffected=10
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bbefe1f6b46e4176898a90ef5bef96e7
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=2ms, rowsAffected=17
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bbefe1f6b46e4176898a90ef5bef96e7
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bbefe1f6b46e4176898a90ef5bef96e7, duration=59ms, status=200
2025-08-08 11:43:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fa414cbf876b45a89f67c477065ad192, requestId=req_3aa22c17, url=/config-center/api/ticket/41
2025-08-08 11:43:36 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fa414cbf876b45a89f67c477065ad192
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=11ms, rowsAffected=1
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fa414cbf876b45a89f67c477065ad192
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fa414cbf876b45a89f67c477065ad192, duration=14ms, status=200
2025-08-08 11:43:36 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0e46f153c7f04c729731a3fdd907f533, requestId=req_919911c5, url=/config-center/api/ticket/41
2025-08-08 11:44:16 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e46f153c7f04c729731a3fdd907f533
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=36ms, rowsAffected=1
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0e46f153c7f04c729731a3fdd907f533
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0e46f153c7f04c729731a3fdd907f533, duration=175ms, status=200
2025-08-08 11:44:16 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_430b9733e6b9454d984bb552feec3ce7, requestId=req_8fc52d57, url=/config-center/api/ticket/41
2025-08-08 11:44:37 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_430b9733e6b9454d984bb552feec3ce7
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=21ms, rowsAffected=1
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_430b9733e6b9454d984bb552feec3ce7
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_430b9733e6b9454d984bb552feec3ce7, duration=28ms, status=200
2025-08-08 11:44:37 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a20925be8c9a4337bdb33dbec5b4b421, requestId=req_fdcdabe4, url=/config-center/api/ticket/41
2025-08-08 11:46:02 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a20925be8c9a4337bdb33dbec5b4b421
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=34ms, rowsAffected=1
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a20925be8c9a4337bdb33dbec5b4b421
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a20925be8c9a4337bdb33dbec5b4b421, duration=57ms, status=200
2025-08-08 11:46:02 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:46:02 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:46:45 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_af286594f4644543862a12220e03e6b2, requestId=req_b485ea24, url=/config-center/api/ticket/41
2025-08-08 11:46:46 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:46:46 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af286594f4644543862a12220e03e6b2
2025-08-08 11:46:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=27ms, rowsAffected=1
2025-08-08 11:46:46 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_af286594f4644543862a12220e03e6b2
2025-08-08 11:46:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_af286594f4644543862a12220e03e6b2, duration=48ms, status=200
2025-08-08 11:46:46 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7c80d4f022064746adea5d10fa43b345, requestId=req_178ecee3, url=/config-center/api/enum/get_all_enum
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7c80d4f022064746adea5d10fa43b345
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7c80d4f022064746adea5d10fa43b345, duration=23ms, status=200
2025-08-08 11:50:15 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9405d2ffe29c4a1fa76277a7eb2b8061, requestId=req_610f9924, url=/config-center/api/config/page
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9405d2ffe29c4a1fa76277a7eb2b8061
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=100ms, rowsAffected=5
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9405d2ffe29c4a1fa76277a7eb2b8061
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=9ms, rowsAffected=5
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9405d2ffe29c4a1fa76277a7eb2b8061
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9405d2ffe29c4a1fa76277a7eb2b8061, duration=177ms, status=200
2025-08-08 11:50:15 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:39 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:50:39 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f2fa12e95f344cf48b17e28e2fc9658c, requestId=req_7e6d682b, url=/config-center/api/config/page
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f2fa12e95f344cf48b17e28e2fc9658c
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=104ms, rowsAffected=5
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f2fa12e95f344cf48b17e28e2fc9658c
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=390ms, rowsAffected=5
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f2fa12e95f344cf48b17e28e2fc9658c
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f2fa12e95f344cf48b17e28e2fc9658c, duration=511ms, status=200
2025-08-08 11:50:40 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c718148061694431ba02383814a58c71, requestId=req_e41c2555, url=/config-center/api/ticket/page
2025-08-08 11:50:42 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c718148061694431ba02383814a58c71
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=111ms, rowsAffected=10
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c718148061694431ba02383814a58c71
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=17
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c718148061694431ba02383814a58c71
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c718148061694431ba02383814a58c71, duration=163ms, status=200
2025-08-08 11:50:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_29974e7ee1974093a61ee870a9bba18b, requestId=req_745b04ce, url=/config-center/api/ticket/page
2025-08-08 11:50:46 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_29974e7ee1974093a61ee870a9bba18b
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=19ms, rowsAffected=10
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_29974e7ee1974093a61ee870a9bba18b
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=38ms, rowsAffected=17
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_29974e7ee1974093a61ee870a9bba18b
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_29974e7ee1974093a61ee870a9bba18b, duration=70ms, status=200
2025-08-08 11:50:46 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_38d3a1c023444310a082739e9c534786, requestId=req_6d9ffe76, url=/config-center/api/ticket/41
2025-08-08 11:50:50 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_38d3a1c023444310a082739e9c534786
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=31ms, rowsAffected=1
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_38d3a1c023444310a082739e9c534786
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_38d3a1c023444310a082739e9c534786, duration=49ms, status=200
2025-08-08 11:50:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c42e5b1c57444fe6ae7213317268e731, requestId=req_fe560029, url=/config-center/api/ticket/41
2025-08-08 11:51:55 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c42e5b1c57444fe6ae7213317268e731
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c42e5b1c57444fe6ae7213317268e731
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c42e5b1c57444fe6ae7213317268e731, duration=50ms, status=200
2025-08-08 11:51:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:53:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:53:13 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:53:13 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:53:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_58091cdecc2643f0a15c9afe7d6ec615, requestId=req_0efceb5e, url=/config-center/api/ticket/41
2025-08-08 11:53:14 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_58091cdecc2643f0a15c9afe7d6ec615
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=29ms, rowsAffected=1
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_58091cdecc2643f0a15c9afe7d6ec615
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_58091cdecc2643f0a15c9afe7d6ec615, duration=83ms, status=200
2025-08-08 11:53:14 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1e2c169c9af746f494ef3ea8a2c57366, requestId=req_d6f154bb, url=/config-center/api/ticket/41
2025-08-08 11:53:21 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1e2c169c9af746f494ef3ea8a2c57366
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=37ms, rowsAffected=1
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1e2c169c9af746f494ef3ea8a2c57366
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1e2c169c9af746f494ef3ea8a2c57366, duration=49ms, status=200
2025-08-08 11:53:21 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_44fde242788d4972bb9bde02812efd30, requestId=req_c1e1eaf7, url=/config-center/api/config/page
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c19eca4bd6de434fb3c1cb1d05a19038, requestId=req_ef91c9ab, url=/config-center/api/enum/get_all_enum
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c19eca4bd6de434fb3c1cb1d05a19038
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c19eca4bd6de434fb3c1cb1d05a19038, duration=1ms, status=200
2025-08-08 11:54:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_44fde242788d4972bb9bde02812efd30
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=48ms, rowsAffected=5
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_44fde242788d4972bb9bde02812efd30
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=2ms, rowsAffected=5
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_44fde242788d4972bb9bde02812efd30
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_44fde242788d4972bb9bde02812efd30, duration=64ms, status=200
2025-08-08 11:54:01 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:17 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing DELETE /api/config/16
2025-08-08 11:54:17 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:17 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [DELETE /api/config/16] with attributes [authenticated]
2025-08-08 11:54:17 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured DELETE /api/config/16
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dd93b3ed556f4a5eac79519d67b87b66, requestId=req_bd89b14f, url=/config-center/api/config/16
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dd93b3ed556f4a5eac79519d67b87b66
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=7ms, rowsAffected=1
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dd93b3ed556f4a5eac79519d67b87b66
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=deleteById, duration=272ms, rowsAffected=1
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dd93b3ed556f4a5eac79519d67b87b66
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dd93b3ed556f4a5eac79519d67b87b66, duration=980ms, status=200
2025-08-08 11:54:18 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4a31774f019d42109f44107351bd6e2e, requestId=req_f913b730, url=/config-center/api/config/page
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4a31774f019d42109f44107351bd6e2e
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=31ms, rowsAffected=4
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4a31774f019d42109f44107351bd6e2e
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=47ms, rowsAffected=4
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4a31774f019d42109f44107351bd6e2e
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4a31774f019d42109f44107351bd6e2e, duration=83ms, status=200
2025-08-08 11:54:19 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_06c7da919c7d42ed82fff2da4fa22b06, requestId=req_0dbe7264, url=/config-center/api/ticket/page
2025-08-08 11:54:25 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_06c7da919c7d42ed82fff2da4fa22b06
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=88ms, rowsAffected=10
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_06c7da919c7d42ed82fff2da4fa22b06
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=36ms, rowsAffected=17
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_06c7da919c7d42ed82fff2da4fa22b06
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_06c7da919c7d42ed82fff2da4fa22b06, duration=147ms, status=200
2025-08-08 11:54:25 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b38445a86d3f4b78835e00daf07abd21, requestId=req_faad6c0a, url=/config-center/api/ticket/41
2025-08-08 11:54:27 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b38445a86d3f4b78835e00daf07abd21
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=16ms, rowsAffected=1
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b38445a86d3f4b78835e00daf07abd21
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b38445a86d3f4b78835e00daf07abd21, duration=20ms, status=200
2025-08-08 11:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:33 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:54:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_16fc4f650cda4a6da309e31d5dd19ec8, requestId=req_432fc03c, url=/config-center/api/ticket/41
2025-08-08 11:54:34 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_16fc4f650cda4a6da309e31d5dd19ec8
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=24ms, rowsAffected=1
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_16fc4f650cda4a6da309e31d5dd19ec8
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_16fc4f650cda4a6da309e31d5dd19ec8, duration=30ms, status=200
2025-08-08 11:54:34 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2eecb85d1c1647ea9cdb9da3eaa6c70d, requestId=req_e85671bd, url=/config-center/api/ticket/41
2025-08-08 11:54:43 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2eecb85d1c1647ea9cdb9da3eaa6c70d
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=135ms, rowsAffected=1
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2eecb85d1c1647ea9cdb9da3eaa6c70d
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2eecb85d1c1647ea9cdb9da3eaa6c70d, duration=138ms, status=200
2025-08-08 11:54:43 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fc89bb47553d464ab732e67710a7a0ac, requestId=req_ec60460a, url=/config-center/api/ticket/41
2025-08-08 11:57:40 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fc89bb47553d464ab732e67710a7a0ac
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=109ms, rowsAffected=1
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fc89bb47553d464ab732e67710a7a0ac
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fc89bb47553d464ab732e67710a7a0ac, duration=170ms, status=200
2025-08-08 11:57:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b40ce54727f94e3392bd7373b1064a2a, requestId=req_c79f2e09, url=/config-center/api/ticket/41
2025-08-08 11:58:14 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b40ce54727f94e3392bd7373b1064a2a
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=5ms, rowsAffected=1
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b40ce54727f94e3392bd7373b1064a2a
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b40ce54727f94e3392bd7373b1064a2a, duration=13ms, status=200
2025-08-08 11:58:14 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_93ab7b466ef54ca99c7bc766be710f5a, requestId=req_1e3acb35, url=/config-center/api/ticket/41
2025-08-08 11:58:32 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_93ab7b466ef54ca99c7bc766be710f5a
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=45ms, rowsAffected=1
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_93ab7b466ef54ca99c7bc766be710f5a
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_93ab7b466ef54ca99c7bc766be710f5a, duration=115ms, status=200
2025-08-08 11:58:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:59:11 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_21937573c73d482288d2572f37f77211, requestId=req_b41624bd, url=/config-center/api/ticket/41
2025-08-08 11:59:11 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:59:12 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_21937573c73d482288d2572f37f77211
2025-08-08 11:59:12 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 11:59:12 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_21937573c73d482288d2572f37f77211
2025-08-08 11:59:12 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_21937573c73d482288d2572f37f77211, duration=56ms, status=200
2025-08-08 11:59:12 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 11:59:52 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 11:59:52 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ba9d671b1b964eb1853fc6591c032be3, requestId=req_ab099362, url=/config-center/api/ticket/41
2025-08-08 11:59:53 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ba9d671b1b964eb1853fc6591c032be3
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=27ms, rowsAffected=1
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ba9d671b1b964eb1853fc6591c032be3
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ba9d671b1b964eb1853fc6591c032be3, duration=87ms, status=200
2025-08-08 11:59:53 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ce90b8ab6cc04ae7903bddcf46d16383, requestId=req_bd8e3d15, url=/config-center/api/ticket/41
2025-08-08 12:00:50 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ce90b8ab6cc04ae7903bddcf46d16383
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=130ms, rowsAffected=1
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ce90b8ab6cc04ae7903bddcf46d16383
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ce90b8ab6cc04ae7903bddcf46d16383, duration=143ms, status=200
2025-08-08 12:00:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:01:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7776da57c82b432aacec97a2db487549, requestId=req_c48443bf, url=/config-center/api/ticket/41
2025-08-08 12:01:00 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:01:01 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7776da57c82b432aacec97a2db487549
2025-08-08 12:01:01 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=114ms, rowsAffected=1
2025-08-08 12:01:01 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7776da57c82b432aacec97a2db487549
2025-08-08 12:01:01 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7776da57c82b432aacec97a2db487549, duration=127ms, status=200
2025-08-08 12:01:01 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a38ac1fff7994bf4aa059fd7801f124a, requestId=req_f5eaad33, url=/config-center/api/ticket/41
2025-08-08 12:01:53 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a38ac1fff7994bf4aa059fd7801f124a
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=30ms, rowsAffected=1
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a38ac1fff7994bf4aa059fd7801f124a
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a38ac1fff7994bf4aa059fd7801f124a, duration=36ms, status=200
2025-08-08 12:01:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0554b79fced14126af6578ed6751d80a, requestId=req_e824559f, url=/config-center/api/ticket/41
2025-08-08 12:03:00 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0554b79fced14126af6578ed6751d80a
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=23ms, rowsAffected=1
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0554b79fced14126af6578ed6751d80a
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0554b79fced14126af6578ed6751d80a, duration=65ms, status=200
2025-08-08 12:03:00 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_383d60016ad04b399b377b27febc37f8, requestId=req_ac9d20ad, url=/config-center/api/ticket/41
2025-08-08 12:03:42 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_383d60016ad04b399b377b27febc37f8
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=26ms, rowsAffected=1
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_383d60016ad04b399b377b27febc37f8
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_383d60016ad04b399b377b27febc37f8, duration=34ms, status=200
2025-08-08 12:03:42 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:04:52 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:04:52 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b05d5b23562c486e913c2dbe60803f22, requestId=req_063c5e4c, url=/config-center/api/ticket/41
2025-08-08 12:04:53 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b05d5b23562c486e913c2dbe60803f22
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b05d5b23562c486e913c2dbe60803f22
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b05d5b23562c486e913c2dbe60803f22, duration=37ms, status=200
2025-08-08 12:04:53 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5afff1c01fa44e07b82ca0b6f89e9183, requestId=req_7c828436, url=/config-center/api/ticket/41
2025-08-08 12:07:49 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5afff1c01fa44e07b82ca0b6f89e9183
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=185ms, rowsAffected=1
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5afff1c01fa44e07b82ca0b6f89e9183
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5afff1c01fa44e07b82ca0b6f89e9183, duration=217ms, status=200
2025-08-08 12:07:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 12:08:47 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 12:08:47 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_daeb1a999e924699aaca5da9673985cc, requestId=req_30cea25f, url=/config-center/api/ticket/41
2025-08-08 12:08:48 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_daeb1a999e924699aaca5da9673985cc
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=20ms, rowsAffected=1
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_daeb1a999e924699aaca5da9673985cc
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_daeb1a999e924699aaca5da9673985cc, duration=42ms, status=200
2025-08-08 12:08:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:02:26 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:02:26 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4203c78f540842e09989c2e68d1f1062, requestId=req_c5b38113, url=/config-center/api/ticket/41
2025-08-08 14:02:27 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4203c78f540842e09989c2e68d1f1062
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=16ms, rowsAffected=1
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 14:02:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4203c78f540842e09989c2e68d1f1062
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4203c78f540842e09989c2e68d1f1062, duration=127ms, status=200
2025-08-08 14:02:27 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a0c13980b40b46d4b462dc4df4091054, requestId=req_600983ac, url=/config-center/api/ticket/41
2025-08-08 14:02:33 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a0c13980b40b46d4b462dc4df4091054
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=12ms, rowsAffected=1
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a0c13980b40b46d4b462dc4df4091054
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a0c13980b40b46d4b462dc4df4091054, duration=19ms, status=200
2025-08-08 14:02:33 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_84366fee82fa4287ad2083642b9d2345, requestId=req_f21981f4, url=/config-center/api/ticket/41
2025-08-08 14:02:41 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_84366fee82fa4287ad2083642b9d2345
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=28ms, rowsAffected=1
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_84366fee82fa4287ad2083642b9d2345
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_84366fee82fa4287ad2083642b9d2345, duration=32ms, status=200
2025-08-08 14:02:41 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b82e7731642d4a45a9dd83467fed5f17, requestId=req_e69cbccd, url=/config-center/api/ticket/41
2025-08-08 14:02:42 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b82e7731642d4a45a9dd83467fed5f17
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=73ms, rowsAffected=1
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b82e7731642d4a45a9dd83467fed5f17
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b82e7731642d4a45a9dd83467fed5f17, duration=81ms, status=200
2025-08-08 14:02:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fe69bd0987494d9b83a9754c368cff55, requestId=req_d3870fe7, url=/config-center/api/ticket/41
2025-08-08 14:02:43 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fe69bd0987494d9b83a9754c368cff55
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=18ms, rowsAffected=1
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fe69bd0987494d9b83a9754c368cff55
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fe69bd0987494d9b83a9754c368cff55, duration=28ms, status=200
2025-08-08 14:02:43 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aa7635636e0d45908f98c68daf9aeeeb, requestId=req_c5f2a3a9, url=/config-center/api/ticket/41
2025-08-08 14:03:04 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aa7635636e0d45908f98c68daf9aeeeb
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=115ms, rowsAffected=1
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aa7635636e0d45908f98c68daf9aeeeb
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aa7635636e0d45908f98c68daf9aeeeb, duration=125ms, status=200
2025-08-08 14:03:04 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_247b355ed47c46a08123a7d4c09909ef, requestId=req_52f73a21, url=/config-center/api/ticket/41
2025-08-08 14:03:06 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_247b355ed47c46a08123a7d4c09909ef
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=27ms, rowsAffected=1
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_247b355ed47c46a08123a7d4c09909ef
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_247b355ed47c46a08123a7d4c09909ef, duration=34ms, status=200
2025-08-08 14:03:06 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_eac8bdbdd1914475b56eba7ca5336145, requestId=req_82b2a7bb, url=/config-center/api/ticket/41
2025-08-08 14:03:43 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_eac8bdbdd1914475b56eba7ca5336145
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=139ms, rowsAffected=1
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_eac8bdbdd1914475b56eba7ca5336145
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_eac8bdbdd1914475b56eba7ca5336145, duration=144ms, status=200
2025-08-08 14:03:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6fc9d152184042578e60d2b25309efa7, requestId=req_3df06f25, url=/config-center/api/ticket/41
2025-08-08 14:03:50 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6fc9d152184042578e60d2b25309efa7
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=22ms, rowsAffected=1
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6fc9d152184042578e60d2b25309efa7
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6fc9d152184042578e60d2b25309efa7, duration=27ms, status=200
2025-08-08 14:03:50 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:04:28 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a453d3be5a4e445da22a9d7dde674a31, requestId=req_16dfaa6a, url=/config-center/api/ticket/41
2025-08-08 14:04:28 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:04:29 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a453d3be5a4e445da22a9d7dde674a31
2025-08-08 14:04:29 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=46ms, rowsAffected=1
2025-08-08 14:04:29 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a453d3be5a4e445da22a9d7dde674a31
2025-08-08 14:04:29 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a453d3be5a4e445da22a9d7dde674a31, duration=79ms, status=200
2025-08-08 14:04:29 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_041c09b6de6e4eeeb8faab3d6743cc97, requestId=req_d96a4bc7, url=/config-center/api/ticket/41
2025-08-08 14:05:23 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_041c09b6de6e4eeeb8faab3d6743cc97
2025-08-08 14:05:23 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=27ms, rowsAffected=1
2025-08-08 14:05:24 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_041c09b6de6e4eeeb8faab3d6743cc97
2025-08-08 14:05:24 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_041c09b6de6e4eeeb8faab3d6743cc97, duration=69ms, status=200
2025-08-08 14:05:24 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:05:31 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:05:31 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:05:31 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:05:51 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_225e828d3d4043f5bc4e67a0c0bdef8f, requestId=req_6c945e19, url=/config-center/api/ticket/41
2025-08-08 14:05:51 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:05:52 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_225e828d3d4043f5bc4e67a0c0bdef8f
2025-08-08 14:05:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=131ms, rowsAffected=1
2025-08-08 14:05:52 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_225e828d3d4043f5bc4e67a0c0bdef8f
2025-08-08 14:05:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_225e828d3d4043f5bc4e67a0c0bdef8f, duration=141ms, status=200
2025-08-08 14:05:52 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c2d76949072c41018a009e9f3ec85cec, requestId=req_e32cc0b5, url=/config-center/api/ticket/41
2025-08-08 14:05:53 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c2d76949072c41018a009e9f3ec85cec
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=4ms, rowsAffected=1
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c2d76949072c41018a009e9f3ec85cec
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c2d76949072c41018a009e9f3ec85cec, duration=8ms, status=200
2025-08-08 14:05:53 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:07:11 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:07:11 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_97003657393d45c6b09bbfe9ad01ca13, requestId=req_2094a001, url=/config-center/api/ticket/41
2025-08-08 14:07:12 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_97003657393d45c6b09bbfe9ad01ca13
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=11ms, rowsAffected=1
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_97003657393d45c6b09bbfe9ad01ca13
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_97003657393d45c6b09bbfe9ad01ca13, duration=40ms, status=200
2025-08-08 14:07:12 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:07:47 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7f371468dc6b42b284fb6cb82a6f785b, requestId=req_b04b10f1, url=/config-center/api/ticket/page
2025-08-08 14:07:47 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7f371468dc6b42b284fb6cb82a6f785b
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=60ms, rowsAffected=10
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7f371468dc6b42b284fb6cb82a6f785b
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=19ms, rowsAffected=17
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7f371468dc6b42b284fb6cb82a6f785b
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7f371468dc6b42b284fb6cb82a6f785b, duration=397ms, status=200
2025-08-08 14:07:48 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_73a9928bfb094283a35161f527e807d3, requestId=req_6871fb5e, url=/config-center/api/ticket/42
2025-08-08 14:07:50 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_73a9928bfb094283a35161f527e807d3
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=47ms, rowsAffected=1
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_73a9928bfb094283a35161f527e807d3
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_73a9928bfb094283a35161f527e807d3, duration=56ms, status=200
2025-08-08 14:07:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b90147c46f3f450f9edb3f9164e58c73, requestId=req_4555fc08, url=/config-center/api/ticket/42
2025-08-08 14:08:32 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b90147c46f3f450f9edb3f9164e58c73
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=35ms, rowsAffected=1
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b90147c46f3f450f9edb3f9164e58c73
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b90147c46f3f450f9edb3f9164e58c73, duration=61ms, status=200
2025-08-08 14:08:32 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:11:06 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:11:06 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1b77c48677af40faab7db12058656fc9, requestId=req_173ad18c, url=/config-center/api/ticket/42
2025-08-08 14:11:07 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1b77c48677af40faab7db12058656fc9
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=59ms, rowsAffected=1
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1b77c48677af40faab7db12058656fc9
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1b77c48677af40faab7db12058656fc9, duration=97ms, status=200
2025-08-08 14:11:07 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:11:48 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:11:48 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a825fa5a73504783b72709a37ba18926, requestId=req_1b8b7809, url=/config-center/api/ticket/42
2025-08-08 14:11:49 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a825fa5a73504783b72709a37ba18926
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a825fa5a73504783b72709a37ba18926
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a825fa5a73504783b72709a37ba18926, duration=63ms, status=200
2025-08-08 14:11:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2fd5d2f31fe5449d8a5d5fba2b7792d0, requestId=req_078da84b, url=/config-center/api/ticket/42
2025-08-08 14:12:25 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2fd5d2f31fe5449d8a5d5fba2b7792d0
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=59ms, rowsAffected=1
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2fd5d2f31fe5449d8a5d5fba2b7792d0
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2fd5d2f31fe5449d8a5d5fba2b7792d0, duration=67ms, status=200
2025-08-08 14:12:25 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:14:24 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:14:24 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2d1744c088844df1b2ddfeee1e2b212c, requestId=req_73b37d78, url=/config-center/api/ticket/42
2025-08-08 14:14:26 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2d1744c088844df1b2ddfeee1e2b212c
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=28ms, rowsAffected=1
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2d1744c088844df1b2ddfeee1e2b212c
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2d1744c088844df1b2ddfeee1e2b212c, duration=164ms, status=200
2025-08-08 14:14:26 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/42
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/42] with attributes [authenticated]
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/42
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_318c87eef74444ce8d7cc5f898d1637d, requestId=req_1be2115d, url=/config-center/api/ticket/42
2025-08-08 14:15:06 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：42
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_318c87eef74444ce8d7cc5f898d1637d
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=26ms, rowsAffected=1
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_318c87eef74444ce8d7cc5f898d1637d
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_318c87eef74444ce8d7cc5f898d1637d, duration=56ms, status=200
2025-08-08 14:15:06 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:23 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 14:15:23 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:23 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:23 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fd91cb7fb49f454b858aa78f08497e80, requestId=req_c2de1ed9, url=/config-center/api/enum/get_all_enum
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fd91cb7fb49f454b858aa78f08497e80
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fd91cb7fb49f454b858aa78f08497e80, duration=35ms, status=200
2025-08-08 14:15:24 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:24 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 14:15:24 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_948d86b19416424b9fba7c3026fcafd2, requestId=req_699ef430, url=/config-center/api/config/page
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_948d86b19416424b9fba7c3026fcafd2
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=575ms, rowsAffected=4
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_948d86b19416424b9fba7c3026fcafd2
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=161ms, rowsAffected=4
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_948d86b19416424b9fba7c3026fcafd2
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_948d86b19416424b9fba7c3026fcafd2, duration=801ms, status=200
2025-08-08 14:15:25 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/users/list?page=1&size=20
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/users/list?page=1&size=20] with attributes [authenticated]
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/users/list?page=1&size=20
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b6f34617aad345efb30f2ba6268d5a8a, requestId=req_dcff1f28, url=/config-center/api/users/list
2025-08-08 14:15:32 [http-nio-9090-exec-8] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.UserController] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fbd80498079e477fa6ebca424ac15458, requestId=req_42f7c2fa, url=/config-center/api/config/page
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e398a938a28446b59b66b6f7578efc09, requestId=req_d3384f4b, url=/config-center/api/enum/get_all_enum
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e398a938a28446b59b66b6f7578efc09
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e398a938a28446b59b66b6f7578efc09, duration=3ms, status=200
2025-08-08 14:15:33 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fbd80498079e477fa6ebca424ac15458
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=205ms, rowsAffected=4
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fbd80498079e477fa6ebca424ac15458
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=136ms, rowsAffected=4
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fbd80498079e477fa6ebca424ac15458
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fbd80498079e477fa6ebca424ac15458, duration=350ms, status=200
2025-08-08 14:15:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:34 [http-nio-9090-exec-8] INFO  com.example.configcenter.controller.UserController - 查询用户列表 - 参数: UserQueryRequest(keyword=null, role=null, status=null, department=null, startTime=null, endTime=null), IP: 0:0:0:0:0:0:0:1
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b6f34617aad345efb30f2ba6268d5a8a
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=37ms, rowsAffected=2
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b6f34617aad345efb30f2ba6268d5a8a
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=48ms, rowsAffected=2
2025-08-08 14:15:35 [http-nio-9090-exec-8] INFO  com.example.configcenter.controller.UserController - 查询用户列表成功 - 总数: 2, 当前页: 1, IP: 0:0:0:0:0:0:0:1
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b6f34617aad345efb30f2ba6268d5a8a
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b6f34617aad345efb30f2ba6268d5a8a, duration=2992ms, status=200
2025-08-08 14:15:35 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_448a902fc233420fa27489b0ca001cc6, requestId=req_17700c16, url=/config-center/api/config/page
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9c7cdeb5cf47413cbdc09fa20c302d61, requestId=req_4a8997aa, url=/config-center/api/enum/get_all_enum
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9c7cdeb5cf47413cbdc09fa20c302d61
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9c7cdeb5cf47413cbdc09fa20c302d61, duration=6ms, status=200
2025-08-08 14:15:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_448a902fc233420fa27489b0ca001cc6
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=44ms, rowsAffected=4
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_448a902fc233420fa27489b0ca001cc6
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=19ms, rowsAffected=4
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_448a902fc233420fa27489b0ca001cc6
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_448a902fc233420fa27489b0ca001cc6, duration=77ms, status=200
2025-08-08 14:15:40 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:19:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_35bedaf9b42342968f11bdf947789a24, requestId=req_fa09ccc5, url=/config-center/api/ticket/page
2025-08-08 14:19:26 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_35bedaf9b42342968f11bdf947789a24
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=103ms, rowsAffected=10
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_35bedaf9b42342968f11bdf947789a24
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=17
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_35bedaf9b42342968f11bdf947789a24
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_35bedaf9b42342968f11bdf947789a24, duration=193ms, status=200
2025-08-08 14:19:27 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cd274ca9dcb94361b9dbbe06fec7c62b, requestId=req_d2ccdbb9, url=/config-center/api/ticket/41
2025-08-08 14:19:28 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cd274ca9dcb94361b9dbbe06fec7c62b
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=14ms, rowsAffected=1
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cd274ca9dcb94361b9dbbe06fec7c62b
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cd274ca9dcb94361b9dbbe06fec7c62b, duration=24ms, status=200
2025-08-08 14:19:28 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:23:02 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:23:02 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ab8e1a9ddef94044bd7f1d724b60c5ce, requestId=req_d61bac72, url=/config-center/api/ticket/41
2025-08-08 14:23:03 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ab8e1a9ddef94044bd7f1d724b60c5ce
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=10ms, rowsAffected=1
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ab8e1a9ddef94044bd7f1d724b60c5ce
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ab8e1a9ddef94044bd7f1d724b60c5ce, duration=85ms, status=200
2025-08-08 14:23:03 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_67cfe455f354471186b272478c9daee8, requestId=req_d611bbfe, url=/config-center/api/ticket/41
2025-08-08 14:23:54 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_67cfe455f354471186b272478c9daee8
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=56ms, rowsAffected=1
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_67cfe455f354471186b272478c9daee8
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_67cfe455f354471186b272478c9daee8, duration=87ms, status=200
2025-08-08 14:23:54 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d1fb954fd0224b84858d4d88468e64d3, requestId=req_29525dd5, url=/config-center/api/ticket/41
2025-08-08 14:24:04 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d1fb954fd0224b84858d4d88468e64d3
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=93ms, rowsAffected=1
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d1fb954fd0224b84858d4d88468e64d3
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d1fb954fd0224b84858d4d88468e64d3, duration=101ms, status=200
2025-08-08 14:24:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:25:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:25:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a7fd5ee1530542de98625e17308c7368, requestId=req_bb59b807, url=/config-center/api/ticket/41
2025-08-08 14:25:56 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a7fd5ee1530542de98625e17308c7368
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=62ms, rowsAffected=1
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a7fd5ee1530542de98625e17308c7368
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a7fd5ee1530542de98625e17308c7368, duration=94ms, status=200
2025-08-08 14:25:56 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_50bedad18f9b476e92a6b67e688f6985, requestId=req_d3bee087, url=/config-center/api/ticket/41
2025-08-08 14:26:50 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_50bedad18f9b476e92a6b67e688f6985
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=43ms, rowsAffected=1
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_50bedad18f9b476e92a6b67e688f6985
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_50bedad18f9b476e92a6b67e688f6985, duration=68ms, status=200
2025-08-08 14:26:50 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_10cf1c7d81f2486ab04783823eaa1b5c, requestId=req_0328c3b3, url=/config-center/api/ticket/41
2025-08-08 14:29:07 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_10cf1c7d81f2486ab04783823eaa1b5c
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=26ms, rowsAffected=1
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_10cf1c7d81f2486ab04783823eaa1b5c
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_10cf1c7d81f2486ab04783823eaa1b5c, duration=50ms, status=200
2025-08-08 14:29:07 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:29:34 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:29:34 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_af79ab59a8394bca84dc7d4c05173e7e, requestId=req_b02341bb, url=/config-center/api/ticket/41
2025-08-08 14:29:35 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af79ab59a8394bca84dc7d4c05173e7e
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=69ms, rowsAffected=1
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_af79ab59a8394bca84dc7d4c05173e7e
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_af79ab59a8394bca84dc7d4c05173e7e, duration=88ms, status=200
2025-08-08 14:29:35 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/41
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/41] with attributes [authenticated]
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/41
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_36f419c048174462b128fb9bfcb05f39, requestId=req_68f60334, url=/config-center/api/ticket/41
2025-08-08 14:29:47 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：41
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_36f419c048174462b128fb9bfcb05f39
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=108ms, rowsAffected=1
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_36f419c048174462b128fb9bfcb05f39
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_36f419c048174462b128fb9bfcb05f39, duration=132ms, status=200
2025-08-08 14:29:47 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:30:05 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:30:05 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d7d68619282c49358fcceef24956b123, requestId=req_5f36553f, url=/config-center/api/enum/get_all_enum
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d7d68619282c49358fcceef24956b123
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d7d68619282c49358fcceef24956b123, duration=13ms, status=200
2025-08-08 14:30:05 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d56fe154a7cb4b5190d9dcb61b62f385, requestId=req_582fcaab, url=/config-center/api/config/page
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d56fe154a7cb4b5190d9dcb61b62f385
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=83ms, rowsAffected=4
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d56fe154a7cb4b5190d9dcb61b62f385
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=56ms, rowsAffected=4
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d56fe154a7cb4b5190d9dcb61b62f385
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d56fe154a7cb4b5190d9dcb61b62f385, duration=185ms, status=200
2025-08-08 14:30:06 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_44a72fef58d84fdda27f61c594957918, requestId=req_2dfd61b8, url=/config-center/api/config/page
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_44a72fef58d84fdda27f61c594957918
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=72ms, rowsAffected=4
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_44a72fef58d84fdda27f61c594957918
2025-08-08 14:31:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=76ms, rowsAffected=4
2025-08-08 14:31:47 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_44a72fef58d84fdda27f61c594957918
2025-08-08 14:31:47 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_44a72fef58d84fdda27f61c594957918, duration=177ms, status=200
2025-08-08 14:31:47 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dc5f1dc78de047b6827df18d5cf2205e, requestId=req_56ec1acc, url=/config-center/api/ticket/page
2025-08-08 14:31:52 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dc5f1dc78de047b6827df18d5cf2205e
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=49ms, rowsAffected=10
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dc5f1dc78de047b6827df18d5cf2205e
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=15ms, rowsAffected=17
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dc5f1dc78de047b6827df18d5cf2205e
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dc5f1dc78de047b6827df18d5cf2205e, duration=121ms, status=200
2025-08-08 14:31:52 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:13:08 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 14478 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 15:13:08 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 15:13:08 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 15:13:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 15:13:11 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 15:13:11 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 15:13:11 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 15:13:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 15:13:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2611 ms
2025-08-08 15:13:11 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 15:13:12 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 15:13:13 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 15:13:13 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 15:13:13 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=70MB
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=116MB
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@67c2b55d
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 15:13:13 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 15:13:13 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 15:13:13 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 15:13:13 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 15:13:13 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 15:13:13 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 15:13:14 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 15:13:14 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7878459f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f6a5cc9, org.springframework.security.web.context.SecurityContextPersistenceFilter@52bcfd10, org.springframework.security.web.header.HeaderWriterFilter@733345f5, org.springframework.web.filter.CorsFilter@5d24703e, org.springframework.security.web.authentication.logout.LogoutFilter@3e563293, com.example.configcenter.security.JwtAuthenticationFilter@1d2d4d7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@329aa2d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@755a90a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ef10d3b, org.springframework.security.web.session.SessionManagementFilter@6ace3, org.springframework.security.web.access.ExceptionTranslationFilter@67167f8f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49741e80]
2025-08-08 15:13:14 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 15:13:14 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 15:13:14 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:61106, server: localhost/127.0.0.1:2181
2025-08-08 15:13:14 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0115, negotiated timeout = 40000
2025-08-08 15:13:14 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 15:13:14 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 15:13:14 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 15:13:14 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 15:13:15 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 15:13:16 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 15:13:16 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 15:13:16 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 15:13:16 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 15:13:16 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754637196211
2025-08-08 15:13:16 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 15:13:16 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 15:13:16 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 15:13:16 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 15:13:16 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 15:13:16 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 8.582 seconds (JVM running for 10.009)
2025-08-08 15:13:17 [RMI TCP Connection(2)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 15:13:17 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 15:13:17 [RMI TCP Connection(2)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 15:13:17 [RMI TCP Connection(1)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 15:14:14 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 15:14:14 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0115 closed
2025-08-08 15:14:14 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0115
2025-08-08 15:14:14 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 15:14:14 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 15:14:14 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 15:14:22 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 14657 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 15:14:22 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 15:14:22 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 15:14:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 15:14:24 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 15:14:24 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 15:14:24 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 15:14:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 15:14:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2212 ms
2025-08-08 15:14:25 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 15:14:25 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 15:14:26 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 15:14:26 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 15:14:26 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=112MB
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=150MB
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@5d6d424d
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 15:14:26 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 15:14:26 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 15:14:26 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 15:14:26 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 15:14:26 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 15:14:26 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 15:14:27 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 15:14:27 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1be3a294, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33502cfe, org.springframework.security.web.context.SecurityContextPersistenceFilter@7095b688, org.springframework.security.web.header.HeaderWriterFilter@1ab717f3, org.springframework.web.filter.CorsFilter@729d1428, org.springframework.security.web.authentication.logout.LogoutFilter@147aceec, com.example.configcenter.security.JwtAuthenticationFilter@39ae6408, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bddac1c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35c3d6e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@115924ba, org.springframework.security.web.session.SessionManagementFilter@4379fe2a, org.springframework.security.web.access.ExceptionTranslationFilter@6ace3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5af1b221]
2025-08-08 15:14:27 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 15:14:27 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 15:14:27 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:61473, server: localhost/127.0.0.1:2181
2025-08-08 15:14:27 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0116, negotiated timeout = 40000
2025-08-08 15:14:27 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 15:14:27 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 15:14:27 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 15:14:27 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 15:14:27 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 15:14:28 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 15:14:29 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 15:14:29 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 15:14:29 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 15:14:29 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754637269147
2025-08-08 15:14:29 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 15:14:29 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 15:14:29 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 15:14:29 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 15:14:29 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 15:14:29 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 7.261 seconds (JVM running for 8.397)
2025-08-08 15:14:30 [RMI TCP Connection(4)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 15:14:30 [RMI TCP Connection(4)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 15:14:30 [RMI TCP Connection(4)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 15:14:30 [RMI TCP Connection(5)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 15:14:38 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:14:38 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:39 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:14:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:14:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6d5ba2cc51874dea88cb7cfbb9690532, requestId=req_a3e875e8, url=/config-center/api/ticket/page
2025-08-08 15:14:39 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:14:40 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 15:14:40 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 15:14:40 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 15:14:40 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 15:14:40 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754637280079
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6d5ba2cc51874dea88cb7cfbb9690532
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=151ms, rowsAffected=1
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6d5ba2cc51874dea88cb7cfbb9690532
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=12ms, rowsAffected=1
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 15:14:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6d5ba2cc51874dea88cb7cfbb9690532
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6d5ba2cc51874dea88cb7cfbb9690532, duration=1213ms, status=200
2025-08-08 15:14:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f8a94908c4ca4342a932bca26f8fdbee, requestId=req_819f3519, url=/config-center/api/config/page
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5fd63c502aa44e9089f8014632001c2c, requestId=req_4a5b3124, url=/config-center/api/enum/get_all_enum
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5fd63c502aa44e9089f8014632001c2c
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5fd63c502aa44e9089f8014632001c2c, duration=12ms, status=200
2025-08-08 15:14:44 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f8a94908c4ca4342a932bca26f8fdbee
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=903ms, rowsAffected=4
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f8a94908c4ca4342a932bca26f8fdbee
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=41ms, rowsAffected=4
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f8a94908c4ca4342a932bca26f8fdbee
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f8a94908c4ca4342a932bca26f8fdbee, duration=1041ms, status=200
2025-08-08 15:14:45 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_338531c7d1e24818a6377cfb7dea2ce5, requestId=req_c9e1f649, url=/config-center/api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_338531c7d1e24818a6377cfb7dea2ce5
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=4ms, rowsAffected=1
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_338531c7d1e24818a6377cfb7dea2ce5
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_338531c7d1e24818a6377cfb7dea2ce5, duration=169ms, status=200
2025-08-08 15:14:53 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/10] with attributes [authenticated]
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0fec627bf42246fb8095423c04e1c552, requestId=req_769170ff, url=/config-center/api/config/10
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fec627bf42246fb8095423c04e1c552
2025-08-08 15:14:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=4ms, rowsAffected=1
2025-08-08 15:14:54 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fec627bf42246fb8095423c04e1c552
2025-08-08 15:14:54 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=create, duration=45ms, rowsAffected=1
2025-08-08 15:14:54 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0fec627bf42246fb8095423c04e1c552
2025-08-08 15:14:54 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0fec627bf42246fb8095423c04e1c552, duration=219ms, status=200
2025-08-08 15:14:54 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5bb48e60114c4d88a932b93cf0ddbdce, requestId=req_e6f9b53e, url=/config-center/api/ticket/59
2025-08-08 15:14:54 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5bb48e60114c4d88a932b93cf0ddbdce
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=5ms, rowsAffected=1
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5bb48e60114c4d88a932b93cf0ddbdce
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5bb48e60114c4d88a932b93cf0ddbdce, duration=11ms, status=200
2025-08-08 15:14:54 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:15:08 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ba332e4743c64d22bd5057adf1710d90, requestId=req_67edafed, url=/config-center/api/ticket/page
2025-08-08 15:15:08 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ba332e4743c64d22bd5057adf1710d90
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=5ms, rowsAffected=2
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ba332e4743c64d22bd5057adf1710d90
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=2
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ba332e4743c64d22bd5057adf1710d90
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ba332e4743c64d22bd5057adf1710d90, duration=18ms, status=200
2025-08-08 15:15:09 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4cc8b9017a774580a2c52dd522628c12, requestId=req_90cbb2a9, url=/config-center/api/ticket/59
2025-08-08 15:15:17 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4cc8b9017a774580a2c52dd522628c12
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=4ms, rowsAffected=1
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4cc8b9017a774580a2c52dd522628c12
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4cc8b9017a774580a2c52dd522628c12, duration=8ms, status=200
2025-08-08 15:15:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:37 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:18:37 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_987fe51c75754fda82a00d4825dfbce0, requestId=req_416c2482, url=/config-center/api/ticket/59
2025-08-08 15:18:38 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_987fe51c75754fda82a00d4825dfbce0
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=19ms, rowsAffected=1
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_987fe51c75754fda82a00d4825dfbce0
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_987fe51c75754fda82a00d4825dfbce0, duration=154ms, status=200
2025-08-08 15:18:38 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c5b85cdd001d4c1ba16076971ff9daf6, requestId=req_87f08927, url=/config-center/api/enum/get_all_enum
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c5b85cdd001d4c1ba16076971ff9daf6
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c5b85cdd001d4c1ba16076971ff9daf6, duration=5ms, status=200
2025-08-08 15:18:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2b3389c99833477ab1219c1768309194, requestId=req_e72168b5, url=/config-center/api/config/page
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2b3389c99833477ab1219c1768309194
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=42ms, rowsAffected=4
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2b3389c99833477ab1219c1768309194
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=6ms, rowsAffected=4
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2b3389c99833477ab1219c1768309194
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2b3389c99833477ab1219c1768309194, duration=62ms, status=200
2025-08-08 15:18:45 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_af84504a0fd6406a8ef0e92327e3012c, requestId=req_fcb65ded, url=/config-center/api/config/14
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_74fcdd2407424b66ac4b6ac782425fc1, requestId=req_577f4d2d, url=/config-center/api/config/history
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af84504a0fd6406a8ef0e92327e3012c
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=6ms, rowsAffected=1
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_af84504a0fd6406a8ef0e92327e3012c
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_af84504a0fd6406a8ef0e92327e3012c, duration=117ms, status=200
2025-08-08 15:18:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_74fcdd2407424b66ac4b6ac782425fc1
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=69ms, rowsAffected=0
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_74fcdd2407424b66ac4b6ac782425fc1
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=0
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_74fcdd2407424b66ac4b6ac782425fc1
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_74fcdd2407424b66ac4b6ac782425fc1, duration=120ms, status=200
2025-08-08 15:18:48 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cc7d752778284f12a94d2e087e6d63d3, requestId=req_f8f56376, url=/config-center/api/config/14
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2464587db9964185b938323be550518b, requestId=req_594d11de, url=/config-center/api/config/history
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cc7d752778284f12a94d2e087e6d63d3
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cc7d752778284f12a94d2e087e6d63d3, duration=113ms, status=200
2025-08-08 15:18:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2464587db9964185b938323be550518b
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=106ms, rowsAffected=0
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2464587db9964185b938323be550518b
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=5ms, rowsAffected=0
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2464587db9964185b938323be550518b
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2464587db9964185b938323be550518b, duration=117ms, status=200
2025-08-08 15:18:52 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1daf426b56414b068770e99d26416158, requestId=req_c72f73fb, url=/config-center/api/enum/get_all_enum
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_de937ac28e824c1399830ac8241c4d8b, requestId=req_9c9d2cb2, url=/config-center/api/config/page
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1daf426b56414b068770e99d26416158
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1daf426b56414b068770e99d26416158, duration=5ms, status=200
2025-08-08 15:18:57 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_de937ac28e824c1399830ac8241c4d8b
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=52ms, rowsAffected=4
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_de937ac28e824c1399830ac8241c4d8b
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=3ms, rowsAffected=4
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_de937ac28e824c1399830ac8241c4d8b
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_de937ac28e824c1399830ac8241c4d8b, duration=83ms, status=200
2025-08-08 15:18:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:19:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:19:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:19:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 15:23:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5b8cd454dab54dbe935a024a0199d36b, requestId=req_ae55b387, url=/config-center/api/ticket/page
2025-08-08 15:25:03 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5b8cd454dab54dbe935a024a0199d36b
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=105ms, rowsAffected=2
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5b8cd454dab54dbe935a024a0199d36b
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=2
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5b8cd454dab54dbe935a024a0199d36b
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5b8cd454dab54dbe935a024a0199d36b, duration=164ms, status=200
2025-08-08 15:25:03 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_58fb9c36742f4e68a5f95a41834c67d1, requestId=req_ae8daf59, url=/config-center/api/ticket/59
2025-08-08 15:25:19 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_58fb9c36742f4e68a5f95a41834c67d1
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=29ms, rowsAffected=1
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_58fb9c36742f4e68a5f95a41834c67d1
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_58fb9c36742f4e68a5f95a41834c67d1, duration=42ms, status=200
2025-08-08 15:25:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_339f8a4f2ebd48159f3b778a56e3f6b9, requestId=req_ab475be8, url=/config-center/api/ticket/page
2025-08-08 15:25:26 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_339f8a4f2ebd48159f3b778a56e3f6b9
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=4ms, rowsAffected=2
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_339f8a4f2ebd48159f3b778a56e3f6b9
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=18ms, rowsAffected=2
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_339f8a4f2ebd48159f3b778a56e3f6b9
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_339f8a4f2ebd48159f3b778a56e3f6b9, duration=28ms, status=200
2025-08-08 15:25:26 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4da970de73144b809186663f68c9675f, requestId=req_7f719816, url=/config-center/api/ticket/58
2025-08-08 15:25:27 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 15:25:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4da970de73144b809186663f68c9675f
2025-08-08 15:25:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=68ms, rowsAffected=1
2025-08-08 15:25:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4da970de73144b809186663f68c9675f
2025-08-08 15:25:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4da970de73144b809186663f68c9675f, duration=70ms, status=200
2025-08-08 15:25:28 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f0105e593ad74805837c0b8d0cd2269f, requestId=req_9136c8ec, url=/config-center/api/ticket/page
2025-08-08 15:25:30 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f0105e593ad74805837c0b8d0cd2269f
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=2
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f0105e593ad74805837c0b8d0cd2269f
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=2ms, rowsAffected=2
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f0105e593ad74805837c0b8d0cd2269f
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f0105e593ad74805837c0b8d0cd2269f, duration=40ms, status=200
2025-08-08 15:25:30 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_104ec24b61ba46bb8c1d20b2b700cb0f, requestId=req_d5e584d7, url=/config-center/api/ticket/59
2025-08-08 15:25:35 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_104ec24b61ba46bb8c1d20b2b700cb0f
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=37ms, rowsAffected=1
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_104ec24b61ba46bb8c1d20b2b700cb0f
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_104ec24b61ba46bb8c1d20b2b700cb0f, duration=55ms, status=200
2025-08-08 15:25:35 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8556726368ae4c69821330a706b26ad5, requestId=req_f2fa8ba4, url=/config-center/api/ticket/59
2025-08-08 15:27:20 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8556726368ae4c69821330a706b26ad5
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=295ms, rowsAffected=1
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8556726368ae4c69821330a706b26ad5
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8556726368ae4c69821330a706b26ad5, duration=347ms, status=200
2025-08-08 15:27:20 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c1348d37ab714106a563b442619e9f84, requestId=req_6a268bd2, url=/config-center/api/enum/get_all_enum
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c1348d37ab714106a563b442619e9f84
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c1348d37ab714106a563b442619e9f84, duration=7ms, status=200
2025-08-08 15:27:23 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c71d85ffab964386b23f598b68824ca6, requestId=req_6e6b1119, url=/config-center/api/config/page
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c71d85ffab964386b23f598b68824ca6
2025-08-08 15:27:23 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=102ms, rowsAffected=4
2025-08-08 15:27:24 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c71d85ffab964386b23f598b68824ca6
2025-08-08 15:27:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=43ms, rowsAffected=4
2025-08-08 15:27:24 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c71d85ffab964386b23f598b68824ca6
2025-08-08 15:27:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c71d85ffab964386b23f598b68824ca6, duration=170ms, status=200
2025-08-08 15:27:24 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_949d834014ff4478aa50dbe21f368c78, requestId=req_88c5d750, url=/config-center/api/ticket/page
2025-08-08 15:27:28 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_949d834014ff4478aa50dbe21f368c78
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=28ms, rowsAffected=2
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_949d834014ff4478aa50dbe21f368c78
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=2
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_949d834014ff4478aa50dbe21f368c78
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_949d834014ff4478aa50dbe21f368c78, duration=43ms, status=200
2025-08-08 15:27:28 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d4ca63fa4d60456c8729dc8488a5bb6f, requestId=req_0e273c0a, url=/config-center/api/ticket/59
2025-08-08 15:27:32 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d4ca63fa4d60456c8729dc8488a5bb6f
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=13ms, rowsAffected=1
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d4ca63fa4d60456c8729dc8488a5bb6f
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d4ca63fa4d60456c8729dc8488a5bb6f, duration=18ms, status=200
2025-08-08 15:27:32 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b4eab439c1a24c46817a1932ae016dde, requestId=req_3538e6f9, url=/config-center/api/enum/get_all_enum
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0041421d0eb44dcfbad5d0efcdba818e, requestId=req_d2a51952, url=/config-center/api/config/page
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b4eab439c1a24c46817a1932ae016dde
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b4eab439c1a24c46817a1932ae016dde, duration=2ms, status=200
2025-08-08 15:27:38 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0041421d0eb44dcfbad5d0efcdba818e
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=12ms, rowsAffected=4
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0041421d0eb44dcfbad5d0efcdba818e
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=4
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0041421d0eb44dcfbad5d0efcdba818e
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0041421d0eb44dcfbad5d0efcdba818e, duration=39ms, status=200
2025-08-08 15:27:38 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2f6e9030724f4b80b6e496dfcfd9d549, requestId=req_1b4234e6, url=/config-center/api/ticket/page
2025-08-08 15:27:39 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2f6e9030724f4b80b6e496dfcfd9d549
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=2
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2f6e9030724f4b80b6e496dfcfd9d549
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=14ms, rowsAffected=2
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2f6e9030724f4b80b6e496dfcfd9d549
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2f6e9030724f4b80b6e496dfcfd9d549, duration=29ms, status=200
2025-08-08 15:27:39 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_436c4d0103004fee91e4ed8baf2a1abb, requestId=req_b3bc0acf, url=/config-center/api/ticket/page
2025-08-08 15:29:35 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_436c4d0103004fee91e4ed8baf2a1abb
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=2
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_436c4d0103004fee91e4ed8baf2a1abb
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=14ms, rowsAffected=2
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_436c4d0103004fee91e4ed8baf2a1abb
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_436c4d0103004fee91e4ed8baf2a1abb, duration=42ms, status=200
2025-08-08 15:29:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:34:39 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:34:39 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_308254d47e954fccbde69a075994d20a, requestId=req_a08a491e, url=/config-center/api/ticket/page
2025-08-08 15:34:40 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_308254d47e954fccbde69a075994d20a
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=115ms, rowsAffected=2
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_308254d47e954fccbde69a075994d20a
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=2
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_308254d47e954fccbde69a075994d20a
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_308254d47e954fccbde69a075994d20a, duration=297ms, status=200
2025-08-08 15:34:40 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_238c205fdcf44fb3b9fd733c495b3e72, requestId=req_ac56a956, url=/config-center/api/ticket/page
2025-08-08 15:35:00 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_238c205fdcf44fb3b9fd733c495b3e72
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=26ms, rowsAffected=2
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_238c205fdcf44fb3b9fd733c495b3e72
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=16ms, rowsAffected=2
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_238c205fdcf44fb3b9fd733c495b3e72
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_238c205fdcf44fb3b9fd733c495b3e72, duration=55ms, status=200
2025-08-08 15:35:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0e970df578fe4a79959aac8248681487, requestId=req_4b542d08, url=/config-center/api/ticket/page
2025-08-08 15:36:06 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e970df578fe4a79959aac8248681487
2025-08-08 15:36:06 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=118ms, rowsAffected=2
2025-08-08 15:36:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e970df578fe4a79959aac8248681487
2025-08-08 15:36:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=403ms, rowsAffected=2
2025-08-08 15:36:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0e970df578fe4a79959aac8248681487
2025-08-08 15:36:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0e970df578fe4a79959aac8248681487, duration=613ms, status=200
2025-08-08 15:36:07 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5a84f49b9ef847a6a3dd0d061126ef5f, requestId=req_f9cba504, url=/config-center/api/ticket/page
2025-08-08 15:42:34 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5a84f49b9ef847a6a3dd0d061126ef5f
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=171ms, rowsAffected=2
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5a84f49b9ef847a6a3dd0d061126ef5f
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=50ms, rowsAffected=2
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5a84f49b9ef847a6a3dd0d061126ef5f
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5a84f49b9ef847a6a3dd0d061126ef5f, duration=319ms, status=200
2025-08-08 15:42:34 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:43:19 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:43:19 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8ade41badae64fa8a9639299cbf9c0de, requestId=req_c997294e, url=/config-center/api/ticket/page
2025-08-08 15:43:20 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ade41badae64fa8a9639299cbf9c0de
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=62ms, rowsAffected=2
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ade41badae64fa8a9639299cbf9c0de
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=27ms, rowsAffected=2
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8ade41badae64fa8a9639299cbf9c0de
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8ade41badae64fa8a9639299cbf9c0de, duration=152ms, status=200
2025-08-08 15:43:20 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:45:16 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b0400a3b3a1445c486c7c4f2be560a7b, requestId=req_b8c10970, url=/config-center/api/ticket/59
2025-08-08 15:45:17 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b0400a3b3a1445c486c7c4f2be560a7b
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=62ms, rowsAffected=1
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b0400a3b3a1445c486c7c4f2be560a7b
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b0400a3b3a1445c486c7c4f2be560a7b, duration=109ms, status=200
2025-08-08 15:45:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:45:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_632938531e0f4166bc2c584ca64c092d, requestId=req_e63d6d9e, url=/config-center/api/ticket/page
2025-08-08 15:45:20 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_632938531e0f4166bc2c584ca64c092d
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=30ms, rowsAffected=2
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_632938531e0f4166bc2c584ca64c092d
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=20ms, rowsAffected=2
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_632938531e0f4166bc2c584ca64c092d
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_632938531e0f4166bc2c584ca64c092d, duration=104ms, status=200
2025-08-08 15:45:20 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8b15ad716082463b95f584d55b84e141, requestId=req_a6599313, url=/config-center/api/ticket/58
2025-08-08 15:45:21 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8b15ad716082463b95f584d55b84e141
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=36ms, rowsAffected=1
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8b15ad716082463b95f584d55b84e141
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8b15ad716082463b95f584d55b84e141, duration=40ms, status=200
2025-08-08 15:45:21 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c658c6f90bd74f9d87d0b866893c1de1, requestId=req_5f7b809a, url=/config-center/api/ticket/page
2025-08-08 15:45:23 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c658c6f90bd74f9d87d0b866893c1de1
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=16ms, rowsAffected=2
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c658c6f90bd74f9d87d0b866893c1de1
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=2
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c658c6f90bd74f9d87d0b866893c1de1
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c658c6f90bd74f9d87d0b866893c1de1, duration=31ms, status=200
2025-08-08 15:45:23 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bed5bfbf0369401591b6c9ef3fa02742, requestId=req_3080ee8c, url=/config-center/api/ticket/59
2025-08-08 15:45:48 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bed5bfbf0369401591b6c9ef3fa02742
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=89ms, rowsAffected=1
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bed5bfbf0369401591b6c9ef3fa02742
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bed5bfbf0369401591b6c9ef3fa02742, duration=99ms, status=200
2025-08-08 15:45:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0fed4f47c892467da3289ebf9f3e9f68, requestId=req_8db2ef78, url=/config-center/api/ticket/59
2025-08-08 15:50:34 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fed4f47c892467da3289ebf9f3e9f68
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=130ms, rowsAffected=1
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0fed4f47c892467da3289ebf9f3e9f68
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0fed4f47c892467da3289ebf9f3e9f68, duration=190ms, status=200
2025-08-08 15:50:34 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_909e01c8c76841dcae21b0496d16474e, requestId=req_cc8795f4, url=/config-center/api/ticket/59
2025-08-08 15:51:21 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_909e01c8c76841dcae21b0496d16474e
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=69ms, rowsAffected=1
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_909e01c8c76841dcae21b0496d16474e
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_909e01c8c76841dcae21b0496d16474e, duration=183ms, status=200
2025-08-08 15:51:21 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_089cda009d34430ca5c3282eee96747b, requestId=req_a15c0a4d, url=/config-center/api/ticket/59
2025-08-08 15:53:36 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_089cda009d34430ca5c3282eee96747b
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=43ms, rowsAffected=1
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_089cda009d34430ca5c3282eee96747b
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_089cda009d34430ca5c3282eee96747b, duration=128ms, status=200
2025-08-08 15:53:36 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:53:36 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:53:36 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2b183bddc41a4af08e727eb450fb8d24, requestId=req_ecce1f7a, url=/config-center/api/config/10
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2b183bddc41a4af08e727eb450fb8d24
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2b183bddc41a4af08e727eb450fb8d24, duration=730ms, status=200
2025-08-08 15:53:37 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:54:23 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:54:23 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e038817435f64274940b67a99b99a905, requestId=req_86aa84e2, url=/config-center/api/ticket/59
2025-08-08 15:54:24 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e038817435f64274940b67a99b99a905
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=176ms, rowsAffected=1
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e038817435f64274940b67a99b99a905
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e038817435f64274940b67a99b99a905, duration=213ms, status=200
2025-08-08 15:54:24 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_63d2f11225924341ac3b501a899c64d6, requestId=req_10c071af, url=/config-center/api/config/10
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_63d2f11225924341ac3b501a899c64d6
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_63d2f11225924341ac3b501a899c64d6, duration=122ms, status=200
2025-08-08 15:54:24 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:55:02 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:55:02 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c2f67519163e4ee99c60f56859831940, requestId=req_b1409f5b, url=/config-center/api/ticket/59
2025-08-08 15:55:03 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c2f67519163e4ee99c60f56859831940
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=77ms, rowsAffected=1
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c2f67519163e4ee99c60f56859831940
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c2f67519163e4ee99c60f56859831940, duration=258ms, status=200
2025-08-08 15:55:03 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:55:03 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_217eb8b5cf2342febd66555dc16efa64, requestId=req_e62cbb81, url=/config-center/api/config/10
2025-08-08 15:55:04 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_217eb8b5cf2342febd66555dc16efa64
2025-08-08 15:55:04 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_217eb8b5cf2342febd66555dc16efa64, duration=87ms, status=200
2025-08-08 15:55:04 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dfbd7c14d0904d589c0e452326030f7b, requestId=req_8f7f33b8, url=/config-center/api/enum/get_all_enum
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dfbd7c14d0904d589c0e452326030f7b
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dfbd7c14d0904d589c0e452326030f7b, duration=9ms, status=200
2025-08-08 15:55:15 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:55:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_060d159ec50742cf9ba991d9212a617a, requestId=req_b2ae252e, url=/config-center/api/config/page
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_060d159ec50742cf9ba991d9212a617a
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=184ms, rowsAffected=4
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_060d159ec50742cf9ba991d9212a617a
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=53ms, rowsAffected=4
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_060d159ec50742cf9ba991d9212a617a
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_060d159ec50742cf9ba991d9212a617a, duration=295ms, status=200
2025-08-08 15:55:16 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8955e7b17cff4b44a8fbe26d9bee193c, requestId=req_2bafb81b, url=/config-center/api/ticket/page
2025-08-08 15:55:17 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8955e7b17cff4b44a8fbe26d9bee193c
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=35ms, rowsAffected=2
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8955e7b17cff4b44a8fbe26d9bee193c
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=16ms, rowsAffected=2
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8955e7b17cff4b44a8fbe26d9bee193c
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8955e7b17cff4b44a8fbe26d9bee193c, duration=261ms, status=200
2025-08-08 15:55:17 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_43a37bfe0ed9406cb8d8afa286cc0d5f, requestId=req_f34948c3, url=/config-center/api/ticket/page
2025-08-08 15:56:18 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_43a37bfe0ed9406cb8d8afa286cc0d5f
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=99ms, rowsAffected=2
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_43a37bfe0ed9406cb8d8afa286cc0d5f
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=2
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_43a37bfe0ed9406cb8d8afa286cc0d5f
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_43a37bfe0ed9406cb8d8afa286cc0d5f, duration=158ms, status=200
2025-08-08 15:56:18 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:27 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 15:56:27 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d4e55ae675444fecb0b85903fbf50550, requestId=req_2757ef57, url=/config-center/api/ticket/58
2025-08-08 15:56:28 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d4e55ae675444fecb0b85903fbf50550
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=13ms, rowsAffected=1
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d4e55ae675444fecb0b85903fbf50550
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d4e55ae675444fecb0b85903fbf50550, duration=22ms, status=200
2025-08-08 15:56:28 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4e7d6c0430854bc88e6044172d105bdc, requestId=req_461a3725, url=/config-center/api/config/10
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4e7d6c0430854bc88e6044172d105bdc
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4e7d6c0430854bc88e6044172d105bdc, duration=33ms, status=200
2025-08-08 15:56:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bf9bfdd9d29e40ffabb2ab4d0678f157, requestId=req_76ce8aad, url=/config-center/api/ticket/page
2025-08-08 15:56:53 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bf9bfdd9d29e40ffabb2ab4d0678f157
2025-08-08 15:56:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=51ms, rowsAffected=2
2025-08-08 15:56:54 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bf9bfdd9d29e40ffabb2ab4d0678f157
2025-08-08 15:56:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=31ms, rowsAffected=2
2025-08-08 15:56:54 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bf9bfdd9d29e40ffabb2ab4d0678f157
2025-08-08 15:56:54 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bf9bfdd9d29e40ffabb2ab4d0678f157, duration=215ms, status=200
2025-08-08 15:56:54 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_55090549c67645a0a648c96afbd84dd2, requestId=req_79ceffad, url=/config-center/api/ticket/59
2025-08-08 15:56:55 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_55090549c67645a0a648c96afbd84dd2
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=24ms, rowsAffected=1
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_55090549c67645a0a648c96afbd84dd2
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_55090549c67645a0a648c96afbd84dd2, duration=29ms, status=200
2025-08-08 15:56:55 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cb6dd067aad24556b0e8eebf3597ffd1, requestId=req_a13871a4, url=/config-center/api/config/10
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cb6dd067aad24556b0e8eebf3597ffd1
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cb6dd067aad24556b0e8eebf3597ffd1, duration=15ms, status=200
2025-08-08 15:56:55 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d64404fb1d4b4947832235cb401e69d9, requestId=req_0e7de007, url=/config-center/api/ticket/page
2025-08-08 15:56:56 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d64404fb1d4b4947832235cb401e69d9
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=2
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d64404fb1d4b4947832235cb401e69d9
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=30ms, rowsAffected=2
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d64404fb1d4b4947832235cb401e69d9
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d64404fb1d4b4947832235cb401e69d9, duration=49ms, status=200
2025-08-08 15:56:56 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e924c58847654253b9511c6b59769f61, requestId=req_e6527177, url=/config-center/api/ticket/59
2025-08-08 15:57:01 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e924c58847654253b9511c6b59769f61
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=20ms, rowsAffected=1
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e924c58847654253b9511c6b59769f61
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e924c58847654253b9511c6b59769f61, duration=27ms, status=200
2025-08-08 15:57:01 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_46e371d14473403f91844a753091582f, requestId=req_afe93115, url=/config-center/api/config/10
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_46e371d14473403f91844a753091582f
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_46e371d14473403f91844a753091582f, duration=28ms, status=200
2025-08-08 15:57:01 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:58:59 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:58:59 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9190298f2ce54da89b534ca330890464, requestId=req_762f9cfc, url=/config-center/api/ticket/page
2025-08-08 15:59:00 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9190298f2ce54da89b534ca330890464
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=248ms, rowsAffected=2
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9190298f2ce54da89b534ca330890464
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=7ms, rowsAffected=2
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9190298f2ce54da89b534ca330890464
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9190298f2ce54da89b534ca330890464, duration=334ms, status=200
2025-08-08 15:59:00 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3b684d4154874263ad0c3a497652b8b2, requestId=req_9cda9827, url=/config-center/api/ticket/59
2025-08-08 15:59:04 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3b684d4154874263ad0c3a497652b8b2
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=70ms, rowsAffected=1
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3b684d4154874263ad0c3a497652b8b2
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3b684d4154874263ad0c3a497652b8b2, duration=87ms, status=200
2025-08-08 15:59:04 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7431edd9cdba4f65961a085e823483e7, requestId=req_7be66f1d, url=/config-center/api/config/10
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7431edd9cdba4f65961a085e823483e7
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7431edd9cdba4f65961a085e823483e7, duration=67ms, status=200
2025-08-08 15:59:04 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:09:31 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:09:31 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:09:32 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:09:32 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:09:32 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:09:32 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:09:32 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:09:32 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_315c0826bacc4d87a9bed10879760291, requestId=req_0dc0c791, url=/config-center/api/ticket/59
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3225b43e273642f5a4ec03aca425d844, requestId=req_0cc2d0f7, url=/config-center/api/ticket/59
2025-08-08 16:09:33 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:09:33 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_315c0826bacc4d87a9bed10879760291
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3225b43e273642f5a4ec03aca425d844
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=49ms, rowsAffected=1
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=50ms, rowsAffected=1
2025-08-08 16:09:33 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:09:33 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:09:33 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_315c0826bacc4d87a9bed10879760291
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3225b43e273642f5a4ec03aca425d844
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3225b43e273642f5a4ec03aca425d844, duration=254ms, status=200
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_315c0826bacc4d87a9bed10879760291, duration=237ms, status=200
2025-08-08 16:09:33 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:09:33 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b50acf186b924d9dba120e6a6bf4929b, requestId=req_beeed7a4, url=/config-center/api/config/10
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b50acf186b924d9dba120e6a6bf4929b
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b50acf186b924d9dba120e6a6bf4929b, duration=139ms, status=200
2025-08-08 16:09:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:12:58 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:12:58 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e3f7d481bfb34d9994cb80d749e004a9, requestId=req_8db1b97f, url=/config-center/api/ticket/59
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_07b29d4f550e4899aac56e27250bb79d, requestId=req_59d9cb27, url=/config-center/api/ticket/59
2025-08-08 16:12:59 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:12:59 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e3f7d481bfb34d9994cb80d749e004a9
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=22ms, rowsAffected=1
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_07b29d4f550e4899aac56e27250bb79d
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=63ms, rowsAffected=1
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_07b29d4f550e4899aac56e27250bb79d
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_07b29d4f550e4899aac56e27250bb79d, duration=141ms, status=200
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e3f7d481bfb34d9994cb80d749e004a9
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e3f7d481bfb34d9994cb80d749e004a9, duration=141ms, status=200
2025-08-08 16:12:59 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:12:59 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:12:59 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:12:59 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7b98ebc0e9874262b6810e78cdbc7f5f, requestId=req_cdc938fb, url=/config-center/api/config/10
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7b98ebc0e9874262b6810e78cdbc7f5f
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7b98ebc0e9874262b6810e78cdbc7f5f, duration=109ms, status=200
2025-08-08 16:13:00 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:13:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:15:34 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:15:34 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6115f2771e0e4c9a9145483c1a258cc7, requestId=req_efcbd1a8, url=/config-center/api/ticket/59
2025-08-08 16:15:35 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6115f2771e0e4c9a9145483c1a258cc7
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=30ms, rowsAffected=1
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6115f2771e0e4c9a9145483c1a258cc7
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6115f2771e0e4c9a9145483c1a258cc7, duration=81ms, status=200
2025-08-08 16:15:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5066885badb442cbb3f4948bdf3fc906, requestId=req_7f200e35, url=/config-center/api/config/10
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5066885badb442cbb3f4948bdf3fc906
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5066885badb442cbb3f4948bdf3fc906, duration=51ms, status=200
2025-08-08 16:15:35 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:32 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:16:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:16:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:32 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:33 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:16:33 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:16:33 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:16:33 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:16:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:33 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aac951584ce5496f91eb31c80ccaf14e, requestId=req_c8875152, url=/config-center/api/config/history
2025-08-08 16:16:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4765e769dc244bb2b051ff164e6863b4, requestId=req_aa007e85, url=/config-center/api/config/10
2025-08-08 16:16:34 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4765e769dc244bb2b051ff164e6863b4
2025-08-08 16:16:34 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4765e769dc244bb2b051ff164e6863b4, duration=254ms, status=200
2025-08-08 16:16:34 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aac951584ce5496f91eb31c80ccaf14e
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=532ms, rowsAffected=2
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aac951584ce5496f91eb31c80ccaf14e
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=150ms, rowsAffected=2
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aac951584ce5496f91eb31c80ccaf14e
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aac951584ce5496f91eb31c80ccaf14e, duration=815ms, status=200
2025-08-08 16:16:34 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dbd780a1e9e2473daafaf8ccc4ac2931, requestId=req_159d29fc, url=/config-center/api/ticket/59
2025-08-08 16:16:49 [http-nio-9090-exec-6] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dbd780a1e9e2473daafaf8ccc4ac2931
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=58ms, rowsAffected=1
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dbd780a1e9e2473daafaf8ccc4ac2931
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dbd780a1e9e2473daafaf8ccc4ac2931, duration=77ms, status=200
2025-08-08 16:16:49 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2125c0a4c2364778a067bc08ef4917ad, requestId=req_f23b000e, url=/config-center/api/config/10
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2125c0a4c2364778a067bc08ef4917ad
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2125c0a4c2364778a067bc08ef4917ad, duration=18ms, status=200
2025-08-08 16:16:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:52 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:16:52 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:52 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e647aaefd49747b9a3942c600d60615f, requestId=req_193c1e92, url=/config-center/api/config/history
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bc5167a06f69444cb702228a1c962642, requestId=req_f8c4f66e, url=/config-center/api/config/10
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bc5167a06f69444cb702228a1c962642
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bc5167a06f69444cb702228a1c962642, duration=55ms, status=200
2025-08-08 16:16:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e647aaefd49747b9a3942c600d60615f
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=140ms, rowsAffected=2
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e647aaefd49747b9a3942c600d60615f
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=13ms, rowsAffected=2
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e647aaefd49747b9a3942c600d60615f
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e647aaefd49747b9a3942c600d60615f, duration=169ms, status=200
2025-08-08 16:16:53 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b0caeb9080734adb8d17605ed1437b78, requestId=req_18d570a1, url=/config-center/api/ticket/59
2025-08-08 16:16:55 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:16:56 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b0caeb9080734adb8d17605ed1437b78
2025-08-08 16:16:56 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=137ms, rowsAffected=1
2025-08-08 16:16:56 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b0caeb9080734adb8d17605ed1437b78
2025-08-08 16:16:56 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b0caeb9080734adb8d17605ed1437b78, duration=141ms, status=200
2025-08-08 16:16:56 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5f0f91d5b83d4a518670c8aab986a99e, requestId=req_99f39aff, url=/config-center/api/config/10
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5f0f91d5b83d4a518670c8aab986a99e
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5f0f91d5b83d4a518670c8aab986a99e, duration=13ms, status=200
2025-08-08 16:16:56 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bcfdcea868ad4f91b61bd888aa6fd5d9, requestId=req_81b42a5d, url=/config-center/api/ticket/page
2025-08-08 16:17:38 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bcfdcea868ad4f91b61bd888aa6fd5d9
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=32ms, rowsAffected=2
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bcfdcea868ad4f91b61bd888aa6fd5d9
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=21ms, rowsAffected=2
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bcfdcea868ad4f91b61bd888aa6fd5d9
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bcfdcea868ad4f91b61bd888aa6fd5d9, duration=143ms, status=200
2025-08-08 16:17:38 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:38 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:20:38 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:39 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:20:39 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:20:39 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:39 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4de66a433c234a52bf8e2fbda59090a7, requestId=req_618d35ba, url=/config-center/api/ticket/59
2025-08-08 16:20:39 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:20:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4de66a433c234a52bf8e2fbda59090a7
2025-08-08 16:20:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=163ms, rowsAffected=1
2025-08-08 16:20:40 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4de66a433c234a52bf8e2fbda59090a7
2025-08-08 16:20:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4de66a433c234a52bf8e2fbda59090a7, duration=263ms, status=200
2025-08-08 16:20:40 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:40 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6c4e897c5e734a5e85f0778b7a721624, requestId=req_2555702d, url=/config-center/api/config/10
2025-08-08 16:20:41 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6c4e897c5e734a5e85f0778b7a721624
2025-08-08 16:20:41 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=514ms, rowsAffected=1
2025-08-08 16:20:41 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6c4e897c5e734a5e85f0778b7a721624
2025-08-08 16:20:41 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6c4e897c5e734a5e85f0778b7a721624, duration=624ms, status=200
2025-08-08 16:20:41 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_06591073ba5248d18ce7d8b310e6647c, requestId=req_bd8924b0, url=/config-center/api/config/10
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_06591073ba5248d18ce7d8b310e6647c
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_06591073ba5248d18ce7d8b310e6647c, duration=108ms, status=200
2025-08-08 16:20:42 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:42 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_52310d881d3e40d48a1687a781babe50, requestId=req_8f886185, url=/config-center/api/config/history
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_52310d881d3e40d48a1687a781babe50
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=190ms, rowsAffected=2
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_52310d881d3e40d48a1687a781babe50
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=68ms, rowsAffected=2
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_52310d881d3e40d48a1687a781babe50
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_52310d881d3e40d48a1687a781babe50, duration=276ms, status=200
2025-08-08 16:20:43 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_51b549f50b9346fd8db2c20fc4a5cbb5, requestId=req_1e397afa, url=/config-center/api/ticket/59
2025-08-08 16:20:44 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_51b549f50b9346fd8db2c20fc4a5cbb5
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=28ms, rowsAffected=1
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_51b549f50b9346fd8db2c20fc4a5cbb5
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_51b549f50b9346fd8db2c20fc4a5cbb5, duration=39ms, status=200
2025-08-08 16:20:44 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f9f991c2542d45769f956ce546e4a120, requestId=req_490edf86, url=/config-center/api/config/10
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f9f991c2542d45769f956ce546e4a120
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f9f991c2542d45769f956ce546e4a120, duration=17ms, status=200
2025-08-08 16:20:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_db2dca4449c54d4898f1800eee9c2ff6, requestId=req_9fbe9065, url=/config-center/api/config/history
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_acc7f7a7c802452b93184fcd9218fcad, requestId=req_de6eb539, url=/config-center/api/config/10
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_acc7f7a7c802452b93184fcd9218fcad
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_acc7f7a7c802452b93184fcd9218fcad, duration=31ms, status=200
2025-08-08 16:20:46 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_db2dca4449c54d4898f1800eee9c2ff6
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=65ms, rowsAffected=2
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_db2dca4449c54d4898f1800eee9c2ff6
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=43ms, rowsAffected=2
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_db2dca4449c54d4898f1800eee9c2ff6
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_db2dca4449c54d4898f1800eee9c2ff6, duration=123ms, status=200
2025-08-08 16:20:46 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_559988c611c444ceae1b487f605bbf28, requestId=req_4f08119f, url=/config-center/api/ticket/58
2025-08-08 16:20:48 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_559988c611c444ceae1b487f605bbf28
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=32ms, rowsAffected=1
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_559988c611c444ceae1b487f605bbf28
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_559988c611c444ceae1b487f605bbf28, duration=46ms, status=200
2025-08-08 16:20:48 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1b5a152eaca74ba8ba7b36fe1f2e7a86, requestId=req_d310ae97, url=/config-center/api/config/10
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1b5a152eaca74ba8ba7b36fe1f2e7a86
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1b5a152eaca74ba8ba7b36fe1f2e7a86, duration=22ms, status=200
2025-08-08 16:20:48 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5f7e771652a449b088bc431a7933d7d4, requestId=req_246043e9, url=/config-center/api/config/history
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4307ccf7828546c2bad74ac35b3225e9, requestId=req_28b3411d, url=/config-center/api/config/10
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4307ccf7828546c2bad74ac35b3225e9
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4307ccf7828546c2bad74ac35b3225e9, duration=17ms, status=200
2025-08-08 16:20:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5f7e771652a449b088bc431a7933d7d4
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=92ms, rowsAffected=2
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5f7e771652a449b088bc431a7933d7d4
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=40ms, rowsAffected=2
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5f7e771652a449b088bc431a7933d7d4
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5f7e771652a449b088bc431a7933d7d4, duration=148ms, status=200
2025-08-08 16:20:49 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:50 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 16:20:50 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e7ad6b306d7a4d748ee02129cad9b020, requestId=req_03ec5ca8, url=/config-center/api/ticket/59
2025-08-08 16:20:51 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e7ad6b306d7a4d748ee02129cad9b020
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=17ms, rowsAffected=1
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e7ad6b306d7a4d748ee02129cad9b020
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e7ad6b306d7a4d748ee02129cad9b020, duration=46ms, status=200
2025-08-08 16:20:51 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1b91305a25d246779d14fd2576754c3e, requestId=req_6a81e9a3, url=/config-center/api/config/10
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1b91305a25d246779d14fd2576754c3e
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1b91305a25d246779d14fd2576754c3e, duration=40ms, status=200
2025-08-08 16:20:51 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7f6ac521abcd47fe8088d5c48a17edd3, requestId=req_4354bae9, url=/config-center/api/ticket/page
2025-08-08 16:20:57 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7f6ac521abcd47fe8088d5c48a17edd3
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=12ms, rowsAffected=2
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7f6ac521abcd47fe8088d5c48a17edd3
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=8ms, rowsAffected=2
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7f6ac521abcd47fe8088d5c48a17edd3
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7f6ac521abcd47fe8088d5c48a17edd3, duration=66ms, status=200
2025-08-08 16:20:57 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d83befb97abb46fd97de012aeaee6b8f, requestId=req_2def3c0f, url=/config-center/api/ticket/page
2025-08-08 16:22:41 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d83befb97abb46fd97de012aeaee6b8f
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=151ms, rowsAffected=2
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d83befb97abb46fd97de012aeaee6b8f
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=27ms, rowsAffected=2
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d83befb97abb46fd97de012aeaee6b8f
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d83befb97abb46fd97de012aeaee6b8f, duration=327ms, status=200
2025-08-08 16:22:41 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:24:37 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:24:37 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:24:38 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:24:38 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:24:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:24:38 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e2b9c9862a1d479e8d55e65af118c6f3, requestId=req_ef8667e6, url=/config-center/api/ticket/page
2025-08-08 16:24:38 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e2b9c9862a1d479e8d55e65af118c6f3
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=169ms, rowsAffected=2
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e2b9c9862a1d479e8d55e65af118c6f3
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=13ms, rowsAffected=2
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e2b9c9862a1d479e8d55e65af118c6f3
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e2b9c9862a1d479e8d55e65af118c6f3, duration=264ms, status=200
2025-08-08 16:24:39 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_78d6249fedc54bab87bf0ac31912ceab, requestId=req_c4275f08, url=/config-center/api/ticket/page
2025-08-08 16:26:53 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_78d6249fedc54bab87bf0ac31912ceab
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=104ms, rowsAffected=2
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_78d6249fedc54bab87bf0ac31912ceab
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=8ms, rowsAffected=2
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_78d6249fedc54bab87bf0ac31912ceab
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_78d6249fedc54bab87bf0ac31912ceab, duration=154ms, status=200
2025-08-08 16:26:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b3da0e66d3c8457fb47b9b0d127eee8e, requestId=req_98c07184, url=/config-center/api/enum/get_all_enum
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b3da0e66d3c8457fb47b9b0d127eee8e
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b3da0e66d3c8457fb47b9b0d127eee8e, duration=9ms, status=200
2025-08-08 16:27:36 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7eaac43ba00b42e1ad1d228e12ec73d1, requestId=req_fe8c4f23, url=/config-center/api/config/page
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7eaac43ba00b42e1ad1d228e12ec73d1
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=26ms, rowsAffected=4
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7eaac43ba00b42e1ad1d228e12ec73d1
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=9ms, rowsAffected=4
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7eaac43ba00b42e1ad1d228e12ec73d1
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7eaac43ba00b42e1ad1d228e12ec73d1, duration=57ms, status=200
2025-08-08 16:27:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_70036aa8a9a745429e25124294cd0c63, requestId=req_27cfb796, url=/config-center/api/config/history
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_84880f11be71442da3944ca74f4fb459, requestId=req_0f2f3a57, url=/config-center/api/config/14
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_84880f11be71442da3944ca74f4fb459
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_84880f11be71442da3944ca74f4fb459, duration=76ms, status=200
2025-08-08 16:27:39 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_70036aa8a9a745429e25124294cd0c63
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=205ms, rowsAffected=0
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_70036aa8a9a745429e25124294cd0c63
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=62ms, rowsAffected=0
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_70036aa8a9a745429e25124294cd0c63
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_70036aa8a9a745429e25124294cd0c63, duration=280ms, status=200
2025-08-08 16:27:39 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2eea644c9a394e1eb0552c4677493493, requestId=req_fc14c77a, url=/config-center/api/enum/get_all_enum
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_373fc9ff8b944a13adaf30add4e60aa4, requestId=req_fc31eb9b, url=/config-center/api/config/page
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2eea644c9a394e1eb0552c4677493493
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2eea644c9a394e1eb0552c4677493493, duration=9ms, status=200
2025-08-08 16:27:41 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_373fc9ff8b944a13adaf30add4e60aa4
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=376ms, rowsAffected=4
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_373fc9ff8b944a13adaf30add4e60aa4
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=39ms, rowsAffected=4
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_373fc9ff8b944a13adaf30add4e60aa4
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_373fc9ff8b944a13adaf30add4e60aa4, duration=429ms, status=200
2025-08-08 16:27:41 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_27a3ff40234c40f3ba2b107ab47cd3ff, requestId=req_92d7d8fb, url=/config-center/api/config/12
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9b4ff7336f9d44b5a3ac3990bb42f13b, requestId=req_ee6964d2, url=/config-center/api/config/history
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_27a3ff40234c40f3ba2b107ab47cd3ff
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_27a3ff40234c40f3ba2b107ab47cd3ff, duration=58ms, status=200
2025-08-08 16:27:44 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b4ff7336f9d44b5a3ac3990bb42f13b
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=142ms, rowsAffected=0
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9b4ff7336f9d44b5a3ac3990bb42f13b
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=0
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9b4ff7336f9d44b5a3ac3990bb42f13b
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9b4ff7336f9d44b5a3ac3990bb42f13b, duration=156ms, status=200
2025-08-08 16:27:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ccbe606d12f8441dbe7bbd504e8850ae, requestId=req_a60708e9, url=/config-center/api/enum/get_all_enum
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1d1a2b1163b04ded8fb778a4f4a6337a, requestId=req_37f8c22f, url=/config-center/api/config/page
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ccbe606d12f8441dbe7bbd504e8850ae
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ccbe606d12f8441dbe7bbd504e8850ae, duration=5ms, status=200
2025-08-08 16:27:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1d1a2b1163b04ded8fb778a4f4a6337a
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=18ms, rowsAffected=4
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1d1a2b1163b04ded8fb778a4f4a6337a
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=4
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1d1a2b1163b04ded8fb778a4f4a6337a
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1d1a2b1163b04ded8fb778a4f4a6337a, duration=49ms, status=200
2025-08-08 16:27:45 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3886ec6869304eae8903d436c5b9fa88, requestId=req_701f4800, url=/config-center/api/config/10
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a89d33c362104b82b34f2bf385b3a829, requestId=req_88d3c2d7, url=/config-center/api/config/history
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3886ec6869304eae8903d436c5b9fa88
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3886ec6869304eae8903d436c5b9fa88, duration=18ms, status=200
2025-08-08 16:27:46 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a89d33c362104b82b34f2bf385b3a829
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=51ms, rowsAffected=2
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a89d33c362104b82b34f2bf385b3a829
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=27ms, rowsAffected=2
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a89d33c362104b82b34f2bf385b3a829
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a89d33c362104b82b34f2bf385b3a829, duration=92ms, status=200
2025-08-08 16:27:46 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d6e5bccfb3b84aa68785e5205afa7c48, requestId=req_986399d5, url=/config-center/api/ticket/58
2025-08-08 16:27:56 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d6e5bccfb3b84aa68785e5205afa7c48
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=11ms, rowsAffected=1
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d6e5bccfb3b84aa68785e5205afa7c48
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d6e5bccfb3b84aa68785e5205afa7c48, duration=21ms, status=200
2025-08-08 16:27:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_21ea7f2555ba4dc5a78d79978f9473a3, requestId=req_91271dad, url=/config-center/api/config/10
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_21ea7f2555ba4dc5a78d79978f9473a3
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_21ea7f2555ba4dc5a78d79978f9473a3, duration=18ms, status=200
2025-08-08 16:27:56 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:28:03 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_13dac65976ba49bfbf7c6eedd89f098f, requestId=req_81b967c8, url=/config-center/api/config/page
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_87273ea2dbbf444db24f50a74adce6b7, requestId=req_6c0b2920, url=/config-center/api/enum/get_all_enum
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_87273ea2dbbf444db24f50a74adce6b7
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_87273ea2dbbf444db24f50a74adce6b7, duration=4ms, status=200
2025-08-08 16:28:03 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_13dac65976ba49bfbf7c6eedd89f098f
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=36ms, rowsAffected=4
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_13dac65976ba49bfbf7c6eedd89f098f
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=12ms, rowsAffected=4
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_13dac65976ba49bfbf7c6eedd89f098f
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_13dac65976ba49bfbf7c6eedd89f098f, duration=57ms, status=200
2025-08-08 16:28:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:31:50 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:31:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:31:50 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:31:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f22ef93b7fa1484b835c6d858fc97b9c, requestId=req_cb36b426, url=/config-center/api/enum/get_all_enum
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f22ef93b7fa1484b835c6d858fc97b9c
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f22ef93b7fa1484b835c6d858fc97b9c, duration=63ms, status=200
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:31:51 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aa5daf0aef2e44648609ee261c46eab2, requestId=req_4f657a90, url=/config-center/api/config/page
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aa5daf0aef2e44648609ee261c46eab2
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=253ms, rowsAffected=4
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aa5daf0aef2e44648609ee261c46eab2
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=18ms, rowsAffected=4
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aa5daf0aef2e44648609ee261c46eab2
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aa5daf0aef2e44648609ee261c46eab2, duration=299ms, status=200
2025-08-08 16:31:51 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:31:57 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:31:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:31:57 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:31:57 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_388ec2e603c34dbf90275ea9f186f162, requestId=req_938d3cb6, url=/config-center/api/config/14
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a4a6f3845ad14d7790969d3c3dfd0bbd, requestId=req_6c8a4f57, url=/config-center/api/config/history
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_388ec2e603c34dbf90275ea9f186f162
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_388ec2e603c34dbf90275ea9f186f162, duration=384ms, status=200
2025-08-08 16:31:58 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a4a6f3845ad14d7790969d3c3dfd0bbd
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=501ms, rowsAffected=0
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a4a6f3845ad14d7790969d3c3dfd0bbd
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=186ms, rowsAffected=0
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a4a6f3845ad14d7790969d3c3dfd0bbd
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a4a6f3845ad14d7790969d3c3dfd0bbd, duration=722ms, status=200
2025-08-08 16:31:58 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:32:45 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:32:45 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:32:45 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:32:45 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:32:47 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:32:47 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:32:47 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:32:47 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:32:47 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:32:47 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:32:47 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dc1c6d2ea9834c069a2982ed7b4d8247, requestId=req_4282944d, url=/config-center/api/config/14
2025-08-08 16:32:47 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3f33b8d6ee834343bf9660006f8ed111, requestId=req_fe3e022e, url=/config-center/api/config/history
2025-08-08 16:32:48 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dc1c6d2ea9834c069a2982ed7b4d8247
2025-08-08 16:32:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dc1c6d2ea9834c069a2982ed7b4d8247, duration=545ms, status=200
2025-08-08 16:32:48 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:32:48 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3f33b8d6ee834343bf9660006f8ed111
2025-08-08 16:32:48 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=1217ms, rowsAffected=0
2025-08-08 16:32:49 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3f33b8d6ee834343bf9660006f8ed111
2025-08-08 16:32:49 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=678ms, rowsAffected=0
2025-08-08 16:32:49 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3f33b8d6ee834343bf9660006f8ed111
2025-08-08 16:32:49 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3f33b8d6ee834343bf9660006f8ed111, duration=1941ms, status=200
2025-08-08 16:32:49 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1589fcb16807490488c2aa3f91cc1d4a, requestId=req_227affc2, url=/config-center/api/enum/get_all_enum
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1589fcb16807490488c2aa3f91cc1d4a
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1589fcb16807490488c2aa3f91cc1d4a, duration=6ms, status=200
2025-08-08 16:32:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e636667b292a42f4aab088f44b15027a, requestId=req_0d28667f, url=/config-center/api/config/page
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e636667b292a42f4aab088f44b15027a
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=243ms, rowsAffected=4
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e636667b292a42f4aab088f44b15027a
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=55ms, rowsAffected=4
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e636667b292a42f4aab088f44b15027a
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e636667b292a42f4aab088f44b15027a, duration=325ms, status=200
2025-08-08 16:32:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c36be5b9539c423db4700c65ad7ab527, requestId=req_228691e1, url=/config-center/api/ticket/page
2025-08-08 16:34:00 [http-nio-9090-exec-4] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c36be5b9539c423db4700c65ad7ab527
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=80ms, rowsAffected=2
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c36be5b9539c423db4700c65ad7ab527
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=65ms, rowsAffected=2
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c36be5b9539c423db4700c65ad7ab527
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c36be5b9539c423db4700c65ad7ab527, duration=235ms, status=200
2025-08-08 16:34:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:37:11 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:37:12 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0116
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0116 closed
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:37:12 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:37:41 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 25172 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:37:41 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:37:41 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:37:43 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:37:43 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:37:43 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:37:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-08-08 16:37:47 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:37:47 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:37:47 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:37:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:37:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5714 ms
2025-08-08 16:37:48 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:37:51 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:37:52 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:37:53 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:37:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=51MB
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=106MB
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@72d16d6
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:37:53 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:37:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 16:37:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:37:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:37:53 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:37:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:37:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:37:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:37:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:53875, server: localhost/127.0.0.1:2181
2025-08-08 16:37:54 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0117, negotiated timeout = 40000
2025-08-08 16:37:54 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:37:54 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:37:54 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:37:54 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:37:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:37:54 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118c1faa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@da5b46f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c167296, org.springframework.security.web.header.HeaderWriterFilter@237bdbcb, org.springframework.web.filter.CorsFilter@99f75e4, org.springframework.security.web.authentication.logout.LogoutFilter@6dde913e, com.example.configcenter.security.JwtAuthenticationFilter@93fb44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a464be7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6eb332d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b6ff016, org.springframework.security.web.session.SessionManagementFilter@7359f3ac, org.springframework.security.web.access.ExceptionTranslationFilter@1443539, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f30d0eb]
2025-08-08 16:37:54 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:37:56 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:37:57 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:37:57 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:37:57 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:37:57 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754642277150
2025-08-08 16:37:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:37:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:37:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:37:57 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:37:57 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:37:57 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 16.902 seconds (JVM running for 24.495)
2025-08-08 16:38:47 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:38:47 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:38:47 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 72 ms
2025-08-08 16:38:47 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:38:47 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:38:48 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 16:38:48 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 16:38:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:38:48 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_83eb67626c194219a8a9f25d2b145316, requestId=req_5d53461d, url=/config-center/api/ticket/page
2025-08-08 16:38:48 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 16:38:49 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:38:49 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:38:49 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:38:49 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:38:49 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754642329824
2025-08-08 16:38:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:38:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:38:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:38:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:38:49 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_83eb67626c194219a8a9f25d2b145316
2025-08-08 16:38:49 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=119ms, rowsAffected=2
2025-08-08 16:38:49 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_83eb67626c194219a8a9f25d2b145316
2025-08-08 16:38:49 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=54ms, rowsAffected=2
2025-08-08 16:38:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:38:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:38:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:38:50 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_83eb67626c194219a8a9f25d2b145316
2025-08-08 16:38:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_83eb67626c194219a8a9f25d2b145316, duration=1392ms, status=200
2025-08-08 16:38:50 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:38:53 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:38:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:38:53 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:38:53 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6a5559bff9f046729ab87ad7036c996b, requestId=req_f2cae179, url=/config-center/api/enum/get_all_enum
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6a5559bff9f046729ab87ad7036c996b
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6a5559bff9f046729ab87ad7036c996b, duration=21ms, status=200
2025-08-08 16:38:54 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:38:54 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:38:54 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:38:54 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:38:54 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8782e74016c74d4995afff03a00276a3, requestId=req_1bc23a46, url=/config-center/api/config/page
2025-08-08 16:39:18 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Client session timed out, have not heard from server in 30099ms for session id 0x10002cd2abd0117
2025-08-08 16:39:18 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0117 for server localhost/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 30099ms for session id 0x10002cd2abd0117
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1251)
2025-08-08 16:39:18 [http-nio-9090-exec-3] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - null
2025-08-08 16:39:18 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: SUSPENDED
2025-08-08 16:39:18 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: SUSPENDED
2025-08-08 16:39:18 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8782e74016c74d4995afff03a00276a3
2025-08-08 16:39:18 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=153ms, rowsAffected=4
2025-08-08 16:39:18 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8782e74016c74d4995afff03a00276a3
2025-08-08 16:39:18 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8782e74016c74d4995afff03a00276a3, duration=23965ms, status=200
2025-08-08 16:39:18 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:39:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:39:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:39:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:53952, server: localhost/127.0.0.1:2181
2025-08-08 16:39:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0117, negotiated timeout = 40000
2025-08-08 16:39:20 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: RECONNECTED
2025-08-08 16:39:20 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: RECONNECTED
2025-08-08 16:39:20 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7ea13b6660214af2abc2c25260e4f86e, requestId=req_2cdd895e, url=/config-center/api/config/page
2025-08-08 16:39:22 [http-nio-9090-exec-4] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - null
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7ea13b6660214af2abc2c25260e4f86e
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=8ms, rowsAffected=4
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7ea13b6660214af2abc2c25260e4f86e
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7ea13b6660214af2abc2c25260e4f86e, duration=31ms, status=200
2025-08-08 16:39:22 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:40:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:40:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:40:33 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:40:33 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:40:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:40:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b58aa98ffe3b4ba19475cdda847b9ab2, requestId=req_51f61817, url=/config-center/api/config/page
2025-08-08 16:41:54 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Client session timed out, have not heard from server in 86936ms for session id 0x10002cd2abd0117
2025-08-08 16:41:54 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0117 for server localhost/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 86936ms for session id 0x10002cd2abd0117
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1251)
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:41:54 [http-nio-9090-exec-5] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - null
2025-08-08 16:41:54 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: SUSPENDED
2025-08-08 16:41:54 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: SUSPENDED
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:41:54 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_02ad98cac0224e2ebc8a3daa8bc94890, requestId=req_71affa9e, url=/config-center/api/config/page
2025-08-08 16:41:54 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b58aa98ffe3b4ba19475cdda847b9ab2
2025-08-08 16:41:54 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=139ms, rowsAffected=4
2025-08-08 16:41:59 [http-nio-9090-exec-6] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - null
2025-08-08 16:41:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b58aa98ffe3b4ba19475cdda847b9ab2
2025-08-08 16:41:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b58aa98ffe3b4ba19475cdda847b9ab2, duration=86730ms, status=200
2025-08-08 16:41:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:41:59 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_02ad98cac0224e2ebc8a3daa8bc94890
2025-08-08 16:41:59 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=44ms, rowsAffected=4
2025-08-08 16:41:59 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_02ad98cac0224e2ebc8a3daa8bc94890
2025-08-08 16:41:59 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_02ad98cac0224e2ebc8a3daa8bc94890, duration=5696ms, status=200
2025-08-08 16:41:59 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:42:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 16:42:00 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:42:00 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0117 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 16:42:02 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 16:42:02 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:42:02 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0117 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:42:02 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_763c59c445f54991baf197e01f3da554, requestId=req_7ba9a08d, url=/config-center/api/config/page
2025-08-08 16:42:32 [http-nio-9090-exec-7] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - null
2025-08-08 16:42:32 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_763c59c445f54991baf197e01f3da554
2025-08-08 16:42:32 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=15ms, rowsAffected=4
2025-08-08 16:42:32 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_763c59c445f54991baf197e01f3da554
2025-08-08 16:42:32 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_763c59c445f54991baf197e01f3da554, duration=29730ms, status=200
2025-08-08 16:42:32 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:54140, server: localhost/127.0.0.1:2181
2025-08-08 16:42:32 [main-EventThread] WARN  org.apache.curator.ConnectionState - Session expired event received
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Unable to reconnect to ZooKeeper service, session 0x10002cd2abd0117 has expired
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0117 for server localhost/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x10002cd2abd0117 has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1432)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:86)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 16:42:32 [main-EventThread] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@72d16d6
2025-08-08 16:42:32 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:42:32 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:42:32 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: LOST
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:42:32 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:54141, server: localhost/127.0.0.1:2181
2025-08-08 16:42:32 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0117
2025-08-08 16:42:32 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: LOST
2025-08-08 16:42:33 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0118, negotiated timeout = 40000
2025-08-08 16:42:33 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: RECONNECTED
2025-08-08 16:42:33 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: RECONNECTED
2025-08-08 16:42:33 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5ed95b426d2640088c35fcaef2cbd3d6, requestId=req_280eefa2, url=/config-center/api/config/page
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5ed95b426d2640088c35fcaef2cbd3d6
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=104ms, rowsAffected=4
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5ed95b426d2640088c35fcaef2cbd3d6
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=41ms, rowsAffected=4
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5ed95b426d2640088c35fcaef2cbd3d6
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5ed95b426d2640088c35fcaef2cbd3d6, duration=351ms, status=200
2025-08-08 16:42:36 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:17 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:43:17 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:43:17 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:17 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_edb4425416de474ab11e4d306eb4e8cf, requestId=req_e3fe78df, url=/config-center/api/enum/get_all_enum
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_edb4425416de474ab11e4d306eb4e8cf
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_edb4425416de474ab11e4d306eb4e8cf, duration=14ms, status=200
2025-08-08 16:43:18 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a78202e685c44051a8c78dbc8c060114, requestId=req_b9bc50e6, url=/config-center/api/config/page
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a78202e685c44051a8c78dbc8c060114
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=249ms, rowsAffected=4
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a78202e685c44051a8c78dbc8c060114
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=6ms, rowsAffected=4
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a78202e685c44051a8c78dbc8c060114
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a78202e685c44051a8c78dbc8c060114, duration=266ms, status=200
2025-08-08 16:43:18 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2226aecb95ad41aa8c19b2653a0b1eff, requestId=req_97738310, url=/config-center/api/config/14
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:23 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fcc43a9447df4dfd980257c9a43bdab4, requestId=req_01ee2a95, url=/config-center/api/config/history
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fcc43a9447df4dfd980257c9a43bdab4
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=307ms, rowsAffected=0
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fcc43a9447df4dfd980257c9a43bdab4
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=83ms, rowsAffected=0
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fcc43a9447df4dfd980257c9a43bdab4
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fcc43a9447df4dfd980257c9a43bdab4, duration=427ms, status=200
2025-08-08 16:43:24 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:26 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/14
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:43:26 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2226aecb95ad41aa8c19b2653a0b1eff
2025-08-08 16:43:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2226aecb95ad41aa8c19b2653a0b1eff, duration=2372ms, status=500
2025-08-08 16:43:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:43:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:43:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:43:54 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:43:54 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:54 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:54 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:55 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:43:55 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:43:55 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:55 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_235d00c1670e43268276c11cce356cc2, requestId=req_c66cbedf, url=/config-center/api/config/history
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f5e01e0f92f648b08898f633d82d11b0, requestId=req_88ead959, url=/config-center/api/config/14
2025-08-08 16:43:55 [http-nio-9090-exec-3] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/14
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f5e01e0f92f648b08898f633d82d11b0
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f5e01e0f92f648b08898f633d82d11b0, duration=346ms, status=500
2025-08-08 16:43:55 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_235d00c1670e43268276c11cce356cc2
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=989ms, rowsAffected=0
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_235d00c1670e43268276c11cce356cc2
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=0
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_235d00c1670e43268276c11cce356cc2
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_235d00c1670e43268276c11cce356cc2, duration=1023ms, status=200
2025-08-08 16:43:56 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:57 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:57 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:57 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:43:57 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b0f5290979d24b7a97a6f27d22724576, requestId=req_d1f596df, url=/config-center/api/config/history
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f010a757b9994de3b164ec7ea6ca55ba, requestId=req_4a298d80, url=/config-center/api/config/14
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b0f5290979d24b7a97a6f27d22724576
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=42ms, rowsAffected=0
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b0f5290979d24b7a97a6f27d22724576
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=37ms, rowsAffected=0
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b0f5290979d24b7a97a6f27d22724576
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b0f5290979d24b7a97a6f27d22724576, duration=85ms, status=200
2025-08-08 16:43:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:43:58 [http-nio-9090-exec-6] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/14
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f010a757b9994de3b164ec7ea6ca55ba
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f010a757b9994de3b164ec7ea6ca55ba, duration=128ms, status=500
2025-08-08 16:43:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:45:02 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:45:02 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 16:45:02 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:45:02 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3935102c6d2f4a77890ec1df98fe8cf3, requestId=req_59664969, url=/config-center/api/config/history
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_679f051e42ce4588a3b59e25af690cf7, requestId=req_69daa9a0, url=/config-center/api/config/14
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3935102c6d2f4a77890ec1df98fe8cf3
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=86ms, rowsAffected=0
2025-08-08 16:45:03 [http-nio-9090-exec-7] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/14
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3935102c6d2f4a77890ec1df98fe8cf3
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=11ms, rowsAffected=0
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_679f051e42ce4588a3b59e25af690cf7
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_679f051e42ce4588a3b59e25af690cf7, duration=145ms, status=500
2025-08-08 16:45:03 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3935102c6d2f4a77890ec1df98fe8cf3
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3935102c6d2f4a77890ec1df98fe8cf3, duration=150ms, status=200
2025-08-08 16:45:03 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:47:44 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:47:44 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 16:47:44 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:47:44 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:47:44 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_df1ff6bce0e04db8bac8e4abc408f719, requestId=req_22daf15a, url=/config-center/api/enum/get_all_enum
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8582400d61284d428f45ea70a977ced0, requestId=req_dc8cf3d5, url=/config-center/api/config/page
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_df1ff6bce0e04db8bac8e4abc408f719
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_df1ff6bce0e04db8bac8e4abc408f719, duration=26ms, status=200
2025-08-08 16:47:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8582400d61284d428f45ea70a977ced0
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=116ms, rowsAffected=4
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8582400d61284d428f45ea70a977ced0
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=18ms, rowsAffected=4
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8582400d61284d428f45ea70a977ced0
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8582400d61284d428f45ea70a977ced0, duration=167ms, status=200
2025-08-08 16:47:45 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:47:52 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:47:52 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6897f40c77cd45e2a31929b648abb215, requestId=req_786dd672, url=/config-center/api/config/page
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6897f40c77cd45e2a31929b648abb215
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=72ms, rowsAffected=4
2025-08-08 16:47:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6897f40c77cd45e2a31929b648abb215
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=47ms, rowsAffected=4
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6897f40c77cd45e2a31929b648abb215
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6897f40c77cd45e2a31929b648abb215, duration=190ms, status=200
2025-08-08 16:47:53 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_753f7dca251a476cbfd59b8d59e2cfb6, requestId=req_020bc1f8, url=/config-center/api/config/history
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_02d7b766a7f345a79f34457daae2bb03, requestId=req_2e57b5d7, url=/config-center/api/config/12
2025-08-08 16:48:10 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_02d7b766a7f345a79f34457daae2bb03
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_02d7b766a7f345a79f34457daae2bb03, duration=88ms, status=500
2025-08-08 16:48:10 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_753f7dca251a476cbfd59b8d59e2cfb6
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=159ms, rowsAffected=0
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_753f7dca251a476cbfd59b8d59e2cfb6
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=0
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_753f7dca251a476cbfd59b8d59e2cfb6
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_753f7dca251a476cbfd59b8d59e2cfb6, duration=168ms, status=200
2025-08-08 16:48:10 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e52234e178b34cc5a3a9a1239d7496b8, requestId=req_806d8333, url=/config-center/api/config/history
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e52234e178b34cc5a3a9a1239d7496b8
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=29ms, rowsAffected=0
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e52234e178b34cc5a3a9a1239d7496b8
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f40ba37a3b554b78b67e14aea4ff5568, requestId=req_14026aef, url=/config-center/api/config/12
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e52234e178b34cc5a3a9a1239d7496b8
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e52234e178b34cc5a3a9a1239d7496b8, duration=52ms, status=200
2025-08-08 16:48:24 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:24 [http-nio-9090-exec-4] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f40ba37a3b554b78b67e14aea4ff5568
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f40ba37a3b554b78b67e14aea4ff5568, duration=50ms, status=500
2025-08-08 16:48:24 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8d6ec66d13b54e19a2157ba7fb98b801, requestId=req_2e9130f7, url=/config-center/api/config/history
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2f820e7be21d4e15b75eb94dce977b58, requestId=req_6b41aeab, url=/config-center/api/config/12
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8d6ec66d13b54e19a2157ba7fb98b801
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=52ms, rowsAffected=0
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8d6ec66d13b54e19a2157ba7fb98b801
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=16ms, rowsAffected=0
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8d6ec66d13b54e19a2157ba7fb98b801
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8d6ec66d13b54e19a2157ba7fb98b801, duration=74ms, status=200
2025-08-08 16:48:28 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:28 [http-nio-9090-exec-7] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2f820e7be21d4e15b75eb94dce977b58
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2f820e7be21d4e15b75eb94dce977b58, duration=68ms, status=500
2025-08-08 16:48:28 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:40 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:40 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:40 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:48:40 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_41cbb45a28d94b85a3f278a5d1bf18d1, requestId=req_bdff32f2, url=/config-center/api/config/history
2025-08-08 16:48:41 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:48:41 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:48:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:48:41 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_55459025650b4840b8425025c099621e, requestId=req_7536ce28, url=/config-center/api/config/12
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_41cbb45a28d94b85a3f278a5d1bf18d1
2025-08-08 16:48:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=18ms, rowsAffected=0
2025-08-08 16:48:50 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_41cbb45a28d94b85a3f278a5d1bf18d1
2025-08-08 16:48:50 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=28ms, rowsAffected=0
2025-08-08 16:48:50 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_41cbb45a28d94b85a3f278a5d1bf18d1
2025-08-08 16:48:50 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_41cbb45a28d94b85a3f278a5d1bf18d1, duration=9011ms, status=200
2025-08-08 16:48:50 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:48:50 [http-nio-9090-exec-8] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:48:50 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_55459025650b4840b8425025c099621e
2025-08-08 16:48:50 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_55459025650b4840b8425025c099621e, duration=9033ms, status=500
2025-08-08 16:48:50 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5e99ffde0dfe4a609236d7321aca2edb, requestId=req_c82b6dea, url=/config-center/api/config/history
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5e99ffde0dfe4a609236d7321aca2edb
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=21ms, rowsAffected=0
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:49:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2103e4065a244244a0ec04a668e8fd14, requestId=req_40f5eb7d, url=/config-center/api/config/12
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5e99ffde0dfe4a609236d7321aca2edb
2025-08-08 16:49:05 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=5ms, rowsAffected=0
2025-08-08 16:49:15 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5e99ffde0dfe4a609236d7321aca2edb
2025-08-08 16:49:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5e99ffde0dfe4a609236d7321aca2edb, duration=10537ms, status=200
2025-08-08 16:49:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:49:23 [http-nio-9090-exec-9] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$6689c4cf.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$11931430.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:49:23 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2103e4065a244244a0ec04a668e8fd14
2025-08-08 16:49:23 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2103e4065a244244a0ec04a668e8fd14, duration=18194ms, status=500
2025-08-08 16:49:23 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:49:51 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0118 closed
2025-08-08 16:49:51 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0118
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:49:51 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:49:57 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 26753 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:49:57 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:49:57 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:50:01 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-08-08 16:50:05 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:50:05 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:50:05 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:50:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:50:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8078 ms
2025-08-08 16:50:06 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:50:08 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:50:09 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:50:10 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:50:10 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=66MB
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=142MB
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@41ddec69
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:50:10 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:50:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:50:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:50:10 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:50:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:55562, server: localhost/127.0.0.1:2181
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:50:10 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0119, negotiated timeout = 40000
2025-08-08 16:50:10 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:50:10 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:50:10 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:50:10 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:50:11 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:50:11 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118c1faa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@da5b46f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c167296, org.springframework.security.web.header.HeaderWriterFilter@673a5aa7, org.springframework.web.filter.CorsFilter@99f75e4, org.springframework.security.web.authentication.logout.LogoutFilter@6dde913e, com.example.configcenter.security.JwtAuthenticationFilter@5615f82d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a464be7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6eb332d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b6ff016, org.springframework.security.web.session.SessionManagementFilter@522f74a1, org.springframework.security.web.access.ExceptionTranslationFilter@56f19f36, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f30d0eb]
2025-08-08 16:50:11 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:50:13 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:50:13 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:50:13 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:50:13 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:50:13 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643013461
2025-08-08 16:50:13 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:50:14 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:50:14 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:50:14 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:50:14 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:50:14 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 17.162 seconds (JVM running for 19.795)
2025-08-08 16:50:18 [http-nio-9090-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:50:18 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:50:18 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-08 16:50:18 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:50:18 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:50:18 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9a85d952669548a88e11b228d0731d44, requestId=req_c14cf282, url=/config-center/api/config/12
2025-08-08 16:50:20 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:50:20 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:50:20 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:50:20 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_40e58eb6bc45498786b9737496e2f737, requestId=req_08ac2cac, url=/config-center/api/config/history
2025-08-08 16:50:21 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:50:21 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:50:21 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:50:21 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:50:21 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643021161
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_40e58eb6bc45498786b9737496e2f737
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=138ms, rowsAffected=0
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_40e58eb6bc45498786b9737496e2f737
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=13ms, rowsAffected=0
2025-08-08 16:50:21 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$ab93aa57.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$8b894ad2.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:50:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:50:21 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9a85d952669548a88e11b228d0731d44
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_40e58eb6bc45498786b9737496e2f737
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_40e58eb6bc45498786b9737496e2f737, duration=750ms, status=200
2025-08-08 16:50:21 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9a85d952669548a88e11b228d0731d44, duration=2761ms, status=500
2025-08-08 16:50:21 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:50:21 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:50:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1ac6321ca2e64207b8c40429bf5a40c8, requestId=req_817f2240, url=/config-center/api/config/history
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:50:34 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7deb060500e14a09b83f600a518fa2b3, requestId=req_40500222, url=/config-center/api/config/12
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1ac6321ca2e64207b8c40429bf5a40c8
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=4239ms, rowsAffected=0
2025-08-08 16:50:38 [http-nio-9090-exec-3] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$ab93aa57.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$8b894ad2.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:50:38 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7deb060500e14a09b83f600a518fa2b3
2025-08-08 16:50:38 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7deb060500e14a09b83f600a518fa2b3, duration=4296ms, status=500
2025-08-08 16:50:38 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1ac6321ca2e64207b8c40429bf5a40c8
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=129ms, rowsAffected=0
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1ac6321ca2e64207b8c40429bf5a40c8
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1ac6321ca2e64207b8c40429bf5a40c8, duration=4384ms, status=200
2025-08-08 16:50:38 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:50:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:50:58 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5f1b4db3716e41baab329375c50ec422, requestId=req_2cff5d3b, url=/config-center/api/config/12
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cdaa8aae7b954247b99fa59c60e6ed38, requestId=req_c2786554, url=/config-center/api/config/history
2025-08-08 16:51:07 [http-nio-9090-exec-5] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$ab93aa57.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$8b894ad2.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, String, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cdaa8aae7b954247b99fa59c60e6ed38
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=29ms, rowsAffected=0
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cdaa8aae7b954247b99fa59c60e6ed38
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 16:51:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5f1b4db3716e41baab329375c50ec422
2025-08-08 16:51:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5f1b4db3716e41baab329375c50ec422, duration=9174ms, status=500
2025-08-08 16:51:07 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cdaa8aae7b954247b99fa59c60e6ed38
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cdaa8aae7b954247b99fa59c60e6ed38, duration=57ms, status=200
2025-08-08 16:51:07 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:51:45 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0119 closed
2025-08-08 16:51:45 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0119
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:51:45 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:51:56 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 27038 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:51:56 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:51:56 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:51:58 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 16:52:00 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:52:00 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:52:00 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:52:00 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:52:00 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4144 ms
2025-08-08 16:52:00 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:52:01 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:52:02 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:52:03 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:52:03 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=34MB
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=116MB
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@67c2b55d
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:52:03 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:52:03 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 16:52:03 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:52:03 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:52:03 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:52:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:52:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:55990, server: localhost/127.0.0.1:2181
2025-08-08 16:52:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011a, negotiated timeout = 40000
2025-08-08 16:52:04 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:52:04 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:52:04 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:52:04 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:52:04 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:52:04 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f6a5cc9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d24703e, org.springframework.security.web.context.SecurityContextPersistenceFilter@67683210, org.springframework.security.web.header.HeaderWriterFilter@5add7380, org.springframework.web.filter.CorsFilter@4ef10d3b, org.springframework.security.web.authentication.logout.LogoutFilter@5b53c3c5, com.example.configcenter.security.JwtAuthenticationFilter@1d2d4d7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@103033fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5862ab28, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@749ffdc7, org.springframework.security.web.session.SessionManagementFilter@d3b0397, org.springframework.security.web.access.ExceptionTranslationFilter@1e5190bd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@414d466e]
2025-08-08 16:52:04 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:52:07 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:52:07 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:52:07 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:52:07 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:52:07 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643127472
2025-08-08 16:52:08 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:52:08 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:52:08 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:52:08 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:52:08 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:52:08 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 13.76 seconds (JVM running for 15.97)
2025-08-08 16:52:09 [RMI TCP Connection(4)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:52:09 [RMI TCP Connection(4)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:52:09 [RMI TCP Connection(4)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-08 16:52:09 [RMI TCP Connection(5)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 16:52:10 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:52:10 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:52:10 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:52:10 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:52:11 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:52:11 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:52:11 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:52:11 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:52:11 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:52:11 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:52:11 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c98f7be0242d4291ba261bb02791218f, requestId=req_30865ac1, url=/config-center/api/config/12
2025-08-08 16:52:11 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7e0a631926b34b93a4be4de831861914, requestId=req_50cfd732, url=/config-center/api/config/history
2025-08-08 16:52:16 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$6099e17.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:52:16 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:52:16 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:52:16 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:52:16 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:52:16 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643136353
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:52:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7e0a631926b34b93a4be4de831861914
2025-08-08 16:52:16 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c98f7be0242d4291ba261bb02791218f
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=74ms, rowsAffected=0
2025-08-08 16:52:16 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c98f7be0242d4291ba261bb02791218f, duration=4674ms, status=500
2025-08-08 16:52:16 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7e0a631926b34b93a4be4de831861914
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7e0a631926b34b93a4be4de831861914
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7e0a631926b34b93a4be4de831861914, duration=4966ms, status=200
2025-08-08 16:52:16 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:52:38 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011a closed
2025-08-08 16:52:38 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011a
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:52:38 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:52:45 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 27164 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:52:45 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:52:45 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:52:47 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-08-08 16:52:48 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:52:48 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:52:48 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:52:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:52:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2954 ms
2025-08-08 16:52:49 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:52:49 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:52:50 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:52:50 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:52:50 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=35MB
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=128MB
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@41ddec69
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:52:50 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:52:50 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:52:50 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:52:50 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:52:50 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:56255, server: localhost/127.0.0.1:2181
2025-08-08 16:52:50 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011b, negotiated timeout = 40000
2025-08-08 16:52:50 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:52:50 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:52:50 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:52:50 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:52:51 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:52:51 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ac0fdc7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@571903ff, org.springframework.security.web.context.SecurityContextPersistenceFilter@237bdbcb, org.springframework.security.web.header.HeaderWriterFilter@3f030217, org.springframework.web.filter.CorsFilter@689ea211, org.springframework.security.web.authentication.logout.LogoutFilter@2b06c388, com.example.configcenter.security.JwtAuthenticationFilter@31443680, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36ec4071, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d0f4ac4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f1e18b1, org.springframework.security.web.session.SessionManagementFilter@673a5aa7, org.springframework.security.web.access.ExceptionTranslationFilter@62cb977a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@755033c5]
2025-08-08 16:52:51 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:52:53 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:52:53 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:52:53 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:52:53 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:52:53 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643173994
2025-08-08 16:52:54 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:52:54 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:52:54 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:52:54 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:52:55 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:52:55 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 9.565 seconds (JVM running for 10.991)
2025-08-08 16:52:55 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:52:55 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:52:55 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 16:52:55 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:52:55 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:52:55 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:52:55 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:52:56 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:52:56 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:52:56 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:52:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:52:56 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:52:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:52:56 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5becddffaab544c6b01492aa3dc9937d, requestId=req_bb0ccb5f, url=/config-center/api/config/history
2025-08-08 16:52:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f332aff4d4944a218f6fc80863381b7d, requestId=req_cda117ee, url=/config-center/api/config/12
2025-08-08 16:53:00 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:53:00 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:53:00 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:53:00 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:53:00 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643180692
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:53:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f332aff4d4944a218f6fc80863381b7d
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5becddffaab544c6b01492aa3dc9937d
2025-08-08 16:53:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=76ms, rowsAffected=1
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=2513ms, rowsAffected=0
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5becddffaab544c6b01492aa3dc9937d
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=28ms, rowsAffected=0
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:53:00 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:53:00 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f332aff4d4944a218f6fc80863381b7d
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5becddffaab544c6b01492aa3dc9937d
2025-08-08 16:53:00 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f332aff4d4944a218f6fc80863381b7d, duration=4840ms, status=200
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5becddffaab544c6b01492aa3dc9937d, duration=4840ms, status=200
2025-08-08 16:53:00 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:53:00 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:53:10 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011b closed
2025-08-08 16:53:10 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011b
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:53:10 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:53:19 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 27270 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:53:19 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:53:19 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:53:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-08 16:53:22 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:53:22 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:53:22 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:53:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:53:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2851 ms
2025-08-08 16:53:22 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:53:23 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:53:24 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:53:24 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:53:24 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=139MB
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=200MB
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@405223e4
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:53:24 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:53:24 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:53:24 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:53:24 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:53:24 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:56354, server: localhost/127.0.0.1:2181
2025-08-08 16:53:24 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011c, negotiated timeout = 40000
2025-08-08 16:53:24 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:53:24 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:53:24 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:53:24 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:53:24 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:53:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:53:25 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@518b0c12, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5af1b221, org.springframework.security.web.context.SecurityContextPersistenceFilter@755a90a6, org.springframework.security.web.header.HeaderWriterFilter@63a9af28, org.springframework.web.filter.CorsFilter@40b958c5, org.springframework.security.web.authentication.logout.LogoutFilter@7d0312a, com.example.configcenter.security.JwtAuthenticationFilter@361f26b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21202507, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7095b688, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d49fe37, org.springframework.security.web.session.SessionManagementFilter@25511895, org.springframework.security.web.access.ExceptionTranslationFilter@44a0e68f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f6a5cc9]
2025-08-08 16:53:25 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:53:27 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:53:27 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:53:27 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:53:27 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:53:27 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643207432
2025-08-08 16:53:27 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:53:27 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:53:27 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:53:27 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:53:27 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:53:27 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 8.936 seconds (JVM running for 10.344)
2025-08-08 16:53:28 [RMI TCP Connection(3)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:53:28 [RMI TCP Connection(3)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:53:28 [RMI TCP Connection(3)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 16:53:28 [RMI TCP Connection(2)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:07 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_98cb201b87ae4c6d9269cda7e746358d, requestId=req_353fe632, url=/config-center/api/config/history
2025-08-08 16:54:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d94b8677a1ac417ca8742f501ca31097, requestId=req_70d50263, url=/config-center/api/config/12
2025-08-08 16:54:13 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$bed336fa.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:54:13 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:54:13 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:54:13 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:54:13 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:54:13 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643253336
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:54:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:54:13 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d94b8677a1ac417ca8742f501ca31097
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_98cb201b87ae4c6d9269cda7e746358d
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=68ms, rowsAffected=0
2025-08-08 16:54:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d94b8677a1ac417ca8742f501ca31097, duration=5444ms, status=500
2025-08-08 16:54:13 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_98cb201b87ae4c6d9269cda7e746358d
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=18ms, rowsAffected=0
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_98cb201b87ae4c6d9269cda7e746358d
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_98cb201b87ae4c6d9269cda7e746358d, duration=5781ms, status=200
2025-08-08 16:54:13 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_174f425c56364123ac50df6117f94fc1, requestId=req_fb764c9e, url=/config-center/api/config/12
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c6d845eb9a394055bfd63521cb506b25, requestId=req_5c1da761, url=/config-center/api/config/history
2025-08-08 16:54:19 [http-nio-9090-exec-3] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$bed336fa.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_174f425c56364123ac50df6117f94fc1
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c6d845eb9a394055bfd63521cb506b25
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_174f425c56364123ac50df6117f94fc1, duration=14ms, status=500
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=12ms, rowsAffected=0
2025-08-08 16:54:19 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c6d845eb9a394055bfd63521cb506b25
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=28ms, rowsAffected=0
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c6d845eb9a394055bfd63521cb506b25
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c6d845eb9a394055bfd63521cb506b25, duration=44ms, status=200
2025-08-08 16:54:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b319704114724c7c9e50ea3d22d58650, requestId=req_06732ad9, url=/config-center/api/config/history
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5e908fbc361d4b7b95eb48024a1c6626, requestId=req_f80993e7, url=/config-center/api/config/12
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b319704114724c7c9e50ea3d22d58650
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=2ms, rowsAffected=0
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b319704114724c7c9e50ea3d22d58650
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b319704114724c7c9e50ea3d22d58650
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b319704114724c7c9e50ea3d22d58650, duration=10ms, status=200
2025-08-08 16:54:22 [http-nio-9090-exec-5] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$bed336fa.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:54:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5e908fbc361d4b7b95eb48024a1c6626
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5e908fbc361d4b7b95eb48024a1c6626, duration=12ms, status=500
2025-08-08 16:54:22 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9158dee7d9cd43d59db9ced480dd5084, requestId=req_1b5f05a7, url=/config-center/api/config/history
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1a3b0a87c31541709ee80f7f25e7f9bd, requestId=req_681bcdb6, url=/config-center/api/config/12
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9158dee7d9cd43d59db9ced480dd5084
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=4ms, rowsAffected=0
2025-08-08 16:54:27 [http-nio-9090-exec-7] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$bed336fa.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1a3b0a87c31541709ee80f7f25e7f9bd
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9158dee7d9cd43d59db9ced480dd5084
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1a3b0a87c31541709ee80f7f25e7f9bd, duration=11ms, status=500
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=5ms, rowsAffected=0
2025-08-08 16:54:27 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9158dee7d9cd43d59db9ced480dd5084
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9158dee7d9cd43d59db9ced480dd5084, duration=16ms, status=200
2025-08-08 16:54:27 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_52856a6484b646a4a48e7679a51e021f, requestId=req_6f8853e5, url=/config-center/api/config/12
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8ab401abfe8a4668939ca2d0f9c8c816, requestId=req_7b4545b5, url=/config-center/api/config/history
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ab401abfe8a4668939ca2d0f9c8c816
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=6ms, rowsAffected=0
2025-08-08 16:54:33 [http-nio-9090-exec-9] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$aa3bd04a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$bed336fa.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ab401abfe8a4668939ca2d0f9c8c816
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=10ms, rowsAffected=0
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_52856a6484b646a4a48e7679a51e021f
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_52856a6484b646a4a48e7679a51e021f, duration=21ms, status=500
2025-08-08 16:54:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8ab401abfe8a4668939ca2d0f9c8c816
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8ab401abfe8a4668939ca2d0f9c8c816, duration=22ms, status=200
2025-08-08 16:54:33 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:56:45 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:56:46 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011c
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011c closed
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:56:46 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:56:47 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:56:55 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 27679 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:56:55 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:56:55 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:56:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-08-08 16:56:58 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:56:58 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:56:58 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:56:58 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:56:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3204 ms
2025-08-08 16:56:58 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:56:59 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:57:00 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:57:01 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:57:01 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=68MB
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=114MB
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@5db04bd2
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:57:01 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:57:01 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:57:01 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:57:01 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:57:01 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:57140, server: localhost/127.0.0.1:2181
2025-08-08 16:57:01 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011d, negotiated timeout = 40000
2025-08-08 16:57:01 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:57:01 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:57:01 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:57:01 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:57:02 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:57:02 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f6a5cc9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d24703e, org.springframework.security.web.context.SecurityContextPersistenceFilter@67683210, org.springframework.security.web.header.HeaderWriterFilter@5add7380, org.springframework.web.filter.CorsFilter@4ef10d3b, org.springframework.security.web.authentication.logout.LogoutFilter@5b53c3c5, com.example.configcenter.security.JwtAuthenticationFilter@24dc150c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@103033fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5862ab28, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@749ffdc7, org.springframework.security.web.session.SessionManagementFilter@d3b0397, org.springframework.security.web.access.ExceptionTranslationFilter@1e5190bd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@414d466e]
2025-08-08 16:57:02 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:57:05 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:57:05 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:57:05 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:57:05 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:57:05 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643425460
2025-08-08 16:57:06 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:57:06 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:57:06 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:57:06 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:57:06 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:57:06 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 11.817 seconds (JVM running for 13.999)
2025-08-08 16:57:06 [RMI TCP Connection(1)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:57:06 [RMI TCP Connection(1)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:57:06 [RMI TCP Connection(1)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-08 16:57:06 [RMI TCP Connection(2)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c99c4ad08620439880197843751c0905, requestId=req_603cdf28, url=/config-center/api/config/12
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9fb0734531384e14aeb192edde81e923, requestId=req_0f61b1f0, url=/config-center/api/config/history
2025-08-08 16:57:15 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$c9acaf7a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$2ec01f26.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:57:15 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:57:15 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:57:15 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:57:15 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:57:15 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643435840
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:57:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9fb0734531384e14aeb192edde81e923
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c99c4ad08620439880197843751c0905
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c99c4ad08620439880197843751c0905, duration=179ms, status=500
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=47ms, rowsAffected=0
2025-08-08 16:57:15 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9fb0734531384e14aeb192edde81e923
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=18ms, rowsAffected=0
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9fb0734531384e14aeb192edde81e923
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9fb0734531384e14aeb192edde81e923, duration=504ms, status=200
2025-08-08 16:57:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3d39a034b5f0409ea191f14f8cb79f27, requestId=req_921c70db, url=/config-center/api/config/history
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_597e314fef134db495d5dd8138256171, requestId=req_562404b4, url=/config-center/api/config/12
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3d39a034b5f0409ea191f14f8cb79f27
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=6ms, rowsAffected=0
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3d39a034b5f0409ea191f14f8cb79f27
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=0
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3d39a034b5f0409ea191f14f8cb79f27
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3d39a034b5f0409ea191f14f8cb79f27, duration=13ms, status=200
2025-08-08 16:57:17 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:17 [http-nio-9090-exec-3] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$c9acaf7a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$2ec01f26.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_597e314fef134db495d5dd8138256171
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_597e314fef134db495d5dd8138256171, duration=14ms, status=500
2025-08-08 16:57:17 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b7022e01a359401bac7a58b8c8b4b961, requestId=req_e5f08a8f, url=/config-center/api/config/history
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_80b9f58e164e48958bce47a56e22363e, requestId=req_c115d774, url=/config-center/api/config/12
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b7022e01a359401bac7a58b8c8b4b961
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=3ms, rowsAffected=0
2025-08-08 16:57:22 [http-nio-9090-exec-6] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$c9acaf7a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$2ec01f26.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_80b9f58e164e48958bce47a56e22363e
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_80b9f58e164e48958bce47a56e22363e, duration=11ms, status=500
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b7022e01a359401bac7a58b8c8b4b961
2025-08-08 16:57:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=5ms, rowsAffected=0
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b7022e01a359401bac7a58b8c8b4b961
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b7022e01a359401bac7a58b8c8b4b961, duration=14ms, status=200
2025-08-08 16:57:22 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_788606b6b84e4f55a8c291f081e3a0b3, requestId=req_daf48acb, url=/config-center/api/config/history
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1c2e980fa8a8403aade8f5fc5cad3d72, requestId=req_eb979949, url=/config-center/api/config/12
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_788606b6b84e4f55a8c291f081e3a0b3
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=3ms, rowsAffected=0
2025-08-08 16:57:23 [http-nio-9090-exec-7] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$c9acaf7a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$2ec01f26.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1c2e980fa8a8403aade8f5fc5cad3d72
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_788606b6b84e4f55a8c291f081e3a0b3
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1c2e980fa8a8403aade8f5fc5cad3d72, duration=8ms, status=500
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 16:57:23 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_788606b6b84e4f55a8c291f081e3a0b3
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_788606b6b84e4f55a8c291f081e3a0b3, duration=11ms, status=200
2025-08-08 16:57:23 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_48e8a1d6a3424e98a9962d99d90add4e, requestId=req_722856d7, url=/config-center/api/config/history
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:57:30 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e5ac5da9b2174005b7ac0cf7f4ab7247, requestId=req_63edeed0, url=/config-center/api/config/12
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_48e8a1d6a3424e98a9962d99d90add4e
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=32ms, rowsAffected=0
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_48e8a1d6a3424e98a9962d99d90add4e
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=13ms, rowsAffected=0
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_48e8a1d6a3424e98a9962d99d90add4e
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_48e8a1d6a3424e98a9962d99d90add4e, duration=53ms, status=200
2025-08-08 16:57:30 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:57:33 [http-nio-9090-exec-9] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]) - URL: http://localhost:9090/config-center/api/config/12
org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"]); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:165)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:143)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:49)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:301)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:97)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:571)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:536)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:402)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$c9acaf7a.getConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.getConfig(ConfigController.java:57)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$2ec01f26.getConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (byte[])"{"@class":"com.example.configcenter.entity.ConfigItem","id":10,"groupName":"redis","configKey":"port","configValue":"{ \"id\":0, \"name\":\"wlc000\" }","dataType":"STRING","description":"","version":1754037327932,"encrypted":false,"tags":null,"status":"ONLINE","zkPath":"/configs/redis/port","operator":"","owner":"","createTime":0,"updateTime":0,"delFlag":0}"; line: 1, column: 164] (through reference chain: com.example.configcenter.entity.ConfigItem["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:144)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:110)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:213)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:781)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3690)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:163)
	... 124 common frames omitted
2025-08-08 16:57:33 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e5ac5da9b2174005b7ac0cf7f4ab7247
2025-08-08 16:57:33 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e5ac5da9b2174005b7ac0cf7f4ab7247, duration=2849ms, status=500
2025-08-08 16:57:33 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:06 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 16:59:06 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011d
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011d closed
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 16:59:06 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 16:59:16 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 28106 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 16:59:16 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 16:59:16 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 16:59:17 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-08-08 16:59:18 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 16:59:18 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 16:59:18 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 16:59:19 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 16:59:19 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2519 ms
2025-08-08 16:59:19 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 16:59:20 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 16:59:20 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 16:59:20 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 16:59:20 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=67MB
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=108MB
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@8f09a02
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 16:59:20 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 16:59:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 16:59:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 16:59:20 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 16:59:20 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:57362, server: localhost/127.0.0.1:2181
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011e, negotiated timeout = 40000
2025-08-08 16:59:21 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 16:59:21 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:59:21 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 16:59:21 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 16:59:22 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 16:59:22 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@99f75e4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b6ff016, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a464be7, org.springframework.security.web.header.HeaderWriterFilter@36ec4071, org.springframework.web.filter.CorsFilter@5aefdb9e, org.springframework.security.web.authentication.logout.LogoutFilter@1e2bc241, com.example.configcenter.security.JwtAuthenticationFilter@28e91f6d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48d24d63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3958db82, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a491a60, org.springframework.security.web.session.SessionManagementFilter@3d9cba2, org.springframework.security.web.access.ExceptionTranslationFilter@237bdbcb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2604940]
2025-08-08 16:59:22 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 16:59:26 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 16:59:26 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 16:59:26 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:59:26 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:59:26 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643566342
2025-08-08 16:59:26 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 16:59:26 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 16:59:26 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 16:59:26 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 16:59:26 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 16:59:26 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 11.097 seconds (JVM running for 12.771)
2025-08-08 16:59:29 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 16:59:29 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 16:59:29 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:29 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0f96eb7256144788835c0b1abcc6e774, requestId=req_a5d5f9a1, url=/config-center/api/config/12
2025-08-08 16:59:29 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8f3156d3fe8f445587dbed384118c1e9, requestId=req_e8be5e4c, url=/config-center/api/config/history
2025-08-08 16:59:34 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 16:59:34 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 16:59:34 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 16:59:34 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 16:59:34 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754643574977
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 16:59:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0f96eb7256144788835c0b1abcc6e774
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8f3156d3fe8f445587dbed384118c1e9
2025-08-08 16:59:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=22ms, rowsAffected=1
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=34ms, rowsAffected=0
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8f3156d3fe8f445587dbed384118c1e9
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=22ms, rowsAffected=0
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:59:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 16:59:35 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0f96eb7256144788835c0b1abcc6e774
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8f3156d3fe8f445587dbed384118c1e9
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8f3156d3fe8f445587dbed384118c1e9, duration=5467ms, status=200
2025-08-08 16:59:35 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0f96eb7256144788835c0b1abcc6e774, duration=5467ms, status=200
2025-08-08 16:59:35 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bee085307cd14fb9a8049fca574dbf53, requestId=req_1245f8be, url=/config-center/api/config/history
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d043b3cf46294b498d3b2ab4aad8dee2, requestId=req_2d0a47a8, url=/config-center/api/config/12
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bee085307cd14fb9a8049fca574dbf53
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=23ms, rowsAffected=0
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d043b3cf46294b498d3b2ab4aad8dee2
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=84ms, rowsAffected=1
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bee085307cd14fb9a8049fca574dbf53
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=61ms, rowsAffected=0
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d043b3cf46294b498d3b2ab4aad8dee2
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d043b3cf46294b498d3b2ab4aad8dee2, duration=88ms, status=200
2025-08-08 16:59:37 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bee085307cd14fb9a8049fca574dbf53
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bee085307cd14fb9a8049fca574dbf53, duration=90ms, status=200
2025-08-08 16:59:37 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4047154131e14038ba76a6b0d1b59980, requestId=req_7307afa2, url=/config-center/api/config/history
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a8f26410da4e48d0a7a7de6c1501ef32, requestId=req_538c4768, url=/config-center/api/config/12
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a8f26410da4e48d0a7a7de6c1501ef32
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=3ms, rowsAffected=1
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4047154131e14038ba76a6b0d1b59980
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=5ms, rowsAffected=0
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a8f26410da4e48d0a7a7de6c1501ef32
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a8f26410da4e48d0a7a7de6c1501ef32, duration=6ms, status=200
2025-08-08 16:59:38 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4047154131e14038ba76a6b0d1b59980
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=11ms, rowsAffected=0
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4047154131e14038ba76a6b0d1b59980
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4047154131e14038ba76a6b0d1b59980, duration=20ms, status=200
2025-08-08 16:59:38 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1df76d7ae25c4dc8b14f366cb465de64, requestId=req_d764e24c, url=/config-center/api/config/12
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d2ef7568562b4250aabc5e975a87f051, requestId=req_b1e848df, url=/config-center/api/config/history
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1df76d7ae25c4dc8b14f366cb465de64
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1df76d7ae25c4dc8b14f366cb465de64
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1df76d7ae25c4dc8b14f366cb465de64, duration=6ms, status=200
2025-08-08 16:59:40 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d2ef7568562b4250aabc5e975a87f051
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=16ms, rowsAffected=0
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d2ef7568562b4250aabc5e975a87f051
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=17ms, rowsAffected=0
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d2ef7568562b4250aabc5e975a87f051
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d2ef7568562b4250aabc5e975a87f051, duration=36ms, status=200
2025-08-08 16:59:40 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:00:40 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:00:40 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:00:40 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:00:40 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad2836e99611434aa2aed910ce0d561e, requestId=req_5b5abca2, url=/config-center/api/config/history
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3f831c81a53b4679944acdf9614a4c9b, requestId=req_69d8f0b6, url=/config-center/api/config/12
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad2836e99611434aa2aed910ce0d561e
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3f831c81a53b4679944acdf9614a4c9b
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=0
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=13ms, rowsAffected=1
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3f831c81a53b4679944acdf9614a4c9b
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3f831c81a53b4679944acdf9614a4c9b, duration=31ms, status=200
2025-08-08 17:00:41 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad2836e99611434aa2aed910ce0d561e
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=17ms, rowsAffected=0
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad2836e99611434aa2aed910ce0d561e
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad2836e99611434aa2aed910ce0d561e, duration=41ms, status=200
2025-08-08 17:00:41 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:16:32 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:16:32 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:16:32 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:16:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_af24efc9106343e5b74b72789228e34f, requestId=req_48075c0b, url=/config-center/api/config/12
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_456e55f140a446b594bab56ad3dad107, requestId=req_a5c4c2e4, url=/config-center/api/config/history
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_456e55f140a446b594bab56ad3dad107
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=36ms, rowsAffected=0
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_456e55f140a446b594bab56ad3dad107
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=45ms, rowsAffected=0
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af24efc9106343e5b74b72789228e34f
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=161ms, rowsAffected=1
2025-08-08 17:16:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:16:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:16:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_af24efc9106343e5b74b72789228e34f
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_456e55f140a446b594bab56ad3dad107
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_af24efc9106343e5b74b72789228e34f, duration=209ms, status=200
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_456e55f140a446b594bab56ad3dad107, duration=211ms, status=200
2025-08-08 17:16:37 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:16:37 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:16:40 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cf9682182d364f8da17ef980ea412a67, requestId=req_d5100615, url=/config-center/api/config/12
2025-08-08 17:16:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_98e7545f79874ef09d26fb9a347cf9ea, requestId=req_36305333, url=/config-center/api/config/history
2025-08-08 17:16:41 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cf9682182d364f8da17ef980ea412a67
2025-08-08 17:16:41 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=298ms, rowsAffected=1
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_98e7545f79874ef09d26fb9a347cf9ea
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=273ms, rowsAffected=0
2025-08-08 17:16:41 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cf9682182d364f8da17ef980ea412a67
2025-08-08 17:16:41 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cf9682182d364f8da17ef980ea412a67, duration=345ms, status=200
2025-08-08 17:16:41 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_98e7545f79874ef09d26fb9a347cf9ea
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=82ms, rowsAffected=0
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_98e7545f79874ef09d26fb9a347cf9ea
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_98e7545f79874ef09d26fb9a347cf9ea, duration=408ms, status=200
2025-08-08 17:16:41 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:13 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 17:20:13 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011e
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011e closed
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 17:20:13 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 17:20:14 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 17:20:31 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 29281 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 17:20:31 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 17:20:31 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 17:20:33 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-08-08 17:20:35 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 17:20:35 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 17:20:35 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 17:20:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 17:20:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3638 ms
2025-08-08 17:20:35 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 17:20:36 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 17:20:37 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 17:20:38 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 17:20:38 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=52MB
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=100MB
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@72d16d6
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 17:20:38 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 17:20:38 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 17:20:38 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 17:20:38 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 17:20:38 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:58283, server: localhost/127.0.0.1:2181
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd011f, negotiated timeout = 40000
2025-08-08 17:20:38 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 17:20:38 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:20:38 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 17:20:40 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 17:20:40 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@99f75e4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b6ff016, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a464be7, org.springframework.security.web.header.HeaderWriterFilter@36ec4071, org.springframework.web.filter.CorsFilter@5aefdb9e, org.springframework.security.web.authentication.logout.LogoutFilter@1e2bc241, com.example.configcenter.security.JwtAuthenticationFilter@93fb44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48d24d63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3958db82, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a491a60, org.springframework.security.web.session.SessionManagementFilter@3d9cba2, org.springframework.security.web.access.ExceptionTranslationFilter@237bdbcb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2604940]
2025-08-08 17:20:40 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 17:20:41 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 17:20:41 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 17:20:42 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:20:42 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:20:42 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754644842049
2025-08-08 17:20:42 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 17:20:42 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:20:42 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:20:42 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:20:42 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 17:20:42 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 11.5 seconds (JVM running for 16.68)
2025-08-08 17:20:49 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 17:20:49 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 17:20:49 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-08 17:20:49 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:20:49 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:49 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:49 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:50 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:50 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:20:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_383812a212ef4d85b4f44da18395ffdc, requestId=req_28a38765, url=/config-center/api/config/12
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_42cf5cb256ef41ce91c919d3ef48fd22, requestId=req_5b63f236, url=/config-center/api/config/history
2025-08-08 17:20:50 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 17:20:50 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 17:20:50 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:20:50 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:20:50 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754644850790
2025-08-08 17:20:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:20:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:20:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:20:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_42cf5cb256ef41ce91c919d3ef48fd22
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=89ms, rowsAffected=0
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_42cf5cb256ef41ce91c919d3ef48fd22
2025-08-08 17:20:50 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=0
2025-08-08 17:20:51 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:20:51 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:20:51 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:20:51 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_42cf5cb256ef41ce91c919d3ef48fd22
2025-08-08 17:20:51 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_42cf5cb256ef41ce91c919d3ef48fd22, duration=972ms, status=200
2025-08-08 17:20:51 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:51 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_383812a212ef4d85b4f44da18395ffdc
2025-08-08 17:20:51 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=150ms, rowsAffected=1
2025-08-08 17:20:51 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_383812a212ef4d85b4f44da18395ffdc
2025-08-08 17:20:51 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_383812a212ef4d85b4f44da18395ffdc, duration=1184ms, status=200
2025-08-08 17:20:51 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_53f599eb40f5411ba967a864d0c8c9e4, requestId=req_c179c0b5, url=/config-center/api/config/history
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_09e8f16ac72d40cd963b6ffa4447ab7f, requestId=req_cd333569, url=/config-center/api/config/12
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_09e8f16ac72d40cd963b6ffa4447ab7f
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_09e8f16ac72d40cd963b6ffa4447ab7f, duration=76ms, status=200
2025-08-08 17:20:52 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_53f599eb40f5411ba967a864d0c8c9e4
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=112ms, rowsAffected=0
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_53f599eb40f5411ba967a864d0c8c9e4
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=89ms, rowsAffected=0
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_53f599eb40f5411ba967a864d0c8c9e4
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_53f599eb40f5411ba967a864d0c8c9e4, duration=209ms, status=200
2025-08-08 17:20:52 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_32fd4a49486a4aeda87bc8c5ad1d61d9, requestId=req_b0e8d150, url=/config-center/api/config/history
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ff2081cfbb69468989c9904b739edb17, requestId=req_791dd1bd, url=/config-center/api/config/12
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_32fd4a49486a4aeda87bc8c5ad1d61d9
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=9ms, rowsAffected=0
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ff2081cfbb69468989c9904b739edb17
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ff2081cfbb69468989c9904b739edb17, duration=13ms, status=200
2025-08-08 17:20:53 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_32fd4a49486a4aeda87bc8c5ad1d61d9
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_32fd4a49486a4aeda87bc8c5ad1d61d9
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_32fd4a49486a4aeda87bc8c5ad1d61d9, duration=24ms, status=200
2025-08-08 17:20:53 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cf18c1b612e44262aaad4adea07c163e, requestId=req_265f0f1d, url=/config-center/api/config/12
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dbe5fb2b688441d892bdbe1d4b9aa613, requestId=req_e4da1b64, url=/config-center/api/config/history
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dbe5fb2b688441d892bdbe1d4b9aa613
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=27ms, rowsAffected=0
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dbe5fb2b688441d892bdbe1d4b9aa613
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=9ms, rowsAffected=0
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cf18c1b612e44262aaad4adea07c163e
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cf18c1b612e44262aaad4adea07c163e, duration=58ms, status=200
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dbe5fb2b688441d892bdbe1d4b9aa613
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dbe5fb2b688441d892bdbe1d4b9aa613, duration=60ms, status=200
2025-08-08 17:22:17 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:22:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0c7a335af1a8499da7203b070ed4ff0e, requestId=req_29d0986c, url=/config-center/api/config/history
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_97c1c290374546ac977936fac6835ea1, requestId=req_ec9584c8, url=/config-center/api/config/12
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0c7a335af1a8499da7203b070ed4ff0e
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=2ms, rowsAffected=0
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0c7a335af1a8499da7203b070ed4ff0e
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=2ms, rowsAffected=0
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_97c1c290374546ac977936fac6835ea1
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0c7a335af1a8499da7203b070ed4ff0e
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_97c1c290374546ac977936fac6835ea1, duration=9ms, status=200
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0c7a335af1a8499da7203b070ed4ff0e, duration=9ms, status=200
2025-08-08 17:22:18 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:22:18 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fb4978dbf3f8431ca55e5d5d849b51d8, requestId=req_e6b2bb69, url=/config-center/api/ticket/page
2025-08-08 17:22:21 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fb4978dbf3f8431ca55e5d5d849b51d8
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=11ms, rowsAffected=2
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fb4978dbf3f8431ca55e5d5d849b51d8
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=2
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fb4978dbf3f8431ca55e5d5d849b51d8
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fb4978dbf3f8431ca55e5d5d849b51d8, duration=87ms, status=200
2025-08-08 17:22:21 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:24:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:27 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 17:24:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_79fe8b8b82ac45c68b517077778297d5, requestId=req_ecaf5729, url=/config-center/api/ticket/page
2025-08-08 17:24:28 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_79fe8b8b82ac45c68b517077778297d5
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=15ms, rowsAffected=2
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_79fe8b8b82ac45c68b517077778297d5
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=2
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_79fe8b8b82ac45c68b517077778297d5
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_79fe8b8b82ac45c68b517077778297d5, duration=80ms, status=200
2025-08-08 17:24:28 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:37 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:24:37 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:37 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:24:37 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3eb7008390c94f39a0d0c0cd896bdc92, requestId=req_fd3d3a12, url=/config-center/api/config/page
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7be590ec1472457986c7e058b2bec024, requestId=req_bc19d002, url=/config-center/api/enum/get_all_enum
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7be590ec1472457986c7e058b2bec024
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7be590ec1472457986c7e058b2bec024, duration=53ms, status=200
2025-08-08 17:24:38 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3eb7008390c94f39a0d0c0cd896bdc92
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=63ms, rowsAffected=4
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3eb7008390c94f39a0d0c0cd896bdc92
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=19ms, rowsAffected=4
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3eb7008390c94f39a0d0c0cd896bdc92
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3eb7008390c94f39a0d0c0cd896bdc92, duration=148ms, status=200
2025-08-08 17:24:38 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_266ddedbfe344871adf9457c3f3c65ac, requestId=req_fb643cd7, url=/config-center/api/ticket/page
2025-08-08 17:24:39 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_266ddedbfe344871adf9457c3f3c65ac
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=45ms, rowsAffected=2
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_266ddedbfe344871adf9457c3f3c65ac
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=2ms, rowsAffected=2
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_266ddedbfe344871adf9457c3f3c65ac
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_266ddedbfe344871adf9457c3f3c65ac, duration=54ms, status=200
2025-08-08 17:24:39 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a8642115ebf24ab39e456f0e44d6ad67, requestId=req_96f5ce2a, url=/config-center/api/enum/get_all_enum
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_469278ebf26441d49137ef0e16a23fbc, requestId=req_02f19926, url=/config-center/api/config/page
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a8642115ebf24ab39e456f0e44d6ad67
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a8642115ebf24ab39e456f0e44d6ad67, duration=8ms, status=200
2025-08-08 17:24:44 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_469278ebf26441d49137ef0e16a23fbc
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=64ms, rowsAffected=4
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_469278ebf26441d49137ef0e16a23fbc
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=17ms, rowsAffected=4
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_469278ebf26441d49137ef0e16a23fbc
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_469278ebf26441d49137ef0e16a23fbc, duration=86ms, status=200
2025-08-08 17:24:44 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:25:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:25:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:25:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:27:01 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:27:01 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:27:01 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:27:01 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:27:03 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:27:03 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:27:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b0adf70fd1ca41fab52691e68d56b8b1, requestId=req_6b4d760e, url=/config-center/api/enum/get_all_enum
2025-08-08 17:27:03 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2d803ae1a018424dbe2b4a32aeb05635, requestId=req_bec3a871, url=/config-center/api/config/page
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b0adf70fd1ca41fab52691e68d56b8b1
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b0adf70fd1ca41fab52691e68d56b8b1, duration=27ms, status=200
2025-08-08 17:27:03 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2d803ae1a018424dbe2b4a32aeb05635
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=501ms, rowsAffected=4
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2d803ae1a018424dbe2b4a32aeb05635
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=248ms, rowsAffected=4
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2d803ae1a018424dbe2b4a32aeb05635
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2d803ae1a018424dbe2b4a32aeb05635, duration=837ms, status=200
2025-08-08 17:27:04 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:28:25 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:28:25 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:28:25 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:28:25 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a2cb07f9a3ca4a4180ecfb26e02f2c20, requestId=req_72c6a146, url=/config-center/api/enum/get_all_enum
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8aff025a2354484294fc73467cefea89, requestId=req_eac373f6, url=/config-center/api/config/page
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a2cb07f9a3ca4a4180ecfb26e02f2c20
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a2cb07f9a3ca4a4180ecfb26e02f2c20, duration=20ms, status=200
2025-08-08 17:28:26 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8aff025a2354484294fc73467cefea89
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=207ms, rowsAffected=4
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8aff025a2354484294fc73467cefea89
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=72ms, rowsAffected=4
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8aff025a2354484294fc73467cefea89
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8aff025a2354484294fc73467cefea89, duration=297ms, status=200
2025-08-08 17:28:26 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f8bf31f5f2ed4443bd4af5a298e839f4, requestId=req_984374eb, url=/config-center/api/enum/get_all_enum
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1c83a615f3994b2cb7460f9c19a90a39, requestId=req_f9bf368b, url=/config-center/api/config/page
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f8bf31f5f2ed4443bd4af5a298e839f4
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f8bf31f5f2ed4443bd4af5a298e839f4, duration=36ms, status=200
2025-08-08 17:29:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1c83a615f3994b2cb7460f9c19a90a39
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=92ms, rowsAffected=4
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1c83a615f3994b2cb7460f9c19a90a39
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=56ms, rowsAffected=4
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1c83a615f3994b2cb7460f9c19a90a39
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1c83a615f3994b2cb7460f9c19a90a39, duration=182ms, status=200
2025-08-08 17:29:24 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:29:54 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d77e678d17e04bcaaecd126759384c30, requestId=req_5bc6eafa, url=/config-center/api/config/page
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b0595c69c49641c685b1ad1ed3fdf1dd, requestId=req_5dd56f74, url=/config-center/api/enum/get_all_enum
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b0595c69c49641c685b1ad1ed3fdf1dd
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b0595c69c49641c685b1ad1ed3fdf1dd, duration=13ms, status=200
2025-08-08 17:30:12 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d77e678d17e04bcaaecd126759384c30
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=97ms, rowsAffected=4
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d77e678d17e04bcaaecd126759384c30
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=38ms, rowsAffected=4
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d77e678d17e04bcaaecd126759384c30
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d77e678d17e04bcaaecd126759384c30, duration=162ms, status=200
2025-08-08 17:30:12 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14/get_processing_ticket
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14/get_processing_ticket
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_951e2fe20db6474bb8b82a748e359ba1, requestId=req_bc0190ef, url=/config-center/api/config/14/get_processing_ticket
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_951e2fe20db6474bb8b82a748e359ba1
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_951e2fe20db6474bb8b82a748e359ba1, duration=69ms, status=404
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:30:24 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:30:25 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_07a6c10ed073479ab47b4643b495659b, requestId=req_09fb15d3, url=/config-center/api/enum/get_all_enum
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ba8d10db97b3485fb4feae2ae9378206, requestId=req_11e99756, url=/config-center/api/config/page
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_07a6c10ed073479ab47b4643b495659b
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_07a6c10ed073479ab47b4643b495659b, duration=14ms, status=200
2025-08-08 17:31:09 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ba8d10db97b3485fb4feae2ae9378206
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=43ms, rowsAffected=4
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ba8d10db97b3485fb4feae2ae9378206
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=97ms, rowsAffected=4
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ba8d10db97b3485fb4feae2ae9378206
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ba8d10db97b3485fb4feae2ae9378206, duration=171ms, status=200
2025-08-08 17:31:09 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b774e1b7a9af4af1a1025c95ca07e24f, requestId=req_635ff947, url=/config-center/api/enum/get_all_enum
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dd36827c2c404ec386847fa53b2ddcc2, requestId=req_0afa0838, url=/config-center/api/config/page
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b774e1b7a9af4af1a1025c95ca07e24f
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b774e1b7a9af4af1a1025c95ca07e24f, duration=20ms, status=200
2025-08-08 17:31:57 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dd36827c2c404ec386847fa53b2ddcc2
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=57ms, rowsAffected=4
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_dd36827c2c404ec386847fa53b2ddcc2
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=180ms, rowsAffected=4
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dd36827c2c404ec386847fa53b2ddcc2
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dd36827c2c404ec386847fa53b2ddcc2, duration=333ms, status=200
2025-08-08 17:31:57 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:32:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14/get_processing_ticket
2025-08-08 17:32:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14/get_processing_ticket
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a95aa939e6404888ac196b9c2fdaba49, requestId=req_98fc747a, url=/config-center/api/config/14/get_processing_ticket
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a95aa939e6404888ac196b9c2fdaba49
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a95aa939e6404888ac196b9c2fdaba49, duration=399ms, status=404
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:32:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b46f35f63e874c63a2b2fa87d03fe2ae, requestId=req_9924ba46, url=/config-center/api/config/10
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=10&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=10&pageNum=1&pageSize=10
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c7927cdf777c4d938bf168758e5d0518, requestId=req_c8daa6c1, url=/config-center/api/config/history
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b46f35f63e874c63a2b2fa87d03fe2ae
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b46f35f63e874c63a2b2fa87d03fe2ae, duration=190ms, status=200
2025-08-08 17:32:50 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c7927cdf777c4d938bf168758e5d0518
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=206ms, rowsAffected=2
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c7927cdf777c4d938bf168758e5d0518
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=23ms, rowsAffected=2
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c7927cdf777c4d938bf168758e5d0518
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c7927cdf777c4d938bf168758e5d0518, duration=263ms, status=200
2025-08-08 17:32:50 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7a0fd456171d4852ad75ab5ad8f805da, requestId=req_0a5c6fa6, url=/config-center/api/enum/get_all_enum
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d2e1a1bfee7b4a25bf5bdffb125d8fd1, requestId=req_79c924f8, url=/config-center/api/config/page
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7a0fd456171d4852ad75ab5ad8f805da
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7a0fd456171d4852ad75ab5ad8f805da, duration=34ms, status=200
2025-08-08 17:33:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d2e1a1bfee7b4a25bf5bdffb125d8fd1
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=84ms, rowsAffected=4
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d2e1a1bfee7b4a25bf5bdffb125d8fd1
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=123ms, rowsAffected=4
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d2e1a1bfee7b4a25bf5bdffb125d8fd1
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d2e1a1bfee7b4a25bf5bdffb125d8fd1, duration=256ms, status=200
2025-08-08 17:33:59 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12/get_processing_ticket
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12/get_processing_ticket
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2135537a48c04ac98b51b26469d65a0e, requestId=req_5f4c681d, url=/config-center/api/config/12/get_processing_ticket
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2135537a48c04ac98b51b26469d65a0e
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2135537a48c04ac98b51b26469d65a0e, duration=32ms, status=404
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:34:01 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10/get_processing_ticket
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10/get_processing_ticket
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_82ec9997519d412b95e74bb69cf3cd4d, requestId=req_46e1e53f, url=/config-center/api/config/10/get_processing_ticket
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_82ec9997519d412b95e74bb69cf3cd4d
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_82ec9997519d412b95e74bb69cf3cd4d, duration=12ms, status=404
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:34:06 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1d83b7c22c3b4bb7a9daee2e171a839e, requestId=req_8f530e82, url=/config-center/api/config/14
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6d94da0049434d6abd82a2ffb199207b, requestId=req_4fe1a3e8, url=/config-center/api/config/history
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1d83b7c22c3b4bb7a9daee2e171a839e
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1d83b7c22c3b4bb7a9daee2e171a839e, duration=44ms, status=200
2025-08-08 17:34:19 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6d94da0049434d6abd82a2ffb199207b
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=113ms, rowsAffected=0
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6d94da0049434d6abd82a2ffb199207b
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=21ms, rowsAffected=0
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6d94da0049434d6abd82a2ffb199207b
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6d94da0049434d6abd82a2ffb199207b, duration=140ms, status=200
2025-08-08 17:34:19 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bdcb45bf8b134b55a11a13f74de6bf24, requestId=req_339ba0ac, url=/config-center/api/config/page
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1cd7ed7c989e454bb4fbe64e7317de97, requestId=req_843d04cb, url=/config-center/api/enum/get_all_enum
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1cd7ed7c989e454bb4fbe64e7317de97
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1cd7ed7c989e454bb4fbe64e7317de97, duration=2ms, status=200
2025-08-08 17:34:24 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bdcb45bf8b134b55a11a13f74de6bf24
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=64ms, rowsAffected=4
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bdcb45bf8b134b55a11a13f74de6bf24
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=18ms, rowsAffected=4
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bdcb45bf8b134b55a11a13f74de6bf24
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bdcb45bf8b134b55a11a13f74de6bf24, duration=89ms, status=200
2025-08-08 17:34:24 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14/get_processing_ticket
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14/get_processing_ticket
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2c48e8caaf4544d4b42d262bc55e17cb, requestId=req_697b8989, url=/config-center/api/config/14/get_processing_ticket
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2c48e8caaf4544d4b42d262bc55e17cb
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2c48e8caaf4544d4b42d262bc55e17cb, duration=5ms, status=404
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:34:26 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b8a3187efa7d4356a5ebf96417ff137b, requestId=req_fddfd6d8, url=/config-center/api/enum/get_all_enum
2025-08-08 17:34:29 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_431445ac671647e9af2520c7184a8282, requestId=req_70aa42a2, url=/config-center/api/config/page
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b8a3187efa7d4356a5ebf96417ff137b
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b8a3187efa7d4356a5ebf96417ff137b, duration=2ms, status=200
2025-08-08 17:34:29 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_431445ac671647e9af2520c7184a8282
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=75ms, rowsAffected=4
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_431445ac671647e9af2520c7184a8282
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=158ms, rowsAffected=4
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_431445ac671647e9af2520c7184a8282
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_431445ac671647e9af2520c7184a8282, duration=239ms, status=200
2025-08-08 17:34:30 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14/get_processing_ticket
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14/get_processing_ticket
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2e7e835c958546019b15ac35c3ff4ce2, requestId=req_4a5d6a69, url=/config-center/api/config/14/get_processing_ticket
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2e7e835c958546019b15ac35c3ff4ce2
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2e7e835c958546019b15ac35c3ff4ce2, duration=3ms, status=404
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:34:32 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad6798f28b1b49afbf001505876822cb, requestId=req_aba1b2ee, url=/config-center/api/enum/get_all_enum
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_50feac62b0ff4e33b84ebeb2c6e86421, requestId=req_e65be575, url=/config-center/api/config/page
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad6798f28b1b49afbf001505876822cb
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad6798f28b1b49afbf001505876822cb, duration=67ms, status=200
2025-08-08 17:37:30 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_50feac62b0ff4e33b84ebeb2c6e86421
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=177ms, rowsAffected=4
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_50feac62b0ff4e33b84ebeb2c6e86421
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=67ms, rowsAffected=4
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_50feac62b0ff4e33b84ebeb2c6e86421
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_50feac62b0ff4e33b84ebeb2c6e86421, duration=303ms, status=200
2025-08-08 17:37:30 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14/get_processing_ticket
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14/get_processing_ticket
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_907694c939cd43aca4614341a19815c5, requestId=req_cb351b5f, url=/config-center/api/config/14/get_processing_ticket
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_907694c939cd43aca4614341a19815c5
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_907694c939cd43aca4614341a19815c5, duration=11ms, status=404
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /error
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /error
2025-08-08 17:37:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a751e80c8ae0494eb71b3aaefcee199c, requestId=req_8e1facf0, url=/config-center/api/config/page
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b2986274bfec4065b39edbf374a2bd73, requestId=req_aa91b24c, url=/config-center/api/enum/get_all_enum
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b2986274bfec4065b39edbf374a2bd73
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b2986274bfec4065b39edbf374a2bd73, duration=3ms, status=200
2025-08-08 17:37:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a751e80c8ae0494eb71b3aaefcee199c
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=142ms, rowsAffected=4
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a751e80c8ae0494eb71b3aaefcee199c
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=46ms, rowsAffected=4
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a751e80c8ae0494eb71b3aaefcee199c
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a751e80c8ae0494eb71b3aaefcee199c, duration=201ms, status=200
2025-08-08 17:37:53 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/14/get_processing_ticket
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/14/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/14/get_processing_ticket
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f82846c1c63645ef8c90dd86770f4fbe, requestId=req_b81376de, url=/config-center/api/ticket/14/get_processing_ticket
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f82846c1c63645ef8c90dd86770f4fbe
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=77ms, rowsAffected=0
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f82846c1c63645ef8c90dd86770f4fbe
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f82846c1c63645ef8c90dd86770f4fbe, duration=151ms, status=200
2025-08-08 17:37:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/13/get_processing_ticket
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/13/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/13/get_processing_ticket
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_853e2be87fca45ce94920540545b1640, requestId=req_b98b9461, url=/config-center/api/ticket/13/get_processing_ticket
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_853e2be87fca45ce94920540545b1640
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=9ms, rowsAffected=0
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_853e2be87fca45ce94920540545b1640
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_853e2be87fca45ce94920540545b1640, duration=13ms, status=200
2025-08-08 17:38:02 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6e661b820afb4df09854d949adf68304, requestId=req_d71f801a, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6e661b820afb4df09854d949adf68304
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=14ms, rowsAffected=2
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6e661b820afb4df09854d949adf68304
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6e661b820afb4df09854d949adf68304, duration=30ms, status=200
2025-08-08 17:38:07 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4b97ff1981f14edba0707218b5922d50, requestId=req_8fb8b3f0, url=/config-center/api/ticket/59
2025-08-08 17:38:13 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4b97ff1981f14edba0707218b5922d50
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=7ms, rowsAffected=1
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4b97ff1981f14edba0707218b5922d50
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4b97ff1981f14edba0707218b5922d50, duration=59ms, status=200
2025-08-08 17:38:13 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e8fb410f783a4e85913928dae5e4b068, requestId=req_e131997f, url=/config-center/api/config/10
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e8fb410f783a4e85913928dae5e4b068
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e8fb410f783a4e85913928dae5e4b068, duration=57ms, status=200
2025-08-08 17:38:14 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_312a785bee0d41f2ba57440ca66c3ef5, requestId=req_8b9a6119, url=/config-center/api/enum/get_all_enum
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_312a785bee0d41f2ba57440ca66c3ef5
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_312a785bee0d41f2ba57440ca66c3ef5, duration=1ms, status=200
2025-08-08 17:38:15 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6e942b9f659345cdb2dfeb5090348518, requestId=req_23b0545a, url=/config-center/api/config/page
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6e942b9f659345cdb2dfeb5090348518
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=21ms, rowsAffected=4
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6e942b9f659345cdb2dfeb5090348518
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=4
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6e942b9f659345cdb2dfeb5090348518
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6e942b9f659345cdb2dfeb5090348518, duration=48ms, status=200
2025-08-08 17:38:15 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/12/get_processing_ticket
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/12/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/12/get_processing_ticket
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6e22f74f541f4b1f9dc39d70143a9a8a, requestId=req_900a51fd, url=/config-center/api/ticket/12/get_processing_ticket
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6e22f74f541f4b1f9dc39d70143a9a8a
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=8ms, rowsAffected=0
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6e22f74f541f4b1f9dc39d70143a9a8a
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6e22f74f541f4b1f9dc39d70143a9a8a, duration=13ms, status=200
2025-08-08 17:38:16 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6af0747f962c4f16bfbce1d62cdcb13b, requestId=req_363b852c, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6af0747f962c4f16bfbce1d62cdcb13b
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=5ms, rowsAffected=2
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6af0747f962c4f16bfbce1d62cdcb13b
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6af0747f962c4f16bfbce1d62cdcb13b, duration=7ms, status=200
2025-08-08 17:38:21 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:39:34 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:39:34 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9e5763bbf79547269dac42c406c73df0, requestId=req_e09358f1, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9e5763bbf79547269dac42c406c73df0
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=107ms, rowsAffected=2
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9e5763bbf79547269dac42c406c73df0
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9e5763bbf79547269dac42c406c73df0, duration=141ms, status=200
2025-08-08 17:39:35 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3a14dfe27a7e41b9b194552d7536cdbf, requestId=req_9be63432, url=/config-center/api/config/page
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fc5e430e9a454358bf0f473bf0d89b4c, requestId=req_a87dc93e, url=/config-center/api/enum/get_all_enum
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fc5e430e9a454358bf0f473bf0d89b4c
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fc5e430e9a454358bf0f473bf0d89b4c, duration=14ms, status=200
2025-08-08 17:40:43 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3a14dfe27a7e41b9b194552d7536cdbf
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=82ms, rowsAffected=4
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3a14dfe27a7e41b9b194552d7536cdbf
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=51ms, rowsAffected=4
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3a14dfe27a7e41b9b194552d7536cdbf
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3a14dfe27a7e41b9b194552d7536cdbf, duration=157ms, status=200
2025-08-08 17:40:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_396b8c34997147d8a28db24f733e75a4, requestId=req_0f870080, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_396b8c34997147d8a28db24f733e75a4
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=118ms, rowsAffected=2
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_396b8c34997147d8a28db24f733e75a4
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_396b8c34997147d8a28db24f733e75a4, duration=143ms, status=200
2025-08-08 17:40:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e367fa3c052b44048dae55d851aca492, requestId=req_6ec8fdc0, url=/config-center/api/config/page
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7bca56b6e6e04924aaba7ea9ee513cef, requestId=req_80de6b14, url=/config-center/api/enum/get_all_enum
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7bca56b6e6e04924aaba7ea9ee513cef
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7bca56b6e6e04924aaba7ea9ee513cef, duration=23ms, status=200
2025-08-08 17:41:41 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e367fa3c052b44048dae55d851aca492
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=22ms, rowsAffected=4
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e367fa3c052b44048dae55d851aca492
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=10ms, rowsAffected=4
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e367fa3c052b44048dae55d851aca492
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e367fa3c052b44048dae55d851aca492, duration=103ms, status=200
2025-08-08 17:41:41 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:41:42 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:41:42 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_259be8bb270f45078d36593eebc0132e, requestId=req_88534a31, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_259be8bb270f45078d36593eebc0132e
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=136ms, rowsAffected=2
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_259be8bb270f45078d36593eebc0132e
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_259be8bb270f45078d36593eebc0132e, duration=144ms, status=200
2025-08-08 17:41:43 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_015f722a12ec4cd582124973e73fa6af, requestId=req_0d146763, url=/config-center/api/config/page
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0525b41e327941fa98af7e0c94115845, requestId=req_d7265548, url=/config-center/api/enum/get_all_enum
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0525b41e327941fa98af7e0c94115845
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0525b41e327941fa98af7e0c94115845, duration=2ms, status=200
2025-08-08 17:42:04 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_015f722a12ec4cd582124973e73fa6af
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=40ms, rowsAffected=4
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_015f722a12ec4cd582124973e73fa6af
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=38ms, rowsAffected=4
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_015f722a12ec4cd582124973e73fa6af
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_015f722a12ec4cd582124973e73fa6af, duration=112ms, status=200
2025-08-08 17:42:04 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f1d3cf6056e0479e8002bef72dd57008, requestId=req_a6c94ac2, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f1d3cf6056e0479e8002bef72dd57008
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=11ms, rowsAffected=2
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f1d3cf6056e0479e8002bef72dd57008
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f1d3cf6056e0479e8002bef72dd57008, duration=15ms, status=200
2025-08-08 17:42:05 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8ce0fbf16c5c4ddfa7ace6330b2c6de7, requestId=req_03e5068e, url=/config-center/api/enum/get_all_enum
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_af04c6c44ca84dc497c20dff65ef6a2d, requestId=req_452d21a5, url=/config-center/api/config/page
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8ce0fbf16c5c4ddfa7ace6330b2c6de7
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8ce0fbf16c5c4ddfa7ace6330b2c6de7, duration=21ms, status=200
2025-08-08 17:43:02 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af04c6c44ca84dc497c20dff65ef6a2d
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=88ms, rowsAffected=4
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_af04c6c44ca84dc497c20dff65ef6a2d
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=44ms, rowsAffected=4
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_af04c6c44ca84dc497c20dff65ef6a2d
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_af04c6c44ca84dc497c20dff65ef6a2d, duration=157ms, status=200
2025-08-08 17:43:02 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:03 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:43:03 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a5cefc51b5f74e14a7229ce9239e9bfd, requestId=req_08880ea4, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a5cefc51b5f74e14a7229ce9239e9bfd
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=30ms, rowsAffected=2
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a5cefc51b5f74e14a7229ce9239e9bfd
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a5cefc51b5f74e14a7229ce9239e9bfd, duration=128ms, status=200
2025-08-08 17:43:04 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:43:32 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:43:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:32 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_08704465266c4a1887be69eed55e80c7, requestId=req_63f18487, url=/config-center/api/enum/get_all_enum
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_08704465266c4a1887be69eed55e80c7
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_08704465266c4a1887be69eed55e80c7, duration=28ms, status=200
2025-08-08 17:43:33 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b6ccb50e381c443a941024b05af3182d, requestId=req_fe7c92d1, url=/config-center/api/config/page
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b6ccb50e381c443a941024b05af3182d
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=54ms, rowsAffected=4
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b6ccb50e381c443a941024b05af3182d
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=117ms, rowsAffected=4
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b6ccb50e381c443a941024b05af3182d
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b6ccb50e381c443a941024b05af3182d, duration=192ms, status=200
2025-08-08 17:43:33 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_671a9b285df74473ad0ad3ac86f89534, requestId=req_d255badf, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_671a9b285df74473ad0ad3ac86f89534
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=26ms, rowsAffected=2
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_671a9b285df74473ad0ad3ac86f89534
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_671a9b285df74473ad0ad3ac86f89534, duration=34ms, status=200
2025-08-08 17:43:34 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:45:04 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:45:04 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:45:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:45:04 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3673fd10beca4713bdc5d1284608788a, requestId=req_06e9d07f, url=/config-center/api/enum/get_all_enum
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0e9cb90d3dda4b93a7e78215fe88b83f, requestId=req_c790c41f, url=/config-center/api/config/page
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3673fd10beca4713bdc5d1284608788a
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3673fd10beca4713bdc5d1284608788a, duration=21ms, status=200
2025-08-08 17:45:05 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e9cb90d3dda4b93a7e78215fe88b83f
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=112ms, rowsAffected=4
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e9cb90d3dda4b93a7e78215fe88b83f
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=37ms, rowsAffected=4
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0e9cb90d3dda4b93a7e78215fe88b83f
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0e9cb90d3dda4b93a7e78215fe88b83f, duration=179ms, status=200
2025-08-08 17:45:05 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:45:06 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad8a1ee5e3044693b16e590e79f9bf2d, requestId=req_77ae08f0, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:45:07 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad8a1ee5e3044693b16e590e79f9bf2d
2025-08-08 17:45:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=196ms, rowsAffected=2
2025-08-08 17:45:07 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad8a1ee5e3044693b16e590e79f9bf2d
2025-08-08 17:45:07 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad8a1ee5e3044693b16e590e79f9bf2d, duration=207ms, status=200
2025-08-08 17:45:07 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/10/get_processing_ticket
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/10/get_processing_ticket] with attributes [authenticated]
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/10/get_processing_ticket
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5bd2484b1d944780bf0c43a7426d9d4b, requestId=req_7d939f7e, url=/config-center/api/ticket/10/get_processing_ticket
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5bd2484b1d944780bf0c43a7426d9d4b
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=15ms, rowsAffected=2
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5bd2484b1d944780bf0c43a7426d9d4b
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5bd2484b1d944780bf0c43a7426d9d4b, duration=51ms, status=200
2025-08-08 17:46:14 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b59421bb67344006a6ee87d677609299, requestId=req_c75c0964, url=/config-center/api/ticket/page
2025-08-08 17:51:36 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b59421bb67344006a6ee87d677609299
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=39ms, rowsAffected=2
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b59421bb67344006a6ee87d677609299
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=48ms, rowsAffected=2
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b59421bb67344006a6ee87d677609299
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b59421bb67344006a6ee87d677609299, duration=138ms, status=200
2025-08-08 17:51:36 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_023a7d961ad74a4cb9494c7279c8657f, requestId=req_f5e7671b, url=/config-center/api/enum/get_all_enum
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_023a7d961ad74a4cb9494c7279c8657f
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_023a7d961ad74a4cb9494c7279c8657f, duration=3ms, status=200
2025-08-08 17:51:39 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_eb87c6eb373b44a48fa96b9fc82d05be, requestId=req_aa9e13ee, url=/config-center/api/config/page
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_eb87c6eb373b44a48fa96b9fc82d05be
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=23ms, rowsAffected=4
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_eb87c6eb373b44a48fa96b9fc82d05be
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=12ms, rowsAffected=4
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_eb87c6eb373b44a48fa96b9fc82d05be
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_eb87c6eb373b44a48fa96b9fc82d05be, duration=44ms, status=200
2025-08-08 17:51:39 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fa2f3e2cbb7e4d438e55d05e59e47ecc, requestId=req_8d7de7cf, url=/config-center/api/config/history
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fa2f3e2cbb7e4d438e55d05e59e47ecc
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=55ms, rowsAffected=0
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_df2edbf34b25424d86d36cdfb80cc782, requestId=req_a5d62a9f, url=/config-center/api/config/14
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fa2f3e2cbb7e4d438e55d05e59e47ecc
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=26ms, rowsAffected=0
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fa2f3e2cbb7e4d438e55d05e59e47ecc
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fa2f3e2cbb7e4d438e55d05e59e47ecc, duration=90ms, status=200
2025-08-08 17:51:42 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_df2edbf34b25424d86d36cdfb80cc782
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_df2edbf34b25424d86d36cdfb80cc782, duration=82ms, status=200
2025-08-08 17:51:42 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4c56a045ec25483094d1159cb442dac0, requestId=req_8ca386a0, url=/config-center/api/enum/get_all_enum
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_605342238fcf4893bcaa303f4521e039, requestId=req_113b5fb8, url=/config-center/api/config/page
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4c56a045ec25483094d1159cb442dac0
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4c56a045ec25483094d1159cb442dac0, duration=2ms, status=200
2025-08-08 17:51:48 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_605342238fcf4893bcaa303f4521e039
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=45ms, rowsAffected=4
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_605342238fcf4893bcaa303f4521e039
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=14ms, rowsAffected=4
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_605342238fcf4893bcaa303f4521e039
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_605342238fcf4893bcaa303f4521e039, duration=66ms, status=200
2025-08-08 17:51:48 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f5f97709b7964f85a326531d4ad0910a, requestId=req_feac24d0, url=/config-center/api/config/history
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_50a50281c59a4191808c1b37936c525c, requestId=req_899c0e84, url=/config-center/api/config/14
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_50a50281c59a4191808c1b37936c525c
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_50a50281c59a4191808c1b37936c525c, duration=14ms, status=200
2025-08-08 17:51:53 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f5f97709b7964f85a326531d4ad0910a
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=65ms, rowsAffected=0
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f5f97709b7964f85a326531d4ad0910a
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=0
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f5f97709b7964f85a326531d4ad0910a
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f5f97709b7964f85a326531d4ad0910a, duration=74ms, status=200
2025-08-08 17:51:53 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2754a1f320e844fe926c522704cecafc, requestId=req_18625c37, url=/config-center/api/enum/get_all_enum
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2754a1f320e844fe926c522704cecafc
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2754a1f320e844fe926c522704cecafc, duration=5ms, status=200
2025-08-08 17:51:55 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_fd37cd363e854991992ae70bb79a70aa, requestId=req_44ea479c, url=/config-center/api/config/page
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fd37cd363e854991992ae70bb79a70aa
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=27ms, rowsAffected=4
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_fd37cd363e854991992ae70bb79a70aa
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=4
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_fd37cd363e854991992ae70bb79a70aa
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_fd37cd363e854991992ae70bb79a70aa, duration=53ms, status=200
2025-08-08 17:51:55 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:52:44 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:52:44 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:52:44 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:52:44 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:52:45 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:52:45 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:52:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_50683147d93643d99dd8d350e0a4c8cb, requestId=req_429d435e, url=/config-center/api/config/14
2025-08-08 17:52:45 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9218b92f89a642999dea411529608e9c, requestId=req_f54f1d07, url=/config-center/api/config/history
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_50683147d93643d99dd8d350e0a4c8cb
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_50683147d93643d99dd8d350e0a4c8cb, duration=79ms, status=200
2025-08-08 17:52:45 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9218b92f89a642999dea411529608e9c
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=329ms, rowsAffected=0
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9218b92f89a642999dea411529608e9c
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=216ms, rowsAffected=0
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9218b92f89a642999dea411529608e9c
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9218b92f89a642999dea411529608e9c, duration=561ms, status=200
2025-08-08 17:52:46 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ee9a021b8d9a4e3085b8f76c9cb136ac, requestId=req_9d9c8922, url=/config-center/api/config/history
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dcf9f24e70c046c7af6ce3922b1e33bd, requestId=req_7e1bdd2d, url=/config-center/api/config/14
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dcf9f24e70c046c7af6ce3922b1e33bd
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dcf9f24e70c046c7af6ce3922b1e33bd, duration=17ms, status=200
2025-08-08 17:53:16 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ee9a021b8d9a4e3085b8f76c9cb136ac
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=106ms, rowsAffected=0
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ee9a021b8d9a4e3085b8f76c9cb136ac
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=12ms, rowsAffected=0
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ee9a021b8d9a4e3085b8f76c9cb136ac
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ee9a021b8d9a4e3085b8f76c9cb136ac, duration=131ms, status=200
2025-08-08 17:53:16 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8b594ed500a341c7bfcae15f13349e8f, requestId=req_3b0ba290, url=/config-center/api/config/history
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_215654d73bd94bd0bacd0a979d638497, requestId=req_371bba5e, url=/config-center/api/config/14
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_215654d73bd94bd0bacd0a979d638497
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_215654d73bd94bd0bacd0a979d638497, duration=31ms, status=200
2025-08-08 17:53:22 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8b594ed500a341c7bfcae15f13349e8f
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=77ms, rowsAffected=0
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8b594ed500a341c7bfcae15f13349e8f
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=84ms, rowsAffected=0
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8b594ed500a341c7bfcae15f13349e8f
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8b594ed500a341c7bfcae15f13349e8f, duration=433ms, status=200
2025-08-08 17:53:22 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:55:11 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 17:55:11 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd011f
2025-08-08 17:55:11 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd011f closed
2025-08-08 17:55:11 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 17:55:11 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 17:55:12 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 17:55:35 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 34316 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 17:55:35 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 17:55:35 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 17:55:37 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-08-08 17:55:40 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 17:55:40 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 17:55:40 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 17:55:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 17:55:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4904 ms
2025-08-08 17:55:40 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 17:55:42 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 17:55:42 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 17:55:43 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 17:55:43 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=37MB
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=96MB
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@36453773
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 17:55:43 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 17:55:43 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 17:55:43 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 17:55:43 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 17:55:43 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:63480, server: localhost/127.0.0.1:2181
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0120, negotiated timeout = 40000
2025-08-08 17:55:43 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 17:55:43 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 17:55:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:55:43 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:55:43 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 17:55:44 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 17:55:44 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11fa11b2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29ddaa8e, org.springframework.security.web.context.SecurityContextPersistenceFilter@1104ad6a, org.springframework.security.web.header.HeaderWriterFilter@4844e24b, org.springframework.web.filter.CorsFilter@4c678a1f, org.springframework.security.web.authentication.logout.LogoutFilter@48d24d63, com.example.configcenter.security.JwtAuthenticationFilter@651cedfb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73e63b4d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61c0fb12, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@217009bd, org.springframework.security.web.session.SessionManagementFilter@7db70494, org.springframework.security.web.access.ExceptionTranslationFilter@5cff6d1d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61c4fc34]
2025-08-08 17:55:44 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 17:55:46 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 17:55:46 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 17:55:46 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:55:46 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:55:46 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754646946467
2025-08-08 17:55:46 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 17:55:46 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:55:46 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:55:46 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:55:46 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 17:55:47 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 12.706 seconds (JVM running for 17.017)
2025-08-08 17:55:53 [http-nio-9090-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 17:55:53 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 17:55:53 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:55:53 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4202817d60b74b52b8c5bf5d720246ef, requestId=req_0d330ce2, url=/config-center/api/config/history
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:55:53 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b9c863c978d24385aa273e684d914878, requestId=req_18605dba, url=/config-center/api/config/14
2025-08-08 17:55:55 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 17:55:55 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 17:55:55 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:55:55 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:55:55 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754646955843
2025-08-08 17:55:55 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:55:55 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:55:55 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:55:55 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 17:55:56 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b9c863c978d24385aa273e684d914878
2025-08-08 17:55:56 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4202817d60b74b52b8c5bf5d720246ef
2025-08-08 17:55:56 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=331ms, rowsAffected=1
2025-08-08 17:55:56 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=608ms, rowsAffected=0
2025-08-08 17:55:56 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4202817d60b74b52b8c5bf5d720246ef
2025-08-08 17:55:56 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=680ms, rowsAffected=0
2025-08-08 17:55:58 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:55:58 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:55:58 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:55:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4202817d60b74b52b8c5bf5d720246ef
2025-08-08 17:55:58 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b9c863c978d24385aa273e684d914878
2025-08-08 17:55:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b9c863c978d24385aa273e684d914878, duration=2540ms, status=200
2025-08-08 17:55:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4202817d60b74b52b8c5bf5d720246ef, duration=2774ms, status=200
2025-08-08 17:55:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:55:58 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:58:13 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0120 closed
2025-08-08 17:58:14 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0120
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 17:58:14 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 17:58:20 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 34680 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 17:58:20 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 17:58:20 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 17:58:23 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-08-08 17:58:25 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 17:58:25 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 17:58:25 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 17:58:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 17:58:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5226 ms
2025-08-08 17:58:26 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 17:58:27 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 17:58:27 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 17:58:28 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 17:58:28 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=67MB
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=116MB
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@4ec37a42
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 17:58:28 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 17:58:28 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 17:58:28 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 17:58:28 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 17:58:28 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 17:58:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 17:58:29 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 17:58:29 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 17:58:29 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:64316, server: localhost/127.0.0.1:2181
2025-08-08 17:58:29 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0121, negotiated timeout = 40000
2025-08-08 17:58:29 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 17:58:29 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 17:58:29 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:58:29 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 17:58:29 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 17:58:29 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@729d1428, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@115924ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@bddac1c, org.springframework.security.web.header.HeaderWriterFilter@67683210, org.springframework.web.filter.CorsFilter@1728d307, org.springframework.security.web.authentication.logout.LogoutFilter@315365ef, com.example.configcenter.security.JwtAuthenticationFilter@72e36677, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41831611, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d10f182, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@252d2ac0, org.springframework.security.web.session.SessionManagementFilter@2e27325d, org.springframework.security.web.access.ExceptionTranslationFilter@1ab717f3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d49fe37]
2025-08-08 17:58:29 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 17:58:31 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 17:58:31 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 17:58:31 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:58:31 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:58:31 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754647111344
2025-08-08 17:58:31 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 17:58:31 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 17:58:31 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 17:58:31 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 17:58:31 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 17:58:31 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 12.39 seconds (JVM running for 13.731)
2025-08-08 17:58:32 [RMI TCP Connection(1)-10.53.41.63] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 17:58:32 [RMI TCP Connection(1)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 17:58:32 [RMI TCP Connection(1)-10.53.41.63] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 17:58:32 [RMI TCP Connection(2)-10.53.41.63] WARN  o.s.b.a.e.ElasticsearchRestClientHealthIndicator - Elasticsearch health check failed
java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator.doHealthCheck(ElasticsearchRestClientHealthIndicator.java:60)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:94)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:88)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2025-08-08 17:58:39 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 17:58:39 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:58:39 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:58:39 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ebcf5e55d92b4701be6613216518f605, requestId=req_984fff20, url=/config-center/api/config/history
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_752a1cffd2d74a19854443826c1aba1d, requestId=req_d6ccd145, url=/config-center/api/config/14
2025-08-08 17:58:40 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 17:58:40 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 17:58:40 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 17:58:40 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 17:58:40 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754647120795
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ebcf5e55d92b4701be6613216518f605
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_752a1cffd2d74a19854443826c1aba1d
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=115ms, rowsAffected=0
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=98ms, rowsAffected=1
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:58:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_752a1cffd2d74a19854443826c1aba1d
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_752a1cffd2d74a19854443826c1aba1d, duration=746ms, status=200
2025-08-08 17:58:40 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ebcf5e55d92b4701be6613216518f605
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=121ms, rowsAffected=0
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ebcf5e55d92b4701be6613216518f605
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ebcf5e55d92b4701be6613216518f605, duration=802ms, status=200
2025-08-08 17:58:40 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:00:31 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0121 closed
2025-08-08 18:00:31 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0121
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 18:00:31 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 18:00:47 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 35011 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 18:00:47 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 18:00:47 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 18:00:51 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-08-08 18:00:56 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 18:00:56 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 18:00:56 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 18:00:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 18:00:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8814 ms
2025-08-08 18:00:57 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 18:01:01 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 18:01:02 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 18:01:03 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 18:01:03 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=56MB
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=106MB
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@6c56fff
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 18:01:03 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 18:01:03 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 18:01:03 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:01:03 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 18:01:03 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 18:01:03 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:01:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 18:01:04 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:01:04 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 18:01:05 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/[0:0:0:0:0:0:0:1]:2181.
2025-08-08 18:01:05 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:01:05 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x0 for server localhost/[0:0:0:0:0:0:0:1]:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1283)
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 18:01:06 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 18:01:06 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c9168c3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ac0fdc7, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b160208, org.springframework.security.web.header.HeaderWriterFilter@7db70494, org.springframework.web.filter.CorsFilter@571903ff, org.springframework.security.web.authentication.logout.LogoutFilter@28521ed5, com.example.configcenter.security.JwtAuthenticationFilter@4ba13fed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16a15261, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68cc6319, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@689ea211, org.springframework.security.web.session.SessionManagementFilter@2faae7f6, org.springframework.security.web.access.ExceptionTranslationFilter@1c41931a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54cce500]
2025-08-08 18:01:06 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 18:01:06 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:01:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:65276, server: localhost/127.0.0.1:2181
2025-08-08 18:01:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0122, negotiated timeout = 40000
2025-08-08 18:01:07 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 18:01:07 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 18:01:07 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:01:07 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:01:07 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 18:01:10 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 18:01:10 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 18:01:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 18:01:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 18:01:11 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754647271278
2025-08-08 18:01:12 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 18:01:12 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 18:01:12 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 18:01:12 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 18:01:12 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 18:01:12 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 24.997 seconds (JVM running for 27.291)
2025-08-08 18:01:15 [http-nio-9090-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 18:01:15 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 18:01:15 [http-nio-9090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8ad973db437547fbb73cc3f5e57f1b68, requestId=req_20ee80fc, url=/config-center/api/config/history
2025-08-08 18:01:15 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_df6e8b5e0d59483584205de748476b07, requestId=req_0004e999, url=/config-center/api/config/14
2025-08-08 18:01:16 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 18:01:16 [http-nio-9090-exec-2] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 18:01:16 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 18:01:16 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 18:01:16 [http-nio-9090-exec-2] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754647276468
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ad973db437547fbb73cc3f5e57f1b68
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=85ms, rowsAffected=0
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8ad973db437547fbb73cc3f5e57f1b68
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=11ms, rowsAffected=0
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:01:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8ad973db437547fbb73cc3f5e57f1b68
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8ad973db437547fbb73cc3f5e57f1b68, duration=751ms, status=200
2025-08-08 18:01:16 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:16 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_df6e8b5e0d59483584205de748476b07
2025-08-08 18:01:16 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=117ms, rowsAffected=1
2025-08-08 18:01:16 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_df6e8b5e0d59483584205de748476b07
2025-08-08 18:01:16 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_df6e8b5e0d59483584205de748476b07, duration=924ms, status=200
2025-08-08 18:01:16 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_88c5cf2c36be45bb922d72e9dbf691f8, requestId=req_26a9ba5d, url=/config-center/api/config/14
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d767586605d141a59afaf6bdda42cbcd, requestId=req_1e020499, url=/config-center/api/config/history
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d767586605d141a59afaf6bdda42cbcd
2025-08-08 18:01:30 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=76ms, rowsAffected=0
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_88c5cf2c36be45bb922d72e9dbf691f8
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_88c5cf2c36be45bb922d72e9dbf691f8, duration=116ms, status=200
2025-08-08 18:01:30 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:31 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d767586605d141a59afaf6bdda42cbcd
2025-08-08 18:01:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=98ms, rowsAffected=0
2025-08-08 18:01:31 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d767586605d141a59afaf6bdda42cbcd
2025-08-08 18:01:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d767586605d141a59afaf6bdda42cbcd, duration=183ms, status=200
2025-08-08 18:01:31 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7083ff32ab5242208ded909acde3bcb2, requestId=req_f58d2fd8, url=/config-center/api/config/history
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_eb06abe2efbc4deaac62ed9990d3a387, requestId=req_70cb8fd3, url=/config-center/api/config/14
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_eb06abe2efbc4deaac62ed9990d3a387
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_eb06abe2efbc4deaac62ed9990d3a387, duration=12ms, status=200
2025-08-08 18:01:32 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7083ff32ab5242208ded909acde3bcb2
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=145ms, rowsAffected=0
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7083ff32ab5242208ded909acde3bcb2
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7083ff32ab5242208ded909acde3bcb2
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7083ff32ab5242208ded909acde3bcb2, duration=157ms, status=200
2025-08-08 18:01:32 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:01:33 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:33 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:33 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0f5121240e424df2b9d0eda4847f2a01, requestId=req_59156796, url=/config-center/api/config/page
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a7d5e3a4af73417d958cebda706c88bf, requestId=req_0ebff62a, url=/config-center/api/enum/get_all_enum
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a7d5e3a4af73417d958cebda706c88bf
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a7d5e3a4af73417d958cebda706c88bf, duration=26ms, status=200
2025-08-08 18:01:34 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0f5121240e424df2b9d0eda4847f2a01
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=515ms, rowsAffected=4
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0f5121240e424df2b9d0eda4847f2a01
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=36ms, rowsAffected=4
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0f5121240e424df2b9d0eda4847f2a01
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0f5121240e424df2b9d0eda4847f2a01, duration=756ms, status=200
2025-08-08 18:01:34 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/13
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/13] with attributes [authenticated]
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=13&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/13
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0fd49c96ade44d919e821b1817e0c505, requestId=req_1cf2a2d6, url=/config-center/api/config/13
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1ba5f3682d7c4070b6b5ec990ecd2987, requestId=req_a536c142, url=/config-center/api/config/history
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1ba5f3682d7c4070b6b5ec990ecd2987
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=19ms, rowsAffected=0
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fd49c96ade44d919e821b1817e0c505
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=11ms, rowsAffected=1
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0fd49c96ade44d919e821b1817e0c505
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1ba5f3682d7c4070b6b5ec990ecd2987
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=24ms, rowsAffected=0
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0fd49c96ade44d919e821b1817e0c505, duration=47ms, status=200
2025-08-08 18:01:39 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1ba5f3682d7c4070b6b5ec990ecd2987
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1ba5f3682d7c4070b6b5ec990ecd2987, duration=51ms, status=200
2025-08-08 18:01:39 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/13
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=13&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d6d15a8e4ecb44b4b240f4042dc0bca7, requestId=req_3e9fc50e, url=/config-center/api/config/history
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/13] with attributes [authenticated]
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/13
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dcf940f1b8cb44e6bf0c786c656a441c, requestId=req_0b65673d, url=/config-center/api/config/13
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d6d15a8e4ecb44b4b240f4042dc0bca7
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=14ms, rowsAffected=0
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dcf940f1b8cb44e6bf0c786c656a441c
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dcf940f1b8cb44e6bf0c786c656a441c, duration=19ms, status=200
2025-08-08 18:01:41 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d6d15a8e4ecb44b4b240f4042dc0bca7
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=18ms, rowsAffected=0
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d6d15a8e4ecb44b4b240f4042dc0bca7
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d6d15a8e4ecb44b4b240f4042dc0bca7, duration=43ms, status=200
2025-08-08 18:01:41 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_10829d06a0f54a779710d33e822bfeef, requestId=req_53b1f5be, url=/config-center/api/enum/get_all_enum
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_10829d06a0f54a779710d33e822bfeef
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_10829d06a0f54a779710d33e822bfeef, duration=3ms, status=200
2025-08-08 18:01:49 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_18cc3490216745a5b1abcd0b46c93911, requestId=req_ba643faf, url=/config-center/api/config/page
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_18cc3490216745a5b1abcd0b46c93911
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=7ms, rowsAffected=4
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_18cc3490216745a5b1abcd0b46c93911
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=6ms, rowsAffected=4
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_18cc3490216745a5b1abcd0b46c93911
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_18cc3490216745a5b1abcd0b46c93911, duration=17ms, status=200
2025-08-08 18:01:49 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c59f0b4d2d3049b39baa6e2451ab341f, requestId=req_fee505d5, url=/config-center/api/config/12
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_190538f1e6ad4371bc44ac05864c3ac5, requestId=req_b13e2635, url=/config-center/api/config/history
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c59f0b4d2d3049b39baa6e2451ab341f
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=5ms, rowsAffected=1
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_190538f1e6ad4371bc44ac05864c3ac5
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=5ms, rowsAffected=0
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_190538f1e6ad4371bc44ac05864c3ac5
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=3ms, rowsAffected=0
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_190538f1e6ad4371bc44ac05864c3ac5
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_190538f1e6ad4371bc44ac05864c3ac5, duration=12ms, status=200
2025-08-08 18:01:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c59f0b4d2d3049b39baa6e2451ab341f
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c59f0b4d2d3049b39baa6e2451ab341f, duration=34ms, status=200
2025-08-08 18:01:50 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:16 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 18:03:16 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:03:16 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:16 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e3d8a7e2fbb7424290a49108c115f906, requestId=req_09950f0a, url=/config-center/api/config/12
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c9488f8c47e04b4088235fd80b48840b, requestId=req_254dc4ab, url=/config-center/api/config/history
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c9488f8c47e04b4088235fd80b48840b
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=18ms, rowsAffected=0
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e3d8a7e2fbb7424290a49108c115f906
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e3d8a7e2fbb7424290a49108c115f906, duration=52ms, status=200
2025-08-08 18:03:17 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c9488f8c47e04b4088235fd80b48840b
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=84ms, rowsAffected=0
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c9488f8c47e04b4088235fd80b48840b
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c9488f8c47e04b4088235fd80b48840b, duration=131ms, status=200
2025-08-08 18:03:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/12
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/12] with attributes [authenticated]
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/12
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a6df8efd98364b2eb6d6911db18ee37b, requestId=req_9cd933e1, url=/config-center/api/config/12
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=12&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=12&pageNum=1&pageSize=10
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9c3d7ea105dc44a7a205a717d8ab7a47, requestId=req_76d3c59a, url=/config-center/api/config/history
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9c3d7ea105dc44a7a205a717d8ab7a47
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=9ms, rowsAffected=0
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a6df8efd98364b2eb6d6911db18ee37b
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a6df8efd98364b2eb6d6911db18ee37b, duration=31ms, status=200
2025-08-08 18:03:21 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9c3d7ea105dc44a7a205a717d8ab7a47
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=39ms, rowsAffected=0
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9c3d7ea105dc44a7a205a717d8ab7a47
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9c3d7ea105dc44a7a205a717d8ab7a47, duration=55ms, status=200
2025-08-08 18:03:21 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cf63070546bc434e988391d8237fab80, requestId=req_8e86562b, url=/config-center/api/enum/get_all_enum
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cf63070546bc434e988391d8237fab80
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cf63070546bc434e988391d8237fab80, duration=6ms, status=200
2025-08-08 18:03:27 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0110fc0f68a84fb2a4d1d56784c8dba5, requestId=req_f06ebac2, url=/config-center/api/config/page
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0110fc0f68a84fb2a4d1d56784c8dba5
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=39ms, rowsAffected=4
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0110fc0f68a84fb2a4d1d56784c8dba5
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=7ms, rowsAffected=4
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0110fc0f68a84fb2a4d1d56784c8dba5
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0110fc0f68a84fb2a4d1d56784c8dba5, duration=57ms, status=200
2025-08-08 18:03:27 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1d401a5068a446a79e39923fa9916054, requestId=req_e16a3568, url=/config-center/api/config/14
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_84271852cbb04af088d1213264272ecc, requestId=req_fef6f09b, url=/config-center/api/config/history
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1d401a5068a446a79e39923fa9916054
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1d401a5068a446a79e39923fa9916054, duration=12ms, status=200
2025-08-08 18:03:29 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_84271852cbb04af088d1213264272ecc
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=28ms, rowsAffected=0
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_84271852cbb04af088d1213264272ecc
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_84271852cbb04af088d1213264272ecc
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_84271852cbb04af088d1213264272ecc, duration=38ms, status=200
2025-08-08 18:03:29 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:45 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:04:45 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:04:45 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:45 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f10c9612fe0e4878a8291ef1b1482cea, requestId=req_4c20a871, url=/config-center/api/config/history
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b72155a67e014b829297aed51dbc17e2, requestId=req_3299d1d9, url=/config-center/api/config/14
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b72155a67e014b829297aed51dbc17e2
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b72155a67e014b829297aed51dbc17e2, duration=121ms, status=200
2025-08-08 18:04:46 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f10c9612fe0e4878a8291ef1b1482cea
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=322ms, rowsAffected=0
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f10c9612fe0e4878a8291ef1b1482cea
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=33ms, rowsAffected=0
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f10c9612fe0e4878a8291ef1b1482cea
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f10c9612fe0e4878a8291ef1b1482cea, duration=395ms, status=200
2025-08-08 18:04:46 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2aa37bfe46834b0cb957924be9effbdd, requestId=req_a4f424f1, url=/config-center/api/config/page
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_565c1054caa14d6dacd2eda4c096b38d, requestId=req_c6eccc73, url=/config-center/api/enum/get_all_enum
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_565c1054caa14d6dacd2eda4c096b38d
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_565c1054caa14d6dacd2eda4c096b38d, duration=7ms, status=200
2025-08-08 18:04:51 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2aa37bfe46834b0cb957924be9effbdd
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=55ms, rowsAffected=4
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2aa37bfe46834b0cb957924be9effbdd
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=71ms, rowsAffected=4
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2aa37bfe46834b0cb957924be9effbdd
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2aa37bfe46834b0cb957924be9effbdd, duration=138ms, status=200
2025-08-08 18:04:51 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f5fe14e0da8246c8bab3da8a3d9e3bf4, requestId=req_6a8912e8, url=/config-center/api/ticket/page
2025-08-08 18:04:53 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f5fe14e0da8246c8bab3da8a3d9e3bf4
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=24ms, rowsAffected=2
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f5fe14e0da8246c8bab3da8a3d9e3bf4
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=6ms, rowsAffected=2
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f5fe14e0da8246c8bab3da8a3d9e3bf4
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f5fe14e0da8246c8bab3da8a3d9e3bf4, duration=272ms, status=200
2025-08-08 18:04:53 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cb3ed2f4c47849ea813d7cb2ced9e8f7, requestId=req_83d99a3e, url=/config-center/api/enum/get_all_enum
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cb3ed2f4c47849ea813d7cb2ced9e8f7
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cb3ed2f4c47849ea813d7cb2ced9e8f7, duration=2ms, status=200
2025-08-08 18:04:55 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_525abc823fba4794aeb352e6e6102380, requestId=req_80b36955, url=/config-center/api/config/page
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_525abc823fba4794aeb352e6e6102380
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=7ms, rowsAffected=4
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_525abc823fba4794aeb352e6e6102380
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=27ms, rowsAffected=4
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_525abc823fba4794aeb352e6e6102380
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_525abc823fba4794aeb352e6e6102380, duration=55ms, status=200
2025-08-08 18:04:55 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d58c1946cbcf411a99d2ced8cd9a50e5, requestId=req_e513c51e, url=/config-center/api/config/14
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d58c1946cbcf411a99d2ced8cd9a50e5
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d58c1946cbcf411a99d2ced8cd9a50e5, duration=21ms, status=200
2025-08-08 18:04:58 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bc3459326f594721abe0f92148cd8ceb, requestId=req_04ebcdec, url=/config-center/api/config/history
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc3459326f594721abe0f92148cd8ceb
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=4ms, rowsAffected=0
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bc3459326f594721abe0f92148cd8ceb
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bc3459326f594721abe0f92148cd8ceb
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bc3459326f594721abe0f92148cd8ceb, duration=16ms, status=200
2025-08-08 18:04:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7ab8fd60bd8c4bdcb37fec110a264bef, requestId=req_c155f2fb, url=/config-center/api/config/page
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8290e1e0a90c4cf9bc04dde6b14baac9, requestId=req_ad4f35c5, url=/config-center/api/enum/get_all_enum
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8290e1e0a90c4cf9bc04dde6b14baac9
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8290e1e0a90c4cf9bc04dde6b14baac9, duration=1ms, status=200
2025-08-08 18:05:00 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7ab8fd60bd8c4bdcb37fec110a264bef
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=22ms, rowsAffected=4
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7ab8fd60bd8c4bdcb37fec110a264bef
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=3ms, rowsAffected=4
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7ab8fd60bd8c4bdcb37fec110a264bef
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7ab8fd60bd8c4bdcb37fec110a264bef, duration=28ms, status=200
2025-08-08 18:05:00 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c9df54e634fa46479ec02f056dd8f29b, requestId=req_3453b092, url=/config-center/api/ticket/page
2025-08-08 18:05:02 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c9df54e634fa46479ec02f056dd8f29b
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=10ms, rowsAffected=2
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c9df54e634fa46479ec02f056dd8f29b
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=18ms, rowsAffected=2
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c9df54e634fa46479ec02f056dd8f29b
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c9df54e634fa46479ec02f056dd8f29b, duration=37ms, status=200
2025-08-08 18:05:02 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5b0c6f03d91d427c8076473f08275a24, requestId=req_1213ae3b, url=/config-center/api/ticket/page
2025-08-08 18:06:16 [http-nio-9090-exec-7] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:06:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:06:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:06:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5b0c6f03d91d427c8076473f08275a24
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=70ms, rowsAffected=2
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_5b0c6f03d91d427c8076473f08275a24
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=14ms, rowsAffected=2
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5b0c6f03d91d427c8076473f08275a24
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5b0c6f03d91d427c8076473f08275a24, duration=158ms, status=200
2025-08-08 18:06:16 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:17 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 18:06:17 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_878ba8e7e3404d7db84da13f78067361, requestId=req_16ac34bd, url=/config-center/api/ticket/59
2025-08-08 18:06:18 [http-nio-9090-exec-8] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_878ba8e7e3404d7db84da13f78067361
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=124ms, rowsAffected=1
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_878ba8e7e3404d7db84da13f78067361
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_878ba8e7e3404d7db84da13f78067361, duration=356ms, status=200
2025-08-08 18:06:18 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_987e317f9f414a32a0808aa6b3c203ed, requestId=req_53a0883d, url=/config-center/api/config/10
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_987e317f9f414a32a0808aa6b3c203ed
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=116ms, rowsAffected=1
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_987e317f9f414a32a0808aa6b3c203ed
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_987e317f9f414a32a0808aa6b3c203ed, duration=364ms, status=200
2025-08-08 18:06:18 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d938b95d88eb489d8d6f9991dbd80d6c, requestId=req_66dd5b4b, url=/config-center/api/enum/get_all_enum
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d938b95d88eb489d8d6f9991dbd80d6c
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d938b95d88eb489d8d6f9991dbd80d6c, duration=1ms, status=200
2025-08-08 18:06:22 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_75a556f2436f4b83a96ebb55d405e2ee, requestId=req_077fdd1e, url=/config-center/api/config/page
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_75a556f2436f4b83a96ebb55d405e2ee
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=13ms, rowsAffected=4
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_75a556f2436f4b83a96ebb55d405e2ee
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=1ms, rowsAffected=4
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_75a556f2436f4b83a96ebb55d405e2ee
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_75a556f2436f4b83a96ebb55d405e2ee, duration=25ms, status=200
2025-08-08 18:06:22 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:23 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7d5477baea5f435a87e978f1ff3059ba, requestId=req_201e7cf6, url=/config-center/api/config/14
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:06:23 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8aa2f03a18f04a359676b4c9ede7af54, requestId=req_19a29a18, url=/config-center/api/config/history
2025-08-08 18:06:24 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7d5477baea5f435a87e978f1ff3059ba
2025-08-08 18:06:24 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7d5477baea5f435a87e978f1ff3059ba, duration=24ms, status=200
2025-08-08 18:06:24 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8aa2f03a18f04a359676b4c9ede7af54
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=43ms, rowsAffected=0
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8aa2f03a18f04a359676b4c9ede7af54
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8aa2f03a18f04a359676b4c9ede7af54
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8aa2f03a18f04a359676b4c9ede7af54, duration=54ms, status=200
2025-08-08 18:06:24 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_66d83b44fb8345e7b91599dd33e77921, requestId=req_09a18aee, url=/config-center/api/enum/get_all_enum
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7a6528d82e454a0181c44d3114364909, requestId=req_c811a211, url=/config-center/api/config/page
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_66d83b44fb8345e7b91599dd33e77921
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_66d83b44fb8345e7b91599dd33e77921, duration=19ms, status=200
2025-08-08 18:08:19 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7a6528d82e454a0181c44d3114364909
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=203ms, rowsAffected=4
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7a6528d82e454a0181c44d3114364909
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=119ms, rowsAffected=4
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7a6528d82e454a0181c44d3114364909
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7a6528d82e454a0181c44d3114364909, duration=394ms, status=200
2025-08-08 18:08:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:10:10 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:10:10 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:10:10 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:10:10 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_92151cd737e14e449da9a02196084b26, requestId=req_6149e7fd, url=/config-center/api/enum/get_all_enum
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cb8d3b7dcc0440abbaa6a1e5720a6e25, requestId=req_3c2e3a8a, url=/config-center/api/config/page
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_92151cd737e14e449da9a02196084b26
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_92151cd737e14e449da9a02196084b26, duration=25ms, status=200
2025-08-08 18:10:11 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cb8d3b7dcc0440abbaa6a1e5720a6e25
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=121ms, rowsAffected=4
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_cb8d3b7dcc0440abbaa6a1e5720a6e25
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=78ms, rowsAffected=4
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cb8d3b7dcc0440abbaa6a1e5720a6e25
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cb8d3b7dcc0440abbaa6a1e5720a6e25, duration=300ms, status=200
2025-08-08 18:10:11 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:10:41 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7fb8a89f1b4448a7ab17e532c227c871, requestId=req_1116ff58, url=/config-center/api/enum/get_all_enum
2025-08-08 18:11:08 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ab8b96db000f4e81a30a8f398ab8a98c, requestId=req_91341008, url=/config-center/api/config/page
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7fb8a89f1b4448a7ab17e532c227c871
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7fb8a89f1b4448a7ab17e532c227c871, duration=32ms, status=200
2025-08-08 18:11:08 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ab8b96db000f4e81a30a8f398ab8a98c
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=381ms, rowsAffected=4
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ab8b96db000f4e81a30a8f398ab8a98c
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=47ms, rowsAffected=4
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ab8b96db000f4e81a30a8f398ab8a98c
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ab8b96db000f4e81a30a8f398ab8a98c, duration=465ms, status=200
2025-08-08 18:11:09 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:11:58 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:11:58 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:11:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:11:58 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_78daba1f9ad24f979eb8d9f9e5f36080, requestId=req_73a8e21f, url=/config-center/api/enum/get_all_enum
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_78daba1f9ad24f979eb8d9f9e5f36080
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_78daba1f9ad24f979eb8d9f9e5f36080, duration=19ms, status=200
2025-08-08 18:11:59 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0277d84b61bc46eb8e7d59250b69c537, requestId=req_d8289888, url=/config-center/api/config/page
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0277d84b61bc46eb8e7d59250b69c537
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=430ms, rowsAffected=4
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0277d84b61bc46eb8e7d59250b69c537
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=23ms, rowsAffected=4
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0277d84b61bc46eb8e7d59250b69c537
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0277d84b61bc46eb8e7d59250b69c537, duration=473ms, status=200
2025-08-08 18:11:59 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_408a81f15afc4ec3a6be0a8213119931, requestId=req_f04a81e8, url=/config-center/api/enum/get_all_enum
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_41a5d212f5234d16892fb4151b318f92, requestId=req_b9223e39, url=/config-center/api/config/page
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_408a81f15afc4ec3a6be0a8213119931
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_408a81f15afc4ec3a6be0a8213119931, duration=37ms, status=200
2025-08-08 18:12:44 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_41a5d212f5234d16892fb4151b318f92
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=100ms, rowsAffected=4
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_41a5d212f5234d16892fb4151b318f92
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=39ms, rowsAffected=4
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_41a5d212f5234d16892fb4151b318f92
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_41a5d212f5234d16892fb4151b318f92, duration=170ms, status=200
2025-08-08 18:12:44 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_631b48a26f9d450598fe8842601e776b, requestId=req_be116607, url=/config-center/api/enum/get_all_enum
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_631b48a26f9d450598fe8842601e776b
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_631b48a26f9d450598fe8842601e776b, duration=3ms, status=200
2025-08-08 18:12:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1346ffdc5f9944af8fd99661bfefe6cb, requestId=req_f58f1af9, url=/config-center/api/config/page
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1346ffdc5f9944af8fd99661bfefe6cb
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=75ms, rowsAffected=4
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1346ffdc5f9944af8fd99661bfefe6cb
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=57ms, rowsAffected=4
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1346ffdc5f9944af8fd99661bfefe6cb
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1346ffdc5f9944af8fd99661bfefe6cb, duration=142ms, status=200
2025-08-08 18:12:50 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:13:23 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:13:23 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:13:23 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:13:23 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_134323a794134bc2a0bbc1657e41bb73, requestId=req_d216377d, url=/config-center/api/config/page
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_57ba1c5b66684423891a87879a1d2f77, requestId=req_01a2fb9a, url=/config-center/api/enum/get_all_enum
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_134323a794134bc2a0bbc1657e41bb73
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=29ms, rowsAffected=4
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_57ba1c5b66684423891a87879a1d2f77
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_57ba1c5b66684423891a87879a1d2f77, duration=4ms, status=200
2025-08-08 18:13:24 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_134323a794134bc2a0bbc1657e41bb73
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=7ms, rowsAffected=4
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_134323a794134bc2a0bbc1657e41bb73
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_134323a794134bc2a0bbc1657e41bb73, duration=45ms, status=200
2025-08-08 18:13:24 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f3a446bda2924196a7bc32916b7144af, requestId=req_05227fee, url=/config-center/api/config/page
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_03ae0ac385e14bea9aea5bd35c1d6f88, requestId=req_a2ced236, url=/config-center/api/enum/get_all_enum
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f3a446bda2924196a7bc32916b7144af
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=9ms, rowsAffected=4
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_03ae0ac385e14bea9aea5bd35c1d6f88
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_03ae0ac385e14bea9aea5bd35c1d6f88, duration=2ms, status=200
2025-08-08 18:13:24 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f3a446bda2924196a7bc32916b7144af
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=15ms, rowsAffected=4
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f3a446bda2924196a7bc32916b7144af
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f3a446bda2924196a7bc32916b7144af, duration=32ms, status=200
2025-08-08 18:13:24 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:14:14 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:14:14 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:14:14 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:14:14 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:14:15 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:14:15 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:14:15 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:14:15 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1152988e8c844d5e9e4958367611a66d, requestId=req_4ad859f0, url=/config-center/api/config/page
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_55fda8d2a37d4fbda6fef2125db91f5b, requestId=req_5bbd189c, url=/config-center/api/enum/get_all_enum
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_55fda8d2a37d4fbda6fef2125db91f5b
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_55fda8d2a37d4fbda6fef2125db91f5b, duration=30ms, status=200
2025-08-08 18:14:15 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1152988e8c844d5e9e4958367611a66d
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=2041ms, rowsAffected=4
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1152988e8c844d5e9e4958367611a66d
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=80ms, rowsAffected=4
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1152988e8c844d5e9e4958367611a66d
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1152988e8c844d5e9e4958367611a66d, duration=2355ms, status=200
2025-08-08 18:14:17 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:54 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:18:54 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/14
2025-08-08 18:18:54 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:54 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/14] with attributes [authenticated]
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/14
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2605789936d649df9138b49dc150d27e, requestId=req_8ec9f735, url=/config-center/api/config/14
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=14&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=14&pageNum=1&pageSize=10
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2b29dc3fc60b45b8ad676201500823c1, requestId=req_e9e9aaab, url=/config-center/api/config/history
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2605789936d649df9138b49dc150d27e
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2605789936d649df9138b49dc150d27e, duration=330ms, status=200
2025-08-08 18:18:55 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2b29dc3fc60b45b8ad676201500823c1
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=262ms, rowsAffected=0
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2b29dc3fc60b45b8ad676201500823c1
2025-08-08 18:18:55 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=138ms, rowsAffected=0
2025-08-08 18:18:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2b29dc3fc60b45b8ad676201500823c1
2025-08-08 18:18:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2b29dc3fc60b45b8ad676201500823c1, duration=1834ms, status=200
2025-08-08 18:18:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_750c7412a3b04fae8614ffa012e85a44, requestId=req_76ebb110, url=/config-center/api/enum/get_all_enum
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_750c7412a3b04fae8614ffa012e85a44
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_750c7412a3b04fae8614ffa012e85a44, duration=6ms, status=200
2025-08-08 18:18:58 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_106508a5ade04958bd693309ecb42ed1, requestId=req_8a109362, url=/config-center/api/config/page
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_106508a5ade04958bd693309ecb42ed1
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=106ms, rowsAffected=4
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_106508a5ade04958bd693309ecb42ed1
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=13ms, rowsAffected=4
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_106508a5ade04958bd693309ecb42ed1
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_106508a5ade04958bd693309ecb42ed1, duration=128ms, status=200
2025-08-08 18:18:58 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/13
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/13] with attributes [authenticated]
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/13
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c5cf4719f4a942e4a59d52a869b50f2e, requestId=req_75af8d55, url=/config-center/api/config/13
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c5cf4719f4a942e4a59d52a869b50f2e
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c5cf4719f4a942e4a59d52a869b50f2e, duration=15ms, status=200
2025-08-08 18:18:59 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=13&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=13&pageNum=1&pageSize=10
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad2dfa1a70ac47cbbdf30cc1db60c787, requestId=req_f56f1750, url=/config-center/api/config/history
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad2dfa1a70ac47cbbdf30cc1db60c787
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=10ms, rowsAffected=0
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ad2dfa1a70ac47cbbdf30cc1db60c787
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=8ms, rowsAffected=0
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad2dfa1a70ac47cbbdf30cc1db60c787
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad2dfa1a70ac47cbbdf30cc1db60c787, duration=28ms, status=200
2025-08-08 18:18:59 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:19:00 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:19:00 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:19:00 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:19:00 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_30bd723b9e334d3daef230583bf46046, requestId=req_da7a2885, url=/config-center/api/enum/get_all_enum
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_aeb0727bbe4d4fe1ad70a269db8e9d2c, requestId=req_c5fd4142, url=/config-center/api/config/page
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_30bd723b9e334d3daef230583bf46046
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_30bd723b9e334d3daef230583bf46046, duration=7ms, status=200
2025-08-08 18:19:01 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aeb0727bbe4d4fe1ad70a269db8e9d2c
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=77ms, rowsAffected=4
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_aeb0727bbe4d4fe1ad70a269db8e9d2c
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=43ms, rowsAffected=4
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_aeb0727bbe4d4fe1ad70a269db8e9d2c
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_aeb0727bbe4d4fe1ad70a269db8e9d2c, duration=335ms, status=200
2025-08-08 18:19:01 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:19:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d6b774fc4517440db9d03494f1b89c12, requestId=req_fae2c86e, url=/config-center/api/config
2025-08-08 18:19:32 [http-nio-9090-exec-2] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:19:32 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d6b774fc4517440db9d03494f1b89c12
2025-08-08 18:19:32 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d6b774fc4517440db9d03494f1b89c12, duration=400ms, status=500
2025-08-08 18:19:32 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ad6bc162fb0b44e1aea51105c9d157b0, requestId=req_40139611, url=/config-center/api/config
2025-08-08 18:19:40 [http-nio-9090-exec-10] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 77] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ad6bc162fb0b44e1aea51105c9d157b0
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ad6bc162fb0b44e1aea51105c9d157b0, duration=21ms, status=500
2025-08-08 18:19:40 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:20:57 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:20:57 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:20:57 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:20:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:20:58 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:20:58 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:20:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7a23296a9e574ac39226611a352a48d9, requestId=req_ef27b742, url=/config-center/api/enum/get_all_enum
2025-08-08 18:20:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ccca9ffe829c41089a3a1445c2850b78, requestId=req_b83c1a9a, url=/config-center/api/config/page
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7a23296a9e574ac39226611a352a48d9
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7a23296a9e574ac39226611a352a48d9, duration=56ms, status=200
2025-08-08 18:20:58 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ccca9ffe829c41089a3a1445c2850b78
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=718ms, rowsAffected=4
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ccca9ffe829c41089a3a1445c2850b78
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=100ms, rowsAffected=4
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ccca9ffe829c41089a3a1445c2850b78
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ccca9ffe829c41089a3a1445c2850b78, duration=906ms, status=200
2025-08-08 18:20:59 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:21:09 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_dbbf2b175fd042da935f0b39bd5917de, requestId=req_4d9ae621, url=/config-center/api/config
2025-08-08 18:21:09 [http-nio-9090-exec-6] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 79] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 79] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "STRING": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 79] (through reference chain: com.example.configcenter.dto.ConfigCreateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:21:10 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_dbbf2b175fd042da935f0b39bd5917de
2025-08-08 18:21:10 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_dbbf2b175fd042da935f0b39bd5917de, duration=99ms, status=500
2025-08-08 18:21:10 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_5102d4b5686e4ed0a57fb751b0413b64, requestId=req_27ef0695, url=/config-center/api/config
2025-08-08 18:21:57 [http-nio-9090-exec-4] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:05 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Client session timed out, have not heard from server in 78249ms for session id 0x10002cd2abd0122
2025-08-08 18:23:05 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Session 0x10002cd2abd0122 for server localhost/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 78249ms for session id 0x10002cd2abd0122
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1251)
2025-08-08 18:23:05 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: SUSPENDED
2025-08-08 18:23:05 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: SUSPENDED
2025-08-08 18:23:05 [http-nio-9090-exec-4] ERROR c.e.configcenter.service.impl.ConfigServiceImpl - 创建配置项失败
java.lang.NullPointerException: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.base/java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006)
	at com.example.configcenter.log.LogSenderService.sendMysqlLog(LogSenderService.java:116)
	at com.example.configcenter.log.LogSenderService$$FastClassBySpringCGLIB$$28549b2c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.configcenter.log.LogSenderService$$EnhancerBySpringCGLIB$$3c7c25fa.sendMysqlLog(<generated>)
	at com.example.configcenter.interceptor.MysqlInterceptor.traceMysqlOperation(MysqlInterceptor.java:82)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy2/jdk.proxy2.$Proxy128.insert(Unknown Source)
	at com.example.configcenter.service.impl.ConfigServiceImpl.createConfig(ConfigServiceImpl.java:92)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$FastClassBySpringCGLIB$$f3330104.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:366)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:421)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.service.impl.ConfigServiceImpl$$EnhancerBySpringCGLIB$$7418182f.createConfig(<generated>)
	at com.example.configcenter.controller.ConfigController.createConfig(ConfigController.java:45)
	at com.example.configcenter.controller.ConfigController$$FastClassBySpringCGLIB$$b3e022a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.configcenter.controller.ConfigController$$EnhancerBySpringCGLIB$$232dcd28.createConfig(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-08 18:23:06 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_5102d4b5686e4ed0a57fb751b0413b64
2025-08-08 18:23:06 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_5102d4b5686e4ed0a57fb751b0413b64, duration=68890ms, status=200
2025-08-08 18:23:06 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:23:06 [Curator-Framework-0] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting
2025-08-08 18:23:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 18:23:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:23:07 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:52246, server: localhost/127.0.0.1:2181
2025-08-08 18:23:07 [main-SendThread(localhost:2181)] WARN  org.apache.zookeeper.ClientCnxn - Unable to reconnect to ZooKeeper service, session 0x10002cd2abd0122 has expired
2025-08-08 18:23:07 [main-EventThread] INFO  org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x10002cd2abd0122
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x10002cd2abd0122 closed
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端已关闭
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-08 18:23:07 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-08 18:23:25 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 38018 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 18:23:25 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 18:23:25 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 18:23:29 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-08-08 18:23:33 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 18:23:33 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 18:23:33 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 18:23:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 18:23:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8683 ms
2025-08-08 18:23:34 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 18:23:36 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 18:23:37 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 18:23:37 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 18:23:37 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=89MB
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=134MB
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@5db04bd2
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 18:23:37 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 18:23:37 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 18:23:37 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:23:37 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 18:23:37 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:52417, server: localhost/127.0.0.1:2181
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0123, negotiated timeout = 40000
2025-08-08 18:23:37 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:23:37 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 18:23:37 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 18:23:39 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 18:23:39 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2686a801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7878459f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ab717f3, org.springframework.security.web.header.HeaderWriterFilter@1e5190bd, org.springframework.web.filter.CorsFilter@4f6a5cc9, org.springframework.security.web.authentication.logout.LogoutFilter@3ec98000, com.example.configcenter.security.JwtAuthenticationFilter@24dc150c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67683210, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6464f017, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d24703e, org.springframework.security.web.session.SessionManagementFilter@7657d29f, org.springframework.security.web.access.ExceptionTranslationFilter@49bc1f6c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@263f6e96]
2025-08-08 18:23:39 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 18:23:41 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 18:23:48 [main] INFO  com.example.configcenter.ConfigCenterApplication - Starting ConfigCenterApplication using Java 17.0.12 on C02FRJWQMD6M with PID 38078 (/Users/lichun.wang/Git/config-center/target/classes started by lichun.wang in /Users/lichun.wang/Git/config-center)
2025-08-08 18:23:48 [main] DEBUG com.example.configcenter.ConfigCenterApplication - Running with Spring Boot v2.7.14, Spring v5.3.29
2025-08-08 18:23:48 [main] INFO  com.example.configcenter.ConfigCenterApplication - The following 1 profile is active: "dev"
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Elasticsearch repository interfaces.
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-08 18:23:49 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-08 18:23:51 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9090 (http)
2025-08-08 18:23:51 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-08 18:23:51 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-08-08 18:23:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring embedded WebApplicationContext
2025-08-08 18:23:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2721 ms
2025-08-08 18:23:51 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-08 18:23:52 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-08 18:23:53 [main] DEBUG c.e.configcenter.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-08 18:23:53 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper客户端初始化完成: localhost:2181
2025-08-08 18:23:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Starting
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.7.1-a2fb57c55f8e59cdd76c34b357ad5181df1258d5, built on 2022-05-07 06:45 UTC
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:host.name=10.53.41.63
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.version=17.0.12
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Amazon.com Inc.
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.home=/Users/lichun.wang/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=/Users/lichun.wang/Git/config-center/target/classes:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.14/spring-boot-starter-web-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.14/spring-boot-starter-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot/2.7.14/spring-boot-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.14/spring-boot-starter-logging-2.7.14.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/Users/lichun.wang/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/lichun.wang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/lichun.wang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lichun.wang/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.14/spring-boot-starter-json-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.14/spring-boot-starter-tomcat-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.78/tomcat-embed-core-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.78/tomcat-embed-websocket-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-web/5.3.29/spring-web-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-beans/5.3.29/spring-beans-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-webmvc/5.3.29/spring-webmvc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-expression/5.3.29/spring-expression-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/2.7.14/spring-boot-starter-websocket-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-messaging/5.3.29/spring-messaging-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-websocket/5.3.29/spring-websocket-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.14/spring-boot-starter-security-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-aop/5.3.29/spring-aop-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-config/5.7.10/spring-security-config-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-web/5.7.10/spring-security-web-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.7.14/spring-boot-starter-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-redis/2.7.14/spring-data-redis-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-keyvalue/2.7.14/spring-data-keyvalue-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-oxm/5.3.29/spring-oxm-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context-support/5.3.29/spring-context-support-5.3.29.jar:/Users/lichun.wang/.m2/repository/io/lettuce/lettuce-core/6.1.10.RELEASE/lettuce-core-6.1.10.RELEASE.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/projectreactor/reactor-core/3.4.31/reactor-core-3.4.31.jar:/Users/lichun.wang/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.14/spring-boot-starter-validation-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.78/tomcat-embed-el-9.0.78.jar:/Users/lichun.wang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/lichun.wang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/lichun.wang/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.14/spring-boot-starter-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.14/spring-boot-actuator-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.14/spring-boot-actuator-2.7.14.jar:/Users/lichun.wang/.m2/repository/io/micrometer/micrometer-core/1.9.13/micrometer-core-1.9.13.jar:/Users/lichun.wang/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/lichun.wang/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-framework/5.4.0/curator-framework-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-client/5.4.0/curator-client-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper/3.7.1/zookeeper-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.7.1/zookeeper-jute-3.7.1.jar:/Users/lichun.wang/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/Users/lichun.wang/.m2/repository/com/google/guava/guava/31.1-jre/guava-31.1-jre.jar:/Users/lichun.wang/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/lichun.wang/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/lichun.wang/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/lichun.wang/.m2/repository/com/google/errorprone/error_prone_annotations/2.11.0/error_prone_annotations-2.11.0.jar:/Users/lichun.wang/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/lichun.wang/.m2/repository/org/apache/curator/curator-recipes/5.4.0/curator-recipes-5.4.0.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.3.1/mybatis-spring-boot-starter-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.14/spring-boot-starter-jdbc-2.7.14.jar:/Users/lichun.wang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jdbc/5.3.29/spring-jdbc-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.3.1/mybatis-spring-boot-autoconfigure-2.3.1.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis/3.5.13/mybatis-3.5.13.jar:/Users/lichun.wang/.m2/repository/org/mybatis/mybatis-spring/2.1.1/mybatis-spring-2.1.1.jar:/Users/lichun.wang/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid-spring-boot-starter/1.2.18/druid-spring-boot-starter-1.2.18.jar:/Users/lichun.wang/.m2/repository/com/alibaba/druid/1.2.18/druid-1.2.18.jar:/Users/lichun.wang/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.14/spring-boot-autoconfigure-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.8/jaxb-runtime-2.3.8.jar:/Users/lichun.wang/.m2/repository/org/glassfish/jaxb/txw2/2.3.8/txw2-2.3.8.jar:/Users/lichun.wang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/lichun.wang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/kafka/spring-kafka/2.8.11/spring-kafka-2.8.11.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-context/5.3.29/spring-context-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-tx/5.3.29/spring-tx-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/retry/spring-retry/1.3.4/spring-retry-1.3.4.jar:/Users/lichun.wang/.m2/repository/org/apache/kafka/kafka-clients/3.1.2/kafka-clients-3.1.2.jar:/Users/lichun.wang/.m2/repository/com/github/luben/zstd-jni/1.5.0-4/zstd-jni-1.5.0-4.jar:/Users/lichun.wang/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/lichun.wang/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/Users/lichun.wang/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-data-elasticsearch/2.7.14/spring-boot-starter-data-elasticsearch-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-elasticsearch/4.4.14/spring-data-elasticsearch-4.4.14.jar:/Users/lichun.wang/.m2/repository/org/springframework/data/spring-data-commons/2.7.14/spring-data-commons-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-high-level-client/7.17.11/elasticsearch-rest-high-level-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch/7.17.11/elasticsearch-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-core/7.17.11/elasticsearch-core-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-secure-sm/7.17.11/elasticsearch-secure-sm-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-x-content/7.17.11/elasticsearch-x-content-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.13.5/jackson-dataformat-smile-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.5/jackson-dataformat-yaml-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.13.5/jackson-dataformat-cbor-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-geo/7.17.11/elasticsearch-geo-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-lz4/7.17.11/elasticsearch-lz4-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-core/8.11.1/lucene-core-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-analyzers-common/8.11.1/lucene-analyzers-common-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-backward-codecs/8.11.1/lucene-backward-codecs-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-grouping/8.11.1/lucene-grouping-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-highlighter/8.11.1/lucene-highlighter-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-join/8.11.1/lucene-join-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-memory/8.11.1/lucene-memory-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-misc/8.11.1/lucene-misc-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queries/8.11.1/lucene-queries-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-queryparser/8.11.1/lucene-queryparser-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-sandbox/8.11.1/lucene-sandbox-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-spatial3d/8.11.1/lucene-spatial3d-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/apache/lucene/lucene-suggest/8.11.1/lucene-suggest-8.11.1.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-cli/7.17.11/elasticsearch-cli-7.17.11.jar:/Users/lichun.wang/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.2/jopt-simple-5.0.2.jar:/Users/lichun.wang/.m2/repository/com/carrotsearch/hppc/0.8.1/hppc-0.8.1.jar:/Users/lichun.wang/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/lichun.wang/.m2/repository/com/tdunning/t-digest/3.2/t-digest-3.2.jar:/Users/lichun.wang/.m2/repository/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/elasticsearch-plugin-classloader/7.17.11/elasticsearch-plugin-classloader-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/mapper-extras-client/7.17.11/mapper-extras-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/parent-join-client/7.17.11/parent-join-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/aggs-matrix-stats-client/7.17.11/aggs-matrix-stats-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/rank-eval-client/7.17.11/rank-eval-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/plugin/lang-mustache-client/7.17.11/lang-mustache-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/com/github/spullara/mustache/java/compiler/0.9.6/compiler-0.9.6.jar:/Users/lichun.wang/.m2/repository/co/elastic/clients/elasticsearch-java/7.17.9/elasticsearch-java-7.17.9.jar:/Users/lichun.wang/.m2/repository/jakarta/json/jakarta.json-api/1.1.6/jakarta.json-api-1.1.6.jar:/Users/lichun.wang/.m2/repository/org/eclipse/parsson/parsson/1.0.0/parsson-1.0.0.jar:/Users/lichun.wang/.m2/repository/org/elasticsearch/client/elasticsearch-rest-client/7.17.11/elasticsearch-rest-client-7.17.11.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/lichun.wang/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.16/httpcore-nio-4.4.16.jar:/Users/lichun.wang/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/Users/lichun.wang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.14/spring-boot-starter-aop-2.7.14.jar:/Users/lichun.wang/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/lichun.wang/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson/2.0.32/fastjson-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2-extension/2.0.32/fastjson2-extension-2.0.32.jar:/Users/lichun.wang/.m2/repository/com/alibaba/fastjson2/fastjson2/2.0.32/fastjson2-2.0.32.jar:/Users/lichun.wang/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/lichun.wang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/lichun.wang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-core/5.3.29/spring-core-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/spring-jcl/5.3.29/spring-jcl-5.3.29.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-core/5.7.10/spring-security-core-5.7.10.jar:/Users/lichun.wang/.m2/repository/org/springframework/security/spring-security-crypto/5.7.10/spring-security-crypto-5.7.10.jar:/Users/lichun.wang/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.19/swagger-annotations-2.2.19.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/Users/lichun.wang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/var/folders/rj/phl7vty5439gvx97_z73ptsh0000gp/T/
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.name=Mac OS X
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.arch=x86_64
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.version=15.4
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.name=lichun.wang
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.home=/Users/lichun.wang
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/Users/lichun.wang/Git/config-center
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.free=67MB
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.max=4096MB
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Client environment:os.memory.total=108MB
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@123c48d0
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.common.X509Util - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
2025-08-08 18:23:53 [main] INFO  org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
2025-08-08 18:23:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181.
2025-08-08 18:23:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
2025-08-08 18:23:53 [main] INFO  o.a.curator.framework.imps.CuratorFrameworkImpl - Default schema
2025-08-08 18:23:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Socket connection established, initiating session, client: /127.0.0.1:52499, server: localhost/127.0.0.1:2181
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main-SendThread(localhost:2181)] INFO  org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x10002cd2abd0124, negotiated timeout = 40000
2025-08-08 18:23:53 [main-EventThread] INFO  o.a.curator.framework.state.ConnectionStateManager - State change: CONNECTED
2025-08-08 18:23:53 [Curator-ConnectionStateManager-0] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper连接状态变更: CONNECTED
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:23:53 [main-EventThread] INFO  org.apache.curator.framework.imps.EnsembleTracker - New config event received: {}
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.deleteConfig(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.publishConfig(java.lang.Long,com.example.configcenter.dto.PublishDto,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DEVELOPER\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.ConfigController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.rollbackConfig(java.lang.Long,java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUsers(com.example.configcenter.dto.UserQueryRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.createUser(com.example.configcenter.dto.UserCreateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.updateUser(com.example.configcenter.dto.UserUpdateRequest,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUser(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.getUserById(java.lang.Long,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.deleteUsers(java.util.List,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.toggleUserStatus(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.resetPassword(java.lang.Long,java.lang.String,javax.servlet.http.HttpServletRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)
2025-08-08 18:23:53 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.example.configcenter.controller.UserController; public com.example.configcenter.common.ApiResult com.example.configcenter.controller.UserController.checkUsername(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/actuator/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-ui/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/swagger-resources/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/v2/api-docs/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/webjars/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/favicon.ico']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/error']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/ws/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/static/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/public/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/config/open/**']
2025-08-08 18:23:54 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-08-08 18:23:54 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a491a60, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@80b6098, org.springframework.security.web.context.SecurityContextPersistenceFilter@695c8b32, org.springframework.security.web.header.HeaderWriterFilter@3cf7433e, org.springframework.web.filter.CorsFilter@5c30decf, org.springframework.security.web.authentication.logout.LogoutFilter@112b3298, com.example.configcenter.security.JwtAuthenticationFilter@2d4a0671, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6eb332d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1256925b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7827cdfc, org.springframework.security.web.session.SessionManagementFilter@5a464be7, org.springframework.security.web.access.ExceptionTranslationFilter@5d8112e6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11267e87]
2025-08-08 18:23:54 [main] INFO  com.example.configcenter.config.ZooKeeperConfig - ZooKeeper路径监听器启动完成
2025-08-08 18:23:55 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-08 18:23:55 [main] INFO  org.apache.kafka.clients.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-08-08 18:23:55 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 18:23:55 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 18:23:55 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754648635991
2025-08-08 18:23:56 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-08-08 18:23:56 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-08 18:23:56 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-08 18:23:56 [kafka-admin-client-thread | adminclient-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-08 18:23:56 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9090 (http) with context path '/config-center'
2025-08-08 18:23:56 [main] INFO  com.example.configcenter.ConfigCenterApplication - Started ConfigCenterApplication in 8.577 seconds (JVM running for 10.347)
2025-08-08 18:24:07 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/config-center] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08 18:24:07 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-08 18:24:07 [http-nio-9090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/config
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /api/config] with attributes [authenticated]
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/config
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9f1513bba91c44f2aabe4effd8d12dd2, requestId=req_17ff3cf9, url=/config-center/api/config
2025-08-08 18:24:07 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.createConfig(com.example.configcenter.dto.ConfigCreateReq); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:24:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because acks is set to 1, not set to 'all'.
2025-08-08 18:24:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-08-08 18:24:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-08-08 18:24:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-08-08 18:24:08 [http-nio-9090-exec-1] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1754648648519
2025-08-08 18:24:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:24:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:24:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:24:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Oc9rbCYURnSpjGlHMh_mCg
2025-08-08 18:24:08 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9f1513bba91c44f2aabe4effd8d12dd2
2025-08-08 18:24:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=insert, duration=103ms, rowsAffected=1
2025-08-08 18:24:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-0 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:24:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-2 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:24:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition api-logs-1 to 0 since the associated topicId changed from null to tIA_6GMZQJiR82WdASxLEQ
2025-08-08 18:24:09 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9f1513bba91c44f2aabe4effd8d12dd2
2025-08-08 18:24:09 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9f1513bba91c44f2aabe4effd8d12dd2, duration=1491ms, status=200
2025-08-08 18:24:09 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1b4a38d592124912b8a20b670ed343ba, requestId=req_197d0d62, url=/config-center/api/config/page
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1b4a38d592124912b8a20b670ed343ba
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=109ms, rowsAffected=5
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1b4a38d592124912b8a20b670ed343ba
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=20ms, rowsAffected=5
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1b4a38d592124912b8a20b670ed343ba
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1b4a38d592124912b8a20b670ed343ba, duration=208ms, status=200
2025-08-08 18:24:09 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:03 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:25:03 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:03 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:03 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_65da83199c50490f894590f4f24c4b09, requestId=req_184a5d5e, url=/config-center/api/config/page
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cb4b112b44484b47a5455666821f7103, requestId=req_510c5557, url=/config-center/api/enum/get_all_enum
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cb4b112b44484b47a5455666821f7103
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cb4b112b44484b47a5455666821f7103, duration=81ms, status=200
2025-08-08 18:25:07 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_65da83199c50490f894590f4f24c4b09
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=248ms, rowsAffected=5
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_65da83199c50490f894590f4f24c4b09
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=38ms, rowsAffected=5
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_65da83199c50490f894590f4f24c4b09
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_65da83199c50490f894590f4f24c4b09, duration=347ms, status=200
2025-08-08 18:25:07 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b2a2ccc60be943a6b08392b6365b338e, requestId=req_38add990, url=/config-center/api/config/page
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b2a2ccc60be943a6b08392b6365b338e
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=9ms, rowsAffected=5
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b2a2ccc60be943a6b08392b6365b338e
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=22ms, rowsAffected=5
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b2a2ccc60be943a6b08392b6365b338e
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b2a2ccc60be943a6b08392b6365b338e, duration=53ms, status=200
2025-08-08 18:25:07 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:10 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0d5c061cd6294aa68591a8706f2b21cc, requestId=req_766ab22e, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:25:11 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0d5c061cd6294aa68591a8706f2b21cc
2025-08-08 18:25:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=13ms, rowsAffected=0
2025-08-08 18:25:11 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0d5c061cd6294aa68591a8706f2b21cc
2025-08-08 18:25:11 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0d5c061cd6294aa68591a8706f2b21cc, duration=65ms, status=200
2025-08-08 18:25:11 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:14 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7cd8dc04456c43d48355b90e45190514, requestId=req_d7a4809c, url=/config-center/api/config/18
2025-08-08 18:25:15 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_7cd8dc04456c43d48355b90e45190514
2025-08-08 18:25:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=138ms, rowsAffected=1
2025-08-08 18:25:15 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7cd8dc04456c43d48355b90e45190514
2025-08-08 18:25:15 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7cd8dc04456c43d48355b90e45190514, duration=249ms, status=200
2025-08-08 18:25:15 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4439d3ea3cb648dd9a9d3a02f604c644, requestId=req_84742006, url=/config-center/api/config/18
2025-08-08 18:25:15 [http-nio-9090-exec-8] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4439d3ea3cb648dd9a9d3a02f604c644
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4439d3ea3cb648dd9a9d3a02f604c644, duration=38ms, status=500
2025-08-08 18:25:15 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e76581824616499e865fdaf5839da62d, requestId=req_73cef71f, url=/config-center/api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e76581824616499e865fdaf5839da62d
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e76581824616499e865fdaf5839da62d, duration=52ms, status=200
2025-08-08 18:25:30 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6339b5dd1dab48c9b7b4b420d89f8d92, requestId=req_1637e73b, url=/config-center/api/config/18
2025-08-08 18:25:30 [http-nio-9090-exec-10] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6339b5dd1dab48c9b7b4b420d89f8d92
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6339b5dd1dab48c9b7b4b420d89f8d92, duration=26ms, status=500
2025-08-08 18:25:30 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=18&pageNum=1&pageSize=10
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_005c2fd0e0aa4d4eb97d7a2b79fe49dc, requestId=req_7ceab454, url=/config-center/api/config/18
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=18&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=18&pageNum=1&pageSize=10
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0e06dfb06a4342b5b0d3c4fbef2106c9, requestId=req_bc3857a7, url=/config-center/api/config/history
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_005c2fd0e0aa4d4eb97d7a2b79fe49dc
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_005c2fd0e0aa4d4eb97d7a2b79fe49dc, duration=15ms, status=200
2025-08-08 18:25:43 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e06dfb06a4342b5b0d3c4fbef2106c9
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=9ms, rowsAffected=0
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0e06dfb06a4342b5b0d3c4fbef2106c9
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=84ms, rowsAffected=0
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0e06dfb06a4342b5b0d3c4fbef2106c9
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0e06dfb06a4342b5b0d3c4fbef2106c9, duration=151ms, status=200
2025-08-08 18:25:43 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9a66109763f542bc967e8a759e54f6e4, requestId=req_ac670922, url=/config-center/api/config/page
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1dee07da280e4aa797f6f428e833072e, requestId=req_6797bfae, url=/config-center/api/enum/get_all_enum
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1dee07da280e4aa797f6f428e833072e
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1dee07da280e4aa797f6f428e833072e, duration=4ms, status=200
2025-08-08 18:25:44 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9a66109763f542bc967e8a759e54f6e4
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=17ms, rowsAffected=5
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9a66109763f542bc967e8a759e54f6e4
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=11ms, rowsAffected=5
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9a66109763f542bc967e8a759e54f6e4
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9a66109763f542bc967e8a759e54f6e4, duration=38ms, status=200
2025-08-08 18:25:44 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/history?configId=18&pageNum=1&pageSize=10
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1b2a1c305d0547ed8e41efd757d4d53f, requestId=req_0a2ecff2, url=/config-center/api/config/18
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1b2a1c305d0547ed8e41efd757d4d53f
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1b2a1c305d0547ed8e41efd757d4d53f, duration=12ms, status=200
2025-08-08 18:25:46 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/history?configId=18&pageNum=1&pageSize=10] with attributes [authenticated]
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/history?configId=18&pageNum=1&pageSize=10
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_980aa77e4f464230815f1e716b4bde59, requestId=req_2e75d339, url=/config-center/api/config/history
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_980aa77e4f464230815f1e716b4bde59
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=34ms, rowsAffected=0
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_980aa77e4f464230815f1e716b4bde59
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=0
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_980aa77e4f464230815f1e716b4bde59
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_980aa77e4f464230815f1e716b4bde59, duration=57ms, status=200
2025-08-08 18:25:46 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b7ae7a084aac4c29bcd1606771eeff8c, requestId=req_05b5b212, url=/config-center/api/enum/get_all_enum
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_db0bece1aaaa43918a5999c530274354, requestId=req_b6f73d06, url=/config-center/api/config/page
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b7ae7a084aac4c29bcd1606771eeff8c
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b7ae7a084aac4c29bcd1606771eeff8c, duration=4ms, status=200
2025-08-08 18:25:48 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_db0bece1aaaa43918a5999c530274354
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=19ms, rowsAffected=5
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_db0bece1aaaa43918a5999c530274354
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=5ms, rowsAffected=5
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_db0bece1aaaa43918a5999c530274354
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_db0bece1aaaa43918a5999c530274354, duration=31ms, status=200
2025-08-08 18:25:48 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9fed36276d684869ab454775ad7e1b90, requestId=req_4d4a6537, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9fed36276d684869ab454775ad7e1b90
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=2ms, rowsAffected=0
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9fed36276d684869ab454775ad7e1b90
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9fed36276d684869ab454775ad7e1b90, duration=5ms, status=200
2025-08-08 18:25:54 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:57 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bd90d9d9c251410f89b43eba9b228814, requestId=req_52a9ab76, url=/config-center/api/config/18
2025-08-08 18:25:58 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bd90d9d9c251410f89b43eba9b228814
2025-08-08 18:25:58 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bd90d9d9c251410f89b43eba9b228814, duration=8ms, status=200
2025-08-08 18:25:58 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f42de94933144900afc52a7ca55df5c6, requestId=req_d2703428, url=/config-center/api/config/18
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f42de94933144900afc52a7ca55df5c6
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=5ms, rowsAffected=1
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_f42de94933144900afc52a7ca55df5c6
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=45ms, rowsAffected=1
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f42de94933144900afc52a7ca55df5c6
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f42de94933144900afc52a7ca55df5c6, duration=100ms, status=200
2025-08-08 18:25:58 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_bee028a402f24dfbab1f5254792a0871, requestId=req_514f1818, url=/config-center/api/config/page
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bee028a402f24dfbab1f5254792a0871
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=7ms, rowsAffected=5
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_bee028a402f24dfbab1f5254792a0871
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=7ms, rowsAffected=5
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_bee028a402f24dfbab1f5254792a0871
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_bee028a402f24dfbab1f5254792a0871, duration=20ms, status=200
2025-08-08 18:25:58 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_544831444d5e4779ba60f5587fe5f813, requestId=req_3f54a050, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_544831444d5e4779ba60f5587fe5f813
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=6ms, rowsAffected=0
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_544831444d5e4779ba60f5587fe5f813
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_544831444d5e4779ba60f5587fe5f813, duration=15ms, status=200
2025-08-08 18:26:01 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_b7314e7b33f748f4aa3e6c03db42f0aa, requestId=req_ca927aea, url=/config-center/api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_b7314e7b33f748f4aa3e6c03db42f0aa
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_b7314e7b33f748f4aa3e6c03db42f0aa
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_b7314e7b33f748f4aa3e6c03db42f0aa, duration=20ms, status=200
2025-08-08 18:26:04 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:04 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_98dd019a91584c40a32d7a773f817fac, requestId=req_0ef4aab8, url=/config-center/api/config/18
2025-08-08 18:26:04 [http-nio-9090-exec-5] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:26:05 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_98dd019a91584c40a32d7a773f817fac
2025-08-08 18:26:05 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_98dd019a91584c40a32d7a773f817fac, duration=7ms, status=500
2025-08-08 18:26:05 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7eb378fb980e4ae9b06d1afd7c7d26ea, requestId=req_560173dc, url=/config-center/api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7eb378fb980e4ae9b06d1afd7c7d26ea
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7eb378fb980e4ae9b06d1afd7c7d26ea, duration=7ms, status=200
2025-08-08 18:26:09 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9a1cde0c959840208e846cb6e35ffa51, requestId=req_49e5205b, url=/config-center/api/config/18
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9a1cde0c959840208e846cb6e35ffa51
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9a1cde0c959840208e846cb6e35ffa51
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=3ms, rowsAffected=1
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9a1cde0c959840208e846cb6e35ffa51
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9a1cde0c959840208e846cb6e35ffa51, duration=28ms, status=200
2025-08-08 18:26:09 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a08df9dc48b64f309bce53b34f19db88, requestId=req_2fc17eec, url=/config-center/api/config/page
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a08df9dc48b64f309bce53b34f19db88
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=6ms, rowsAffected=5
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a08df9dc48b64f309bce53b34f19db88
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=5ms, rowsAffected=5
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a08df9dc48b64f309bce53b34f19db88
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a08df9dc48b64f309bce53b34f19db88, duration=18ms, status=200
2025-08-08 18:26:09 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6f2b6c99433f4073983e3e49ed082f80, requestId=req_f6b1c8a2, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6f2b6c99433f4073983e3e49ed082f80
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=1ms, rowsAffected=0
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6f2b6c99433f4073983e3e49ed082f80
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6f2b6c99433f4073983e3e49ed082f80, duration=3ms, status=200
2025-08-08 18:26:10 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:12 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:12 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c47a7532c5424017bd94d0dc7f5593ec, requestId=req_c42f5dc3, url=/config-center/api/config/18
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c47a7532c5424017bd94d0dc7f5593ec
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c47a7532c5424017bd94d0dc7f5593ec
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c47a7532c5424017bd94d0dc7f5593ec, duration=12ms, status=200
2025-08-08 18:26:13 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_de89c6e0fe3448b68232da361e4f39b1, requestId=req_817e6404, url=/config-center/api/config/18
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG o.s.s.a.i.aopalliance.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.example.configcenter.common.ApiResult com.example.configcenter.controller.ConfigController.editConfig(java.lang.Long,com.example.configcenter.dto.ConfigUpdateReq,javax.servlet.http.HttpServletRequest); target is of class [com.example.configcenter.controller.ConfigController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DEVELOPER')', filter: 'null', filterTarget: 'null']]
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_de89c6e0fe3448b68232da361e4f39b1
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=1ms, rowsAffected=1
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_de89c6e0fe3448b68232da361e4f39b1
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=update, duration=2ms, rowsAffected=1
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_de89c6e0fe3448b68232da361e4f39b1
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_de89c6e0fe3448b68232da361e4f39b1, duration=22ms, status=200
2025-08-08 18:26:13 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c8517a5c8bff47ecac67ad2907bcaed1, requestId=req_9e4aebd0, url=/config-center/api/config/page
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c8517a5c8bff47ecac67ad2907bcaed1
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=6ms, rowsAffected=5
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_c8517a5c8bff47ecac67ad2907bcaed1
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=3ms, rowsAffected=5
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c8517a5c8bff47ecac67ad2907bcaed1
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c8517a5c8bff47ecac67ad2907bcaed1, duration=13ms, status=200
2025-08-08 18:26:13 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e5a31e536e9241189a5ddec4f424575d, requestId=req_03b7acb0, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e5a31e536e9241189a5ddec4f424575d
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=3ms, rowsAffected=0
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e5a31e536e9241189a5ddec4f424575d
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e5a31e536e9241189a5ddec4f424575d, duration=4ms, status=200
2025-08-08 18:26:14 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1ad1ceffafb54e45b6ce4a57e1e944a0, requestId=req_5c30e3d4, url=/config-center/api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1ad1ceffafb54e45b6ce4a57e1e944a0
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=2ms, rowsAffected=1
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1ad1ceffafb54e45b6ce4a57e1e944a0
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1ad1ceffafb54e45b6ce4a57e1e944a0, duration=17ms, status=200
2025-08-08 18:26:19 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0f9489d490954478aa027fa607722fa1, requestId=req_e40afe82, url=/config-center/api/config/18
2025-08-08 18:26:19 [http-nio-9090-exec-5] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0f9489d490954478aa027fa607722fa1
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0f9489d490954478aa027fa607722fa1, duration=8ms, status=500
2025-08-08 18:26:19 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a6fa991d8f4b4cf89fc7b6bdfd6bd867, requestId=req_1fda5e51, url=/config-center/api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a6fa991d8f4b4cf89fc7b6bdfd6bd867
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a6fa991d8f4b4cf89fc7b6bdfd6bd867, duration=52ms, status=200
2025-08-08 18:26:35 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_139dc7a5f8ee4cc29fdad0356101dba2, requestId=req_58d08409, url=/config-center/api/config/18
2025-08-08 18:26:35 [http-nio-9090-exec-7] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_139dc7a5f8ee4cc29fdad0356101dba2
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_139dc7a5f8ee4cc29fdad0356101dba2, duration=22ms, status=500
2025-08-08 18:26:35 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2a7869aef99a465ea7dc8d98b4865dd2, requestId=req_a5c711bc, url=/config-center/api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2a7869aef99a465ea7dc8d98b4865dd2
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2a7869aef99a465ea7dc8d98b4865dd2, duration=12ms, status=200
2025-08-08 18:26:52 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9ed8bae1feb34a3daa36046c77b8a508, requestId=req_835be269, url=/config-center/api/config/18
2025-08-08 18:26:52 [http-nio-9090-exec-9] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9ed8bae1feb34a3daa36046c77b8a508
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9ed8bae1feb34a3daa36046c77b8a508, duration=7ms, status=500
2025-08-08 18:26:52 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/18] with attributes [authenticated]
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4423ff486ea240418c01b33bc9871665, requestId=req_a62ecb77, url=/config-center/api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4423ff486ea240418c01b33bc9871665
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4423ff486ea240418c01b33bc9871665, duration=8ms, status=200
2025-08-08 18:27:01 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing PUT /api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/config/18] with attributes [authenticated]
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured PUT /api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_119bca0e6dd3496c8b9530b845c4c3c3, requestId=req_8a9c3951, url=/config-center/api/config/18
2025-08-08 18:27:01 [http-nio-9090-exec-1] ERROR c.e.configcenter.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"]) - URL: http://localhost:9090/config-center/api/config/18
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.configcenter.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.configcenter.enums.ConfigValueTypeEnum` from String "String": not one of the values accepted for Enum class: [Json, Yaml]
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 87] (through reference chain: com.example.configcenter.dto.ConfigUpdateReq["dataType"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:356)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:230)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:198)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 102 common frames omitted
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_119bca0e6dd3496c8b9530b845c4c3c3
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_119bca0e6dd3496c8b9530b845c4c3c3, duration=5ms, status=500
2025-08-08 18:27:01 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3be1ff535b904cc085bff11887f000b7, requestId=req_802ac348, url=/config-center/api/enum/get_all_enum
2025-08-08 18:28:33 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0a3236f71ab1464c911016e3155a4d73, requestId=req_52a781b1, url=/config-center/api/config/page
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3be1ff535b904cc085bff11887f000b7
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3be1ff535b904cc085bff11887f000b7, duration=231ms, status=200
2025-08-08 18:28:33 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0a3236f71ab1464c911016e3155a4d73
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=452ms, rowsAffected=5
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0a3236f71ab1464c911016e3155a4d73
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=49ms, rowsAffected=5
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0a3236f71ab1464c911016e3155a4d73
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0a3236f71ab1464c911016e3155a4d73, duration=761ms, status=200
2025-08-08 18:28:34 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1bcf17c027b44aa48c78e1770cb037a8, requestId=req_5d72cd9e, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1bcf17c027b44aa48c78e1770cb037a8
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=337ms, rowsAffected=0
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1bcf17c027b44aa48c78e1770cb037a8
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1bcf17c027b44aa48c78e1770cb037a8, duration=343ms, status=200
2025-08-08 18:28:40 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2f8e5617bdf64577b177d99a62828a3f, requestId=req_23bb9a6b, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2f8e5617bdf64577b177d99a62828a3f
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=57ms, rowsAffected=0
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2f8e5617bdf64577b177d99a62828a3f
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2f8e5617bdf64577b177d99a62828a3f, duration=61ms, status=200
2025-08-08 18:29:00 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:29:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-0 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:29:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-2 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:29:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition mysql-logs-1 to 0 since the associated topicId changed from null to kUhUBuxHTcKewxf81vcSvw
2025-08-08 18:29:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:29:50 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:29:50 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:29:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_a3fc7d04fe73497d89fc58d5091bcd27, requestId=req_a3b4dfdc, url=/config-center/api/config/page
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4e8ce8f85f88465a9dda5624aaae1e80, requestId=req_72372a1c, url=/config-center/api/enum/get_all_enum
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4e8ce8f85f88465a9dda5624aaae1e80
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4e8ce8f85f88465a9dda5624aaae1e80, duration=64ms, status=200
2025-08-08 18:29:51 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a3fc7d04fe73497d89fc58d5091bcd27
2025-08-08 18:29:51 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=522ms, rowsAffected=5
2025-08-08 18:29:52 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_a3fc7d04fe73497d89fc58d5091bcd27
2025-08-08 18:29:52 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=366ms, rowsAffected=5
2025-08-08 18:29:52 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_a3fc7d04fe73497d89fc58d5091bcd27
2025-08-08 18:29:52 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_a3fc7d04fe73497d89fc58d5091bcd27, duration=1003ms, status=200
2025-08-08 18:29:52 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:33:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/18/get_processing_ticket
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/18/get_processing_ticket] with attributes [authenticated]
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/18/get_processing_ticket
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_21ae278a69894058bb0af9c17158e7ed, requestId=req_4e8e7e1f, url=/config-center/api/ticket/18/get_processing_ticket
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_21ae278a69894058bb0af9c17158e7ed
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=40ms, rowsAffected=0
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_21ae278a69894058bb0af9c17158e7ed
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_21ae278a69894058bb0af9c17158e7ed, duration=79ms, status=200
2025-08-08 18:33:57 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:36:23 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:36:23 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_06a425a1574b44a5b6d2bd6c8ae34068, requestId=req_b88e9e76, url=/config-center/api/enum/get_all_enum
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_06a425a1574b44a5b6d2bd6c8ae34068
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_06a425a1574b44a5b6d2bd6c8ae34068, duration=30ms, status=200
2025-08-08 18:36:23 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9e7abd7b97584eb2acebd62ff543e5ac, requestId=req_2a148a5a, url=/config-center/api/config/page
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9e7abd7b97584eb2acebd62ff543e5ac
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=131ms, rowsAffected=5
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9e7abd7b97584eb2acebd62ff543e5ac
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=65ms, rowsAffected=5
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9e7abd7b97584eb2acebd62ff543e5ac
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9e7abd7b97584eb2acebd62ff543e5ac, duration=229ms, status=200
2025-08-08 18:36:24 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:36:56 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:36:56 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:36:56 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:36:56 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_787ec8e438a94bba8b76224732d1c54c, requestId=req_e885091e, url=/config-center/api/config/page
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_157a107ea4824df3ab414ae4a1967ead, requestId=req_0d0b9a38, url=/config-center/api/enum/get_all_enum
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_157a107ea4824df3ab414ae4a1967ead
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_157a107ea4824df3ab414ae4a1967ead, duration=15ms, status=200
2025-08-08 18:36:57 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_787ec8e438a94bba8b76224732d1c54c
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=206ms, rowsAffected=5
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_787ec8e438a94bba8b76224732d1c54c
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=75ms, rowsAffected=5
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_787ec8e438a94bba8b76224732d1c54c
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_787ec8e438a94bba8b76224732d1c54c, duration=314ms, status=200
2025-08-08 18:36:57 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_7169fafc29b9470e9ec5e1ef0a243174, requestId=req_b9ea1c3f, url=/config-center/api/enum/get_all_enum
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ef6a4e2817b5465b826ba903c1188706, requestId=req_787a4f87, url=/config-center/api/config/page
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_7169fafc29b9470e9ec5e1ef0a243174
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_7169fafc29b9470e9ec5e1ef0a243174, duration=3ms, status=200
2025-08-08 18:37:07 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ef6a4e2817b5465b826ba903c1188706
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=27ms, rowsAffected=5
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ef6a4e2817b5465b826ba903c1188706
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=17ms, rowsAffected=5
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ef6a4e2817b5465b826ba903c1188706
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ef6a4e2817b5465b826ba903c1188706, duration=50ms, status=200
2025-08-08 18:37:07 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_cd4598b793ee4f079373371810fc7f13, requestId=req_70d2b433, url=/config-center/api/enum/get_all_enum
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_9f6598ae4d794a51aade9ed2caaf2a66, requestId=req_41a65d5c, url=/config-center/api/config/page
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_cd4598b793ee4f079373371810fc7f13
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_cd4598b793ee4f079373371810fc7f13, duration=31ms, status=200
2025-08-08 18:37:45 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9f6598ae4d794a51aade9ed2caaf2a66
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=73ms, rowsAffected=5
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_9f6598ae4d794a51aade9ed2caaf2a66
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=97ms, rowsAffected=5
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_9f6598ae4d794a51aade9ed2caaf2a66
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_9f6598ae4d794a51aade9ed2caaf2a66, duration=421ms, status=200
2025-08-08 18:37:45 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8bf70cbef81a41aa83d2d5a199842497, requestId=req_863a4d26, url=/config-center/api/config/page
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_45f5c490e41243ecaa28f6197076d95f, requestId=req_a43189a2, url=/config-center/api/enum/get_all_enum
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_45f5c490e41243ecaa28f6197076d95f
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_45f5c490e41243ecaa28f6197076d95f, duration=5ms, status=200
2025-08-08 18:38:20 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8bf70cbef81a41aa83d2d5a199842497
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=114ms, rowsAffected=5
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_8bf70cbef81a41aa83d2d5a199842497
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=29ms, rowsAffected=5
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8bf70cbef81a41aa83d2d5a199842497
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8bf70cbef81a41aa83d2d5a199842497, duration=158ms, status=200
2025-08-08 18:38:20 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:41:15 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:41:15 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:41:15 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:41:15 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1d3ebf0c372740148ffff0196b5a72c2, requestId=req_250731b2, url=/config-center/api/enum/get_all_enum
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1d3ebf0c372740148ffff0196b5a72c2
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1d3ebf0c372740148ffff0196b5a72c2, duration=9ms, status=200
2025-08-08 18:41:16 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_99beb9ae496b489e8d31e570deded18c, requestId=req_7ca3dc9c, url=/config-center/api/config/page
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_99beb9ae496b489e8d31e570deded18c
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=33ms, rowsAffected=5
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_99beb9ae496b489e8d31e570deded18c
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=38ms, rowsAffected=5
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_99beb9ae496b489e8d31e570deded18c
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_99beb9ae496b489e8d31e570deded18c, duration=137ms, status=200
2025-08-08 18:41:16 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_be5864f5c4c749fa82b04082fc591382, requestId=req_071de6fc, url=/config-center/api/enum/get_all_enum
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_607b5ee051844a2aa730b83c3e9b0d8b, requestId=req_2d777deb, url=/config-center/api/config/page
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_be5864f5c4c749fa82b04082fc591382
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_be5864f5c4c749fa82b04082fc591382, duration=23ms, status=200
2025-08-08 18:43:50 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_607b5ee051844a2aa730b83c3e9b0d8b
2025-08-08 18:43:50 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=84ms, rowsAffected=5
2025-08-08 18:43:51 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_607b5ee051844a2aa730b83c3e9b0d8b
2025-08-08 18:43:51 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=18ms, rowsAffected=5
2025-08-08 18:43:51 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_607b5ee051844a2aa730b83c3e9b0d8b
2025-08-08 18:43:51 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_607b5ee051844a2aa730b83c3e9b0d8b, duration=133ms, status=200
2025-08-08 18:43:51 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f56ffa8c9c5547e3a229e1ed528bd9e7, requestId=req_acf9e53f, url=/config-center/api/enum/get_all_enum
2025-08-08 18:44:09 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_34aace0b5fe04d31957f431bebff45d1, requestId=req_15e5b46e, url=/config-center/api/config/page
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f56ffa8c9c5547e3a229e1ed528bd9e7
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f56ffa8c9c5547e3a229e1ed528bd9e7, duration=56ms, status=200
2025-08-08 18:44:09 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_34aace0b5fe04d31957f431bebff45d1
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=293ms, rowsAffected=5
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_34aace0b5fe04d31957f431bebff45d1
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=5
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_34aace0b5fe04d31957f431bebff45d1
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_34aace0b5fe04d31957f431bebff45d1, duration=363ms, status=200
2025-08-08 18:44:10 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:44:29 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:44:29 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:44:29 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:44:29 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8c89e91ff02b46d593c5b14c6c24f6c3, requestId=req_4d11c266, url=/config-center/api/enum/get_all_enum
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_d7a6af4b393f43c685a47f4f5bb1d8ee, requestId=req_5d00d872, url=/config-center/api/config/page
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8c89e91ff02b46d593c5b14c6c24f6c3
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8c89e91ff02b46d593c5b14c6c24f6c3, duration=24ms, status=200
2025-08-08 18:44:30 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d7a6af4b393f43c685a47f4f5bb1d8ee
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=69ms, rowsAffected=5
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_d7a6af4b393f43c685a47f4f5bb1d8ee
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=39ms, rowsAffected=5
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_d7a6af4b393f43c685a47f4f5bb1d8ee
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_d7a6af4b393f43c685a47f4f5bb1d8ee, duration=129ms, status=200
2025-08-08 18:44:30 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:44:59 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:44:59 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:44:59 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:44:59 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_8e2d31a1239b4055a65ec8a11f7eec50, requestId=req_dad4b8b7, url=/config-center/api/enum/get_all_enum
2025-08-08 18:45:00 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:45:00 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:45:00 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:45:00 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2642a48550a04d00b747218f73c356fb, requestId=req_c1b5636e, url=/config-center/api/config/page
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_8e2d31a1239b4055a65ec8a11f7eec50
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_8e2d31a1239b4055a65ec8a11f7eec50, duration=27ms, status=200
2025-08-08 18:45:00 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2642a48550a04d00b747218f73c356fb
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=363ms, rowsAffected=5
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2642a48550a04d00b747218f73c356fb
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=13ms, rowsAffected=5
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2642a48550a04d00b747218f73c356fb
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2642a48550a04d00b747218f73c356fb, duration=438ms, status=200
2025-08-08 18:45:01 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:46:14 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_ccf1b55186ac41faa2b00d4bee1a99bd, requestId=req_ed39729c, url=/config-center/api/ticket/page
2025-08-08 18:46:14 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ccf1b55186ac41faa2b00d4bee1a99bd
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=78ms, rowsAffected=2
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_ccf1b55186ac41faa2b00d4bee1a99bd
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=34ms, rowsAffected=2
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_ccf1b55186ac41faa2b00d4bee1a99bd
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_ccf1b55186ac41faa2b00d4bee1a99bd, duration=764ms, status=200
2025-08-08 18:46:15 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:47:47 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:47:47 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_e50f75725f644750a012ae105edcc6d5, requestId=req_1764d6b3, url=/config-center/api/ticket/page
2025-08-08 18:47:48 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e50f75725f644750a012ae105edcc6d5
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=79ms, rowsAffected=2
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_e50f75725f644750a012ae105edcc6d5
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=32ms, rowsAffected=2
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_e50f75725f644750a012ae105edcc6d5
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_e50f75725f644750a012ae105edcc6d5, duration=184ms, status=200
2025-08-08 18:47:48 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:49:07 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:49:07 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_4640f00b8dd94cba8fff764ea7ab1353, requestId=req_4584eeff, url=/config-center/api/ticket/page
2025-08-08 18:49:08 [http-nio-9090-exec-1] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4640f00b8dd94cba8fff764ea7ab1353
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=139ms, rowsAffected=2
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_4640f00b8dd94cba8fff764ea7ab1353
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=27ms, rowsAffected=2
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_4640f00b8dd94cba8fff764ea7ab1353
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_4640f00b8dd94cba8fff764ea7ab1353, duration=225ms, status=200
2025-08-08 18:49:08 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_0fd6bcc9c011490d9a157f65de8e4e7f, requestId=req_25dcbe7d, url=/config-center/api/ticket/page
2025-08-08 18:49:20 [http-nio-9090-exec-3] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fd6bcc9c011490d9a157f65de8e4e7f
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=30ms, rowsAffected=2
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_0fd6bcc9c011490d9a157f65de8e4e7f
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=4ms, rowsAffected=2
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_0fd6bcc9c011490d9a157f65de8e4e7f
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_0fd6bcc9c011490d9a157f65de8e4e7f, duration=56ms, status=200
2025-08-08 18:49:20 [http-nio-9090-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_2ef5cd4d23ed460e9b0d6d691a187acd, requestId=req_65f5af89, url=/config-center/api/ticket/59
2025-08-08 18:49:31 [http-nio-9090-exec-2] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_2ef5cd4d23ed460e9b0d6d691a187acd
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=46ms, rowsAffected=1
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_2ef5cd4d23ed460e9b0d6d691a187acd
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_2ef5cd4d23ed460e9b0d6d691a187acd, duration=359ms, status=200
2025-08-08 18:49:31 [http-nio-9090-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_1a09bc65fb9b48108e5b6aa2c8bf2e46, requestId=req_1c15cae2, url=/config-center/api/config/10
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_1a09bc65fb9b48108e5b6aa2c8bf2e46
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=34ms, rowsAffected=1
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_1a09bc65fb9b48108e5b6aa2c8bf2e46
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_1a09bc65fb9b48108e5b6aa2c8bf2e46, duration=279ms, status=200
2025-08-08 18:49:31 [http-nio-9090-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/59
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/59] with attributes [authenticated]
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/59
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_231315bd1d35432db2903de6723a0a4c, requestId=req_be997849, url=/config-center/api/ticket/59
2025-08-08 18:50:50 [http-nio-9090-exec-5] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：59
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_231315bd1d35432db2903de6723a0a4c
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=7ms, rowsAffected=1
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_231315bd1d35432db2903de6723a0a4c
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_231315bd1d35432db2903de6723a0a4c, duration=52ms, status=200
2025-08-08 18:50:50 [http-nio-9090-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:50:50 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 18:50:50 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_622821de83e54f0086a491767f753b89, requestId=req_77b05232, url=/config-center/api/config/10
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_622821de83e54f0086a491767f753b89
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_622821de83e54f0086a491767f753b89, duration=100ms, status=200
2025-08-08 18:50:51 [http-nio-9090-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/enum/get_all_enum
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/enum/get_all_enum] with attributes [authenticated]
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/enum/get_all_enum
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_c845e333015f4737bba6c6377c3cc134, requestId=req_0e5d64e3, url=/config-center/api/enum/get_all_enum
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_c845e333015f4737bba6c6377c3cc134
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_c845e333015f4737bba6c6377c3cc134, duration=86ms, status=200
2025-08-08 18:51:04 [http-nio-9090-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=] with attributes [authenticated]
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/page?pageNum=1&pageSize=20&groupName=&keyword=&status=
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_3a4917118b534b8b88364a7f642af7dc, requestId=req_940657aa, url=/config-center/api/config/page
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3a4917118b534b8b88364a7f642af7dc
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=search, duration=49ms, rowsAffected=5
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_3a4917118b534b8b88364a7f642af7dc
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=countByQuery, duration=21ms, rowsAffected=5
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_3a4917118b534b8b88364a7f642af7dc
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_3a4917118b534b8b88364a7f642af7dc, duration=94ms, status=200
2025-08-08 18:51:04 [http-nio-9090-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=] with attributes [authenticated]
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/page?pageNum=1&pageSize=10&title=&phase=&applicator=
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_77a6307e2c2c4688918037ad6703048f, requestId=req_6efef920, url=/config-center/api/ticket/page
2025-08-08 18:51:07 [http-nio-9090-exec-9] INFO  c.example.configcenter.controller.TicketController - 查询工单列表，参数：TicketQueryRequest(title=, phase=[], applicator=, configId=null)
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_77a6307e2c2c4688918037ad6703048f
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findByPage, duration=45ms, rowsAffected=2
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_77a6307e2c2c4688918037ad6703048f
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=count, duration=7ms, rowsAffected=2
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_77a6307e2c2c4688918037ad6703048f
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_77a6307e2c2c4688918037ad6703048f, duration=62ms, status=200
2025-08-08 18:51:07 [http-nio-9090-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/ticket/58
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/ticket/58] with attributes [authenticated]
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/ticket/58
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_6dd617c2fbce4fc5972657fbe39774a6, requestId=req_3220ed97, url=/config-center/api/ticket/58
2025-08-08 18:51:09 [http-nio-9090-exec-10] INFO  c.example.configcenter.controller.TicketController - 获取工单详情，ID：58
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=mysql-logs, traceId=trace_6dd617c2fbce4fc5972657fbe39774a6
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.MysqlInterceptor - MySQL操作完成: method=findById, duration=9ms, rowsAffected=1
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_6dd617c2fbce4fc5972657fbe39774a6
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_6dd617c2fbce4fc5972657fbe39774a6, duration=15ms, status=200
2025-08-08 18:51:09 [http-nio-9090-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/config/10
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /api/config/10] with attributes [authenticated]
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/config/10
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.ContextInterceptor - Set user email from cookie: admin@example.com
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 开始处理请求: traceId=trace_f3ee2b3045904c4faca5d319879289cf, requestId=req_7da324c6, url=/config-center/api/config/10
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG com.example.configcenter.log.LogSenderService - 异步发送日志到Kafka成功: topic=api-logs, traceId=trace_f3ee2b3045904c4faca5d319879289cf
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG c.e.configcenter.interceptor.TraceInterceptor - 请求处理完成: traceId=trace_f3ee2b3045904c4faca5d319879289cf, duration=13ms, status=200
2025-08-08 18:51:09 [http-nio-9090-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
