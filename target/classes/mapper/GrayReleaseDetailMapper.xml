<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.configcenter.mapper.GrayReleaseDetailMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.configcenter.entity.GrayReleaseDetail">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="plan_id" property="planId" jdbcType="BIGINT"/>
        <result column="config_id" property="configId" jdbcType="BIGINT"/>
        <result column="config_key" property="configKey" jdbcType="VARCHAR"/>
        <result column="old_value" property="oldValue" jdbcType="LONGVARCHAR"/>
        <result column="new_value" property="newValue" jdbcType="LONGVARCHAR"/>
        <result column="gray_value" property="grayValue" jdbcType="LONGVARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="gray_start_time" property="grayStartTime" jdbcType="BIGINT"/>
        <result column="publish_time" property="publishTime" jdbcType="BIGINT"/>
        <result column="rollback_time" property="rollbackTime" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, plan_id, config_id, config_key, old_value, new_value, gray_value, status,
        gray_start_time, publish_time, rollback_time, create_time, update_time,
        create_by, update_by, remark, del_flag
    </sql>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.example.configcenter.entity.GrayReleaseDetail" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO gray_release_detail (
            plan_id, config_id, config_key, old_value, new_value, gray_value, status, create_by
        ) VALUES (
            #{planId}, #{configId}, #{configKey}, #{oldValue}, #{newValue}, #{grayValue}, #{status}, #{createBy}
        )
    </insert>

    <!-- 批量插入 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO gray_release_detail (
            plan_id, config_id, config_key, old_value, new_value, gray_value, status, create_by
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.planId}, #{item.configId}, #{item.configKey}, #{item.oldValue}, #{item.newValue}, 
             #{item.grayValue}, #{item.status}, #{item.createBy})
        </foreach>
    </insert>

    <!-- 根据ID查询 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM gray_release_detail
        WHERE id = #{id}
    </select>

    <!-- 根据计划ID查询 -->
    <select id="selectByPlanId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM gray_release_detail
        WHERE plan_id = #{planId}
        ORDER BY create_time ASC
    </select>

    <!-- 根据计划ID和配置键查询 -->
    <select id="selectByPlanIdAndConfigKey" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM gray_release_detail
        WHERE plan_id = #{planId} AND config_key = #{configKey}
    </select>

    <!-- 更新 -->
    <update id="updateById" parameterType="com.example.configcenter.entity.GrayReleaseDetail">
        UPDATE gray_release_detail
        <set>
            <if test="oldValue != null">old_value = #{oldValue},</if>
            <if test="newValue != null">new_value = #{newValue},</if>
            <if test="grayValue != null">gray_value = #{grayValue},</if>
            <if test="status != null">status = #{status},</if>
            <if test="grayStartTime != null">gray_start_time = #{grayStartTime},</if>
            <if test="publishTime != null">publish_time = #{publishTime},</if>
            <if test="rollbackTime != null">rollback_time = #{rollbackTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量更新状态 -->
    <update id="updateStatusByPlanId">
        UPDATE gray_release_detail
        SET status = #{status}, update_by = #{updateBy}
        WHERE plan_id = #{planId}
    </update>

    <!-- 删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM gray_release_detail WHERE id = #{id}
    </delete>

    <!-- 根据计划ID删除 -->
    <delete id="deleteByPlanId" parameterType="java.lang.Long">
        DELETE FROM gray_release_detail WHERE plan_id = #{planId}
    </delete>

    <!-- 统计计划的配置数量 -->
    <select id="countByPlanId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM gray_release_detail WHERE plan_id = #{planId}
    </select>

    <!-- 统计计划的灰度配置数量 -->
    <select id="countGrayByPlanId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM gray_release_detail WHERE plan_id = #{planId} AND status = 'GRAY'
    </select>

</mapper> 